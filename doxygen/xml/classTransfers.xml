<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classTransfers" kind="class" language="C++" prot="public">
    <compoundname>Transfers</compoundname>
    <basecompoundref refid="classDroughtMitigationPolicy" prot="public" virt="non-virtual">DroughtMitigationPolicy</basecompoundref>
    <includes refid="Transfers_8h" local="no">Transfers.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classTransfers_1a4513cfef08bd7e9980d098f8fb7d6a32" prot="private" static="no" mutable="no">
        <type>const int</type>
        <definition>const int Transfers::source_utility_id</definition>
        <argsstring></argsstring>
        <name>source_utility_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/DroughtMitigationInstruments/Transfers.h" line="15" column="1" bodyfile="src/DroughtMitigationInstruments/Transfers.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classTransfers_1a69a7ec8b065b9c807e2256f205a3d41e" prot="private" static="no" mutable="no">
        <type>const double</type>
        <definition>const double Transfers::source_treatment_buffer</definition>
        <argsstring></argsstring>
        <name>source_treatment_buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/DroughtMitigationInstruments/Transfers.h" line="16" column="1" bodyfile="src/DroughtMitigationInstruments/Transfers.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classTransfers_1a7715c87efbee763488d6fcc4674f2523" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Transfers::average_pipe_capacity</definition>
        <argsstring></argsstring>
        <name>average_pipe_capacity</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/DroughtMitigationInstruments/Transfers.h" line="17" column="1" bodyfile="src/DroughtMitigationInstruments/Transfers.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classTransfers_1a039a24fe986a718da1ac61bac0e49644" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Transfers::transfer_water_source_id</definition>
        <argsstring></argsstring>
        <name>transfer_water_source_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/DroughtMitigationInstruments/Transfers.h" line="18" column="1" bodyfile="src/DroughtMitigationInstruments/Transfers.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classTransfers_1a420b61c6ff119fef48a39a39ae4e0958" prot="private" static="no" mutable="no">
        <type>vector&lt; int &gt;</type>
        <definition>vector&lt;int&gt; Transfers::util_id_to_vertex_id</definition>
        <argsstring></argsstring>
        <name>util_id_to_vertex_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/DroughtMitigationInstruments/Transfers.h" line="20" column="1" bodyfile="src/DroughtMitigationInstruments/Transfers.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classTransfers_1a55506f9588e0132ffcad1cf0036a83af" prot="private" static="no" mutable="no">
        <type>vector&lt; int &gt;</type>
        <definition>vector&lt;int&gt; Transfers::buyers_ids</definition>
        <argsstring></argsstring>
        <name>buyers_ids</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/DroughtMitigationInstruments/Transfers.h" line="21" column="1" bodyfile="src/DroughtMitigationInstruments/Transfers.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classTransfers_1ad956149e16363b5a04fd0a4f6efb3a61" prot="private" static="no" mutable="no">
        <type>vector&lt; double &gt;</type>
        <definition>vector&lt;double&gt; Transfers::allocations</definition>
        <argsstring></argsstring>
        <name>allocations</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/DroughtMitigationInstruments/Transfers.h" line="22" column="1" bodyfile="src/DroughtMitigationInstruments/Transfers.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classTransfers_1a2989642c0fe0544dd9345d45042933d5" prot="private" static="no" mutable="no">
        <type>vector&lt; double &gt;</type>
        <definition>vector&lt;double&gt; Transfers::conveyed_volumes</definition>
        <argsstring></argsstring>
        <name>conveyed_volumes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/DroughtMitigationInstruments/Transfers.h" line="23" column="1" bodyfile="src/DroughtMitigationInstruments/Transfers.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classTransfers_1a6eab429701a7e1dc857675cc8571589c" prot="private" static="no" mutable="no">
        <type>vector&lt; double &gt;</type>
        <definition>vector&lt;double&gt; Transfers::buyers_transfer_triggers</definition>
        <argsstring></argsstring>
        <name>buyers_transfer_triggers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/DroughtMitigationInstruments/Transfers.h" line="24" column="1" bodyfile="src/DroughtMitigationInstruments/Transfers.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classTransfers_1af4ef4c75d49dfb3aee476c0695ff41d5" prot="private" static="no" mutable="no">
        <type>vector&lt; double &gt;</type>
        <definition>vector&lt;double&gt; Transfers::flow_rates_and_allocations</definition>
        <argsstring></argsstring>
        <name>flow_rates_and_allocations</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/DroughtMitigationInstruments/Transfers.h" line="25" column="1" bodyfile="src/DroughtMitigationInstruments/Transfers.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classTransfers_1a8c84c081f069f6835e9dd12a460d90eb" prot="private" static="no" mutable="no">
        <type><ref refid="classUtility" kindref="compound">Utility</ref> *</type>
        <definition>Utility* Transfers::source_utility</definition>
        <argsstring></argsstring>
        <name>source_utility</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/DroughtMitigationInstruments/Transfers.h" line="26" column="1" bodyfile="src/DroughtMitigationInstruments/Transfers.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classTransfers_1a6a23dc463d7a4b07bcb7f3a7472263b2" prot="private" static="no" mutable="no">
        <type><ref refid="classWaterSource" kindref="compound">WaterSource</ref> *</type>
        <definition>WaterSource* Transfers::transfer_water_source</definition>
        <argsstring></argsstring>
        <name>transfer_water_source</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/DroughtMitigationInstruments/Transfers.h" line="27" column="1" bodyfile="src/DroughtMitigationInstruments/Transfers.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classTransfers_1aec57a6a75061f18404e30d8e48c45ffd" prot="private" static="no" mutable="no">
        <type><ref refid="classMatrix" kindref="compound">Matrix</ref>&lt; double &gt;</type>
        <definition>Matrix&lt;double&gt; Transfers::H</definition>
        <argsstring></argsstring>
        <name>H</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/DroughtMitigationInstruments/Transfers.h" line="28" column="1" bodyfile="src/DroughtMitigationInstruments/Transfers.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classTransfers_1a1c2d27eb4e9294e32f04b5e7d929e71f" prot="private" static="no" mutable="no">
        <type><ref refid="classMatrix" kindref="compound">Matrix</ref>&lt; double &gt;</type>
        <definition>Matrix&lt;double&gt; Transfers::Aeq</definition>
        <argsstring></argsstring>
        <name>Aeq</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/DroughtMitigationInstruments/Transfers.h" line="28" column="1" bodyfile="src/DroughtMitigationInstruments/Transfers.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classTransfers_1a2acc8cfe6a1978d2468be289db636226" prot="private" static="no" mutable="no">
        <type><ref refid="classMatrix" kindref="compound">Matrix</ref>&lt; double &gt;</type>
        <definition>Matrix&lt;double&gt; Transfers::A</definition>
        <argsstring></argsstring>
        <name>A</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/DroughtMitigationInstruments/Transfers.h" line="28" column="1" bodyfile="src/DroughtMitigationInstruments/Transfers.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classTransfers_1a77db57256093921b04035c1e38a20060" prot="private" static="no" mutable="no">
        <type><ref refid="classVector" kindref="compound">Vector</ref>&lt; double &gt;</type>
        <definition>Vector&lt;double&gt; Transfers::f</definition>
        <argsstring></argsstring>
        <name>f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/DroughtMitigationInstruments/Transfers.h" line="29" column="1" bodyfile="src/DroughtMitigationInstruments/Transfers.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classTransfers_1a39d45672a21ce1a45925eceea79b921a" prot="private" static="no" mutable="no">
        <type><ref refid="classVector" kindref="compound">Vector</ref>&lt; double &gt;</type>
        <definition>Vector&lt;double&gt; Transfers::beq</definition>
        <argsstring></argsstring>
        <name>beq</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/DroughtMitigationInstruments/Transfers.h" line="29" column="1" bodyfile="src/DroughtMitigationInstruments/Transfers.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classTransfers_1a24e66988fb2e50d151859813fda2e740" prot="private" static="no" mutable="no">
        <type><ref refid="classVector" kindref="compound">Vector</ref>&lt; double &gt;</type>
        <definition>Vector&lt;double&gt; Transfers::b</definition>
        <argsstring></argsstring>
        <name>b</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/DroughtMitigationInstruments/Transfers.h" line="29" column="1" bodyfile="src/DroughtMitigationInstruments/Transfers.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classTransfers_1a22f332495395f41b340e370535a6b27a" prot="private" static="no" mutable="no">
        <type><ref refid="classVector" kindref="compound">Vector</ref>&lt; double &gt;</type>
        <definition>Vector&lt;double&gt; Transfers::allocations_aux</definition>
        <argsstring></argsstring>
        <name>allocations_aux</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/DroughtMitigationInstruments/Transfers.h" line="29" column="1" bodyfile="src/DroughtMitigationInstruments/Transfers.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classTransfers_1a10e5cae64016e52eca5dccc8e01e9791" prot="private" static="no" mutable="no">
        <type><ref refid="classVector" kindref="compound">Vector</ref>&lt; double &gt;</type>
        <definition>Vector&lt;double&gt; Transfers::lb</definition>
        <argsstring></argsstring>
        <name>lb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/DroughtMitigationInstruments/Transfers.h" line="29" column="1" bodyfile="src/DroughtMitigationInstruments/Transfers.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classTransfers_1aab0d3f08ed2897d9a74c9970612231d5" prot="private" static="no" mutable="no">
        <type><ref refid="classVector" kindref="compound">Vector</ref>&lt; double &gt;</type>
        <definition>Vector&lt;double&gt; Transfers::ub</definition>
        <argsstring></argsstring>
        <name>ub</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/DroughtMitigationInstruments/Transfers.h" line="29" column="1" bodyfile="src/DroughtMitigationInstruments/Transfers.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classTransfers_1a40555bc28e085d0e119a9f039317c79f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Transfers::Transfers</definition>
        <argsstring>(const int id, const int source_utility_id, int transfer_water_source_id, const double source_treatment_buffer, const vector&lt; int &gt; &amp;buyers_ids, const vector&lt; double &gt; &amp;pipe_transfer_capacities, const vector&lt; double &gt; &amp;buyers_transfer_triggers, const Graph utilities_graph, vector&lt; double &gt; conveyance_costs, vector&lt; int &gt; pipe_owner)</argsstring>
        <name>Transfers</name>
        <param>
          <type>const int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>source_utility_id</declname>
        </param>
        <param>
          <type>int</type>
          <declname>transfer_water_source_id</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>source_treatment_buffer</declname>
        </param>
        <param>
          <type>const vector&lt; int &gt; &amp;</type>
          <declname>buyers_ids</declname>
        </param>
        <param>
          <type>const vector&lt; double &gt; &amp;</type>
          <declname>pipe_transfer_capacities</declname>
        </param>
        <param>
          <type>const vector&lt; double &gt; &amp;</type>
          <declname>buyers_transfer_triggers</declname>
        </param>
        <param>
          <type>const <ref refid="classGraph" kindref="compound">Graph</ref></type>
          <declname>utilities_graph</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>conveyance_costs</declname>
        </param>
        <param>
          <type>vector&lt; int &gt;</type>
          <declname>pipe_owner</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allocates transfers by trying to minimize the mean square error between the optimal allocations and allocation requests, and between the available amount of water from source and actual conveyed capacity, which is limited by pipe conveyance capacities.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>transfer policy ID. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>source_utility_id</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of source utility. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>source_treatment_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>treatment capacity to be left unused in source utility. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buyers_ids</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pipe_transfer_capacities</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buyers_transfer_triggers</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>conveyance_costs</parametername>
</parameternamelist>
<parameterdescription>
<para>amount charged by pipe owning utility to convey water to another utility. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pipe_owner</parametername>
</parameternamelist>
<parameterdescription>
<para>id of utility owning each pipe.</para></parameterdescription>
</parameteritem>
</parameterlist>
<xrefsect id="todo_1_todo000004"><xreftitle>Todo</xreftitle><xrefdescription><para>add the possibility of two or more sources. </para><para>add the possibility of having a pipe belong to a utility not in the transfer agreement. This can be accomplished now by adding utility to transfer agreement and set its risk of failure to 1.1 or more. </para><para>calculation and charge of wheeling fees. </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
<para>Map buyer&apos;s IDs to vertexes ID starting from 0 for the sake of determining payments. <linebreak/>
<linebreak/>
<linebreak/>
<linebreak/>
<linebreak/>
<linebreak/>
 Create QP matrices and vectors. min f(x) = 1/2 x G x&apos; + g0 x&apos; s.t. CE.x = ce0 CI.x &gt;= ci0 lb &lt;= x &lt;= ub <linebreak/>
<linebreak/>
<linebreak/>
<linebreak/>
<linebreak/>
 Create g0 vector of 0&apos;s to be filled when policy is applied.</para><para>size is number of variables x number of utilities (source + requesting utilities). Continuity matrix: +1 for flow entering utility and -1 for leaving. <linebreak/>
<linebreak/>
<linebreak/>
 Create ce0 vector of 0 so that mass balance is enforced on the nodes (utilities). <linebreak/>
<linebreak/>
 Create empty CI and ci0. They&apos;ll be re-dimensioned in the QP solver.</para><para>Fill in pipe capacities part of lower and upper bound vectors. </para>        </inbodydescription>
        <location file="src/DroughtMitigationInstruments/Transfers.h" line="33" column="1" bodyfile="src/DroughtMitigationInstruments/Transfers.cpp" bodystart="34" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classTransfers_1af88f7908692240eec9f3179128c6f343" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Transfers::Transfers</definition>
        <argsstring>(const Transfers &amp;transfers)</argsstring>
        <name>Transfers</name>
        <param>
          <type>const <ref refid="classTransfers" kindref="compound">Transfers</ref> &amp;</type>
          <declname>transfers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy constructor <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>transfers</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/DroughtMitigationInstruments/Transfers.h" line="42" column="1" bodyfile="src/DroughtMitigationInstruments/Transfers.cpp" bodystart="127" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classTransfers_1a6c687c9f767ea915eead1f5db18711a2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const vector&lt; double &gt; &amp;</type>
        <definition>const vector&lt; double &gt; &amp; Transfers::getAllocations</definition>
        <argsstring>() const</argsstring>
        <name>getAllocations</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/DroughtMitigationInstruments/Transfers.h" line="44" column="1" bodyfile="src/DroughtMitigationInstruments/Transfers.cpp" bodystart="384" bodyend="386"/>
      </memberdef>
      <memberdef kind="function" id="classTransfers_1a5dfeafe7a9b9a446b1ab746b65ef3b4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Transfers::~Transfers</definition>
        <argsstring>()</argsstring>
        <name>~Transfers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/DroughtMitigationInstruments/Transfers.h" line="46" column="1" bodyfile="src/DroughtMitigationInstruments/Transfers.cpp" bodystart="156" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="classTransfers_1ad9e4e83ff763ac1ba518a19051cd2e69" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Transfers::applyPolicy</definition>
        <argsstring>(int week) override</argsstring>
        <name>applyPolicy</name>
        <reimplements refid="classDroughtMitigationPolicy_1a76c1a85eaf7707306fe173b6437cc31d">applyPolicy</reimplements>
        <param>
          <type>int</type>
          <declname>week</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Get summation of rofs of utilities needing transfers. This is for splitting the available flow rate and for checking weather any transfers will be needed.</para><para>Check if transfers will be needed and, if so, perform the transfers.</para><para>Total volume available for transfers in source utility.</para><para>Minimum volume to be allocated to any utility.</para><para>Split up total volume available among the utilities proportionally to their ROFs. <linebreak/>
<linebreak/>
 Calculate allocations and flow rates through inter-utility connections. <linebreak/>
 Mitigate demands. </para>        </inbodydescription>
        <location file="src/DroughtMitigationInstruments/Transfers.h" line="48" column="1" bodyfile="src/DroughtMitigationInstruments/Transfers.cpp" bodystart="188" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="classTransfers_1a3c1930dbeb1273c1c0be93ad5ca57357" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Transfers::addSystemComponents</definition>
        <argsstring>(vector&lt; Utility *&gt; system_utilities, vector&lt; WaterSource *&gt; water_sources, vector&lt; MinEnvFlowControl *&gt; min_env_flow_controls) override</argsstring>
        <name>addSystemComponents</name>
        <reimplements refid="classDroughtMitigationPolicy_1aaab042a79d781afe8e08753b7012372a">addSystemComponents</reimplements>
        <param>
          <type>vector&lt; <ref refid="classUtility" kindref="compound">Utility</ref> *&gt;</type>
          <declname>system_utilities</declname>
        </param>
        <param>
          <type>vector&lt; <ref refid="classWaterSource" kindref="compound">WaterSource</ref> *&gt;</type>
          <declname>water_sources</declname>
        </param>
        <param>
          <type>vector&lt; <ref refid="classMinEnvFlowControl" kindref="compound">MinEnvFlowControl</ref> *&gt;</type>
          <declname>min_env_flow_controls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds source and buying utility. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>system_utilities</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classUtility" kindref="compound">Utility</ref> to be added. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/DroughtMitigationInstruments/Transfers.h" line="50" column="1" bodyfile="src/DroughtMitigationInstruments/Transfers.cpp" bodystart="165" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="classTransfers_1a156baa248ab355c895a0a2f9e5f2742a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>vector&lt; double &gt;</type>
        <definition>vector&lt; double &gt; Transfers::solve_QP</definition>
        <argsstring>(vector&lt; double &gt; allocation_requests, double available_transfer_volume, double min_transfer_volume, int week)</argsstring>
        <name>solve_QP</name>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>allocation_requests</declname>
        </param>
        <param>
          <type>double</type>
          <declname>available_transfer_volume</declname>
        </param>
        <param>
          <type>double</type>
          <declname>min_transfer_volume</declname>
        </param>
        <param>
          <type>int</type>
          <declname>week</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Solves Quadratic Programming problem to find optimal allocations given transfer requests and constraints in conveyance capacities. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>allocation_requests</parametername>
</parameternamelist>
<parameterdescription>
<para>allocations requested by each utility (0 for utilities not requesting transfers). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>available_transfer_volume</parametername>
</parameternamelist>
<parameterdescription>
<para>Total volume available for transfer from source utility. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>min_transfer_volume</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum transfer to be made to each utility. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
<para>Set g0 vector to allocated to 2 * target_allocation.</para><para>Set allocation bounds to 0 if no allocation is requested, and to available transfer volume otherwise. <linebreak/>
<linebreak/>
<linebreak/>
<linebreak/>
<linebreak/>
 Set upper bound of the last utility (source) to total amount of water available. This allows for a smaller transferred volume, in case pipes cannot convey full amount available, but sets the cap as total amount available. <linebreak/>
<linebreak/>
<linebreak/>
<linebreak/>
 Prevent minimum allocation from being more than capacity of pipes connected to utility. If it happens, decrease it to half of the sum of adjacent pipes capacities so that it avoid issues with bottle-necks through the network. The factor of 2 can be changed to any number smaller than 1. <linebreak/>
<linebreak/>
<linebreak/>
 Initialize allocations vector with 0s.</para><para>Run quadratic programming solver.</para><para>Convert <ref refid="classVector" kindref="compound">Vector</ref> x into a vector. </para>        </inbodydescription>
        <location file="src/DroughtMitigationInstruments/Transfers.h" line="55" column="1" bodyfile="src/DroughtMitigationInstruments/Transfers.cpp" bodystart="299" bodyend="382"/>
      </memberdef>
      <memberdef kind="function" id="classTransfers_1a75342a7c14b2ff69eb2520de240a1131" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Transfers::setRealization</definition>
        <argsstring>(unsigned long realization_id, vector&lt; double &gt; &amp;utilities_rdm, vector&lt; double &gt; &amp;water_sources_rdm, vector&lt; double &gt; &amp;policy_rdm) override</argsstring>
        <name>setRealization</name>
        <reimplements refid="classDroughtMitigationPolicy_1a5d2033543cacca1e412eebef5106eab4">setRealization</reimplements>
        <param>
          <type>unsigned long</type>
          <declname>realization_id</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; &amp;</type>
          <declname>utilities_rdm</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; &amp;</type>
          <declname>water_sources_rdm</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; &amp;</type>
          <declname>policy_rdm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/DroughtMitigationInstruments/Transfers.h" line="58" column="1" bodyfile="src/DroughtMitigationInstruments/Transfers.cpp" bodystart="388" bodyend="391"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="218">
        <label>Transfers</label>
        <link refid="classTransfers"/>
        <childnode refid="219" relation="public-inheritance">
        </childnode>
      </node>
      <node id="219">
        <label>DroughtMitigationPolicy</label>
        <link refid="classDroughtMitigationPolicy"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="220">
        <label>Transfers</label>
        <link refid="classTransfers"/>
        <childnode refid="221" relation="public-inheritance">
        </childnode>
      </node>
      <node id="221">
        <label>DroughtMitigationPolicy</label>
        <link refid="classDroughtMitigationPolicy"/>
      </node>
    </collaborationgraph>
    <location file="src/DroughtMitigationInstruments/Transfers.h" line="12" column="1" bodyfile="src/DroughtMitigationInstruments/Transfers.h" bodystart="12" bodyend="61"/>
    <listofallmembers>
      <member refid="classTransfers_1a2acc8cfe6a1978d2468be289db636226" prot="private" virt="non-virtual"><scope>Transfers</scope><name>A</name></member>
      <member refid="classTransfers_1a3c1930dbeb1273c1c0be93ad5ca57357" prot="public" virt="virtual"><scope>Transfers</scope><name>addSystemComponents</name></member>
      <member refid="classTransfers_1a1c2d27eb4e9294e32f04b5e7d929e71f" prot="private" virt="non-virtual"><scope>Transfers</scope><name>Aeq</name></member>
      <member refid="classTransfers_1ad956149e16363b5a04fd0a4f6efb3a61" prot="private" virt="non-virtual"><scope>Transfers</scope><name>allocations</name></member>
      <member refid="classTransfers_1a22f332495395f41b340e370535a6b27a" prot="private" virt="non-virtual"><scope>Transfers</scope><name>allocations_aux</name></member>
      <member refid="classTransfers_1ad9e4e83ff763ac1ba518a19051cd2e69" prot="public" virt="virtual"><scope>Transfers</scope><name>applyPolicy</name></member>
      <member refid="classTransfers_1a7715c87efbee763488d6fcc4674f2523" prot="private" virt="non-virtual"><scope>Transfers</scope><name>average_pipe_capacity</name></member>
      <member refid="classTransfers_1a24e66988fb2e50d151859813fda2e740" prot="private" virt="non-virtual"><scope>Transfers</scope><name>b</name></member>
      <member refid="classTransfers_1a39d45672a21ce1a45925eceea79b921a" prot="private" virt="non-virtual"><scope>Transfers</scope><name>beq</name></member>
      <member refid="classTransfers_1a55506f9588e0132ffcad1cf0036a83af" prot="private" virt="non-virtual"><scope>Transfers</scope><name>buyers_ids</name></member>
      <member refid="classTransfers_1a6eab429701a7e1dc857675cc8571589c" prot="private" virt="non-virtual"><scope>Transfers</scope><name>buyers_transfer_triggers</name></member>
      <member refid="classTransfers_1a2989642c0fe0544dd9345d45042933d5" prot="private" virt="non-virtual"><scope>Transfers</scope><name>conveyed_volumes</name></member>
      <member refid="classDroughtMitigationPolicy_1aaf0715876ce33a75c7db92e50523ea0c" prot="protected" virt="non-virtual"><scope>Transfers</scope><name>DroughtMitigationPolicy</name></member>
      <member refid="classDroughtMitigationPolicy_1a00cce0117a5bc0c446727e0c0c59a8df" prot="public" virt="non-virtual"><scope>Transfers</scope><name>DroughtMitigationPolicy</name></member>
      <member refid="classTransfers_1a77db57256093921b04035c1e38a20060" prot="private" virt="non-virtual"><scope>Transfers</scope><name>f</name></member>
      <member refid="classTransfers_1af4ef4c75d49dfb3aee476c0695ff41d5" prot="private" virt="non-virtual"><scope>Transfers</scope><name>flow_rates_and_allocations</name></member>
      <member refid="classTransfers_1a6c687c9f767ea915eead1f5db18711a2" prot="public" virt="non-virtual"><scope>Transfers</scope><name>getAllocations</name></member>
      <member refid="classDroughtMitigationPolicy_1a685ce7eacb01cb262d7e5245a736aa38" prot="protected" virt="non-virtual"><scope>Transfers</scope><name>getRofFromRealizationTable</name></member>
      <member refid="classDroughtMitigationPolicy_1aad53e4f995e3fe18b580f39d15daeefc" prot="public" virt="non-virtual"><scope>Transfers</scope><name>getUtilities_ids</name></member>
      <member refid="classTransfers_1aec57a6a75061f18404e30d8e48c45ffd" prot="private" virt="non-virtual"><scope>Transfers</scope><name>H</name></member>
      <member refid="classDroughtMitigationPolicy_1abf3ed19ed98e0d74dc9ae24094be640b" prot="public" virt="non-virtual"><scope>Transfers</scope><name>id</name></member>
      <member refid="classTransfers_1a10e5cae64016e52eca5dccc8e01e9791" prot="private" virt="non-virtual"><scope>Transfers</scope><name>lb</name></member>
      <member refid="classDroughtMitigationPolicy_1a0bf7d0fa94377ae6814e529daf0204c4" prot="public" virt="non-virtual"><scope>Transfers</scope><name>operator&lt;</name></member>
      <member refid="classDroughtMitigationPolicy_1a576d3ddb09dc9372898a63c0949d08a6" prot="public" virt="non-virtual"><scope>Transfers</scope><name>operator&gt;</name></member>
      <member refid="classDroughtMitigationPolicy_1a4c5a2dc2aa3a1c7550cdb17045e1fef3" prot="protected" virt="non-virtual"><scope>Transfers</scope><name>rdm_factors_all</name></member>
      <member refid="classDroughtMitigationPolicy_1abef5c917bbc076514fe61bfebbd0e4fc" prot="protected" virt="non-virtual"><scope>Transfers</scope><name>rdm_factors_realization</name></member>
      <member refid="classDroughtMitigationPolicy_1af583979405bc5d530ee576df8a6e9324" prot="protected" virt="non-virtual"><scope>Transfers</scope><name>realization_min_env_flow_controls</name></member>
      <member refid="classDroughtMitigationPolicy_1af6e5787a58017804d8598effbeeaba8e" prot="protected" virt="non-virtual"><scope>Transfers</scope><name>realization_utilities</name></member>
      <member refid="classDroughtMitigationPolicy_1ae2104e99c421513902ba66d012484c0e" prot="protected" virt="non-virtual"><scope>Transfers</scope><name>realization_water_sources</name></member>
      <member refid="classTransfers_1a75342a7c14b2ff69eb2520de240a1131" prot="public" virt="virtual"><scope>Transfers</scope><name>setRealization</name></member>
      <member refid="classDroughtMitigationPolicy_1a75710a6ab73213223222b3472f9251c0" prot="public" virt="non-virtual"><scope>Transfers</scope><name>setStorage_to_rof_table_</name></member>
      <member refid="classTransfers_1a156baa248ab355c895a0a2f9e5f2742a" prot="public" virt="non-virtual"><scope>Transfers</scope><name>solve_QP</name></member>
      <member refid="classTransfers_1a69a7ec8b065b9c807e2256f205a3d41e" prot="private" virt="non-virtual"><scope>Transfers</scope><name>source_treatment_buffer</name></member>
      <member refid="classTransfers_1a8c84c081f069f6835e9dd12a460d90eb" prot="private" virt="non-virtual"><scope>Transfers</scope><name>source_utility</name></member>
      <member refid="classTransfers_1a4513cfef08bd7e9980d098f8fb7d6a32" prot="private" virt="non-virtual"><scope>Transfers</scope><name>source_utility_id</name></member>
      <member refid="classTransfers_1a6a23dc463d7a4b07bcb7f3a7472263b2" prot="private" virt="non-virtual"><scope>Transfers</scope><name>transfer_water_source</name></member>
      <member refid="classTransfers_1a039a24fe986a718da1ac61bac0e49644" prot="private" virt="non-virtual"><scope>Transfers</scope><name>transfer_water_source_id</name></member>
      <member refid="classTransfers_1a40555bc28e085d0e119a9f039317c79f" prot="public" virt="non-virtual"><scope>Transfers</scope><name>Transfers</name></member>
      <member refid="classTransfers_1af88f7908692240eec9f3179128c6f343" prot="public" virt="non-virtual"><scope>Transfers</scope><name>Transfers</name></member>
      <member refid="classDroughtMitigationPolicy_1aaea5016d1462bec889cb8df85aececc6" prot="public" virt="non-virtual"><scope>Transfers</scope><name>type</name></member>
      <member refid="classTransfers_1aab0d3f08ed2897d9a74c9970612231d5" prot="private" virt="non-virtual"><scope>Transfers</scope><name>ub</name></member>
      <member refid="classDroughtMitigationPolicy_1ace2a2425f6608c34a3189c11445978a1" prot="protected" virt="non-virtual"><scope>Transfers</scope><name>use_imported_tables</name></member>
      <member refid="classTransfers_1a420b61c6ff119fef48a39a39ae4e0958" prot="private" virt="non-virtual"><scope>Transfers</scope><name>util_id_to_vertex_id</name></member>
      <member refid="classDroughtMitigationPolicy_1ad19fbc5a9fdf17ed50c0ba0b99d47eca" prot="protected" virt="non-virtual"><scope>Transfers</scope><name>utilities_ids</name></member>
      <member refid="classDroughtMitigationPolicy_1a91ff1ca816dcb044e1e10a6c2a8e56a0" prot="public" virt="virtual"><scope>Transfers</scope><name>~DroughtMitigationPolicy</name></member>
      <member refid="classTransfers_1a5dfeafe7a9b9a446b1ab746b65ef3b4b" prot="public" virt="non-virtual"><scope>Transfers</scope><name>~Transfers</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
