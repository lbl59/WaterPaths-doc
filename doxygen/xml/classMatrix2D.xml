<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classMatrix2D" kind="class" language="C++" prot="public">
    <compoundname>Matrix2D</compoundname>
    <includes refid="Matrices_8h" local="no">Matrices.h</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classMatrix2D_1ad9c316f4e27753ab30164f90f9dfaee9" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Matrix2D&lt; T &gt;::di_</definition>
        <argsstring></argsstring>
        <name>di_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Utils/Matrices.h" line="19" column="1" bodyfile="src/Utils/Matrices.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMatrix2D_1a69fb005b681e8740654e28616560a780" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Matrix2D&lt; T &gt;::dj_</definition>
        <argsstring></argsstring>
        <name>dj_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Utils/Matrices.h" line="19" column="1" bodyfile="src/Utils/Matrices.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMatrix2D_1af6db5a4e311ea727f52f16a7fb15a055" prot="private" static="no" mutable="no">
        <type>unique_ptr&lt; T[]&gt;</type>
        <definition>unique_ptr&lt;T[]&gt; Matrix2D&lt; T &gt;::data_</definition>
        <argsstring></argsstring>
        <name>data_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Utils/Matrices.h" line="20" column="1" bodyfile="src/Utils/Matrices.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMatrix2D_1a4138aec11153780128a8d93a3ef06576" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Matrix2D&lt; T &gt;::not_initialized</definition>
        <argsstring></argsstring>
        <name>not_initialized</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Utils/Matrices.h" line="21" column="1" bodyfile="src/Utils/Matrices.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classMatrix2D_1a950bb2aa76c86e057d91f430d5a27b57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Matrix2D&lt; T &gt;::Matrix2D</definition>
        <argsstring>()</argsstring>
        <name>Matrix2D</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Utils/Matrices.h" line="23" column="1" bodyfile="src/Utils/Matrices.h" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix2D_1ac93acc71341e612cf8b23d4308c561f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Matrix2D&lt; T &gt;::Matrix2D</definition>
        <argsstring>(int di, int dj)</argsstring>
        <name>Matrix2D</name>
        <param>
          <type>int</type>
          <declname>di</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Utils/Matrices.h" line="25" column="1" bodyfile="src/Utils/Matrices.h" bodystart="59" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix2D_1abcb61863666c4e17352c9fd2fc0a254a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T &amp; Matrix2D&lt; T &gt;::operator()</definition>
        <argsstring>(int i, int j)</argsstring>
        <name>operator()</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Utils/Matrices.h" line="27" column="1" bodyfile="src/Utils/Matrices.h" bodystart="113" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix2D_1a1a14d98d090d0d1cbda97a8fa797f1c5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T Matrix2D&lt; T &gt;::operator()</definition>
        <argsstring>(int i, int j) const</argsstring>
        <name>operator()</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Utils/Matrices.h" line="28" column="1" bodyfile="src/Utils/Matrices.h" bodystart="124" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix2D_1a6b86d001220161af2136ba49fd8b26b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Matrix2D&lt; T &gt;::~Matrix2D</definition>
        <argsstring>()</argsstring>
        <name>~Matrix2D</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Utils/Matrices.h" line="30" column="1" bodyfile="src/Utils/Matrices.h" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix2D_1aa1d3642d7cea07adac1a7bd83586d292" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Matrix2D&lt; T &gt;::Matrix2D</definition>
        <argsstring>(const Matrix2D &amp;m)</argsstring>
        <name>Matrix2D</name>
        <param>
          <type>const <ref refid="classMatrix2D" kindref="compound">Matrix2D</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Utils/Matrices.h" line="31" column="1" bodyfile="src/Utils/Matrices.h" bodystart="67" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix2D_1a17597829237784fa6089a23b7accb631" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMatrix2D" kindref="compound">Matrix2D</ref>&lt; T &gt; &amp;</type>
        <definition>Matrix2D&lt; T &gt; &amp; Matrix2D&lt; T &gt;::operator=</definition>
        <argsstring>(const Matrix2D&lt; T &gt; &amp;m)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classMatrix2D" kindref="compound">Matrix2D</ref>&lt; T &gt; &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Utils/Matrices.h" line="32" column="1" bodyfile="src/Utils/Matrices.h" bodystart="81" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix2D_1a05b92232d9a5e7b76c4d4c1508ae2e12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMatrix2D" kindref="compound">Matrix2D</ref>&lt; T &gt; &amp;</type>
        <definition>Matrix2D&lt; T &gt; &amp; Matrix2D&lt; T &gt;::operator+=</definition>
        <argsstring>(const Matrix2D&lt; T &gt; &amp;m)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classMatrix2D" kindref="compound">Matrix2D</ref>&lt; T &gt; &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Utils/Matrices.h" line="33" column="1" bodyfile="src/Utils/Matrices.h" bodystart="92" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix2D_1a48122f2fa79bf511d0c4e143dcdb0cf0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMatrix2D" kindref="compound">Matrix2D</ref>&lt; T &gt; &amp;</type>
        <definition>Matrix2D&lt; T &gt; &amp; Matrix2D&lt; T &gt;::operator/</definition>
        <argsstring>(const double m)</argsstring>
        <name>operator/</name>
        <param>
          <type>const double</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Utils/Matrices.h" line="35" column="1" bodyfile="src/Utils/Matrices.h" bodystart="104" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix2D_1a1a646829a2e9d166e0e47439de633b95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Matrix2D&lt; T &gt;::reset</definition>
        <argsstring>(T value)</argsstring>
        <name>reset</name>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Utils/Matrices.h" line="37" column="1" bodyfile="src/Utils/Matrices.h" bodystart="165" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix2D_1a27ccf42f23c568b2397b744ec32a41d1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Matrix2D&lt; T &gt;::print</definition>
        <argsstring>(int i) const</argsstring>
        <name>print</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Utils/Matrices.h" line="39" column="1" bodyfile="src/Utils/Matrices.h" bodystart="135" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix2D_1a9d44e60eef0274c20ed9bd1f597c89eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Matrix2D&lt; T &gt;::get_i</definition>
        <argsstring>()</argsstring>
        <name>get_i</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Utils/Matrices.h" line="41" column="1" bodyfile="src/Utils/Matrices.h" bodystart="170" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix2D_1a30918dfce713408a9b3188bea33dbb57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Matrix2D&lt; T &gt;::get_j</definition>
        <argsstring>()</argsstring>
        <name>get_j</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Utils/Matrices.h" line="43" column="1" bodyfile="src/Utils/Matrices.h" bodystart="175" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix2D_1a5fd8ff857d4554c8fed6ca1ca2f1e87d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Matrix2D&lt; T &gt;::empty</definition>
        <argsstring>()</argsstring>
        <name>empty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Utils/Matrices.h" line="45" column="1" bodyfile="src/Utils/Matrices.h" bodystart="180" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix2D_1a4c959b3c3807e9ca4d8d62f3e516b933" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Matrix2D&lt; T &gt;::setPartialData</definition>
        <argsstring>(int i, T *data, int length)</argsstring>
        <name>setPartialData</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Utils/Matrices.h" line="47" column="1" bodyfile="src/Utils/Matrices.h" bodystart="153" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix2D_1a28515c515652637734a22a3440e80258" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Matrix2D&lt; T &gt;::setData</definition>
        <argsstring>(T *data, int length)</argsstring>
        <name>setData</name>
        <param>
          <type>T *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Utils/Matrices.h" line="49" column="1" bodyfile="src/Utils/Matrices.h" bodystart="143" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix2D_1ac3d6fbe385374e65ce00a34be5a7d323" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>T *</type>
        <definition>T * Matrix2D&lt; T &gt;::getPointerToElement</definition>
        <argsstring>(int i, int j) const</argsstring>
        <name>getPointerToElement</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Utils/Matrices.h" line="51" column="1" bodyfile="src/Utils/Matrices.h" bodystart="160" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix2D_1a2bd34bc1808af36aa3dce5af143ce304" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Matrix2D&lt; T &gt;::add_to_position</definition>
        <argsstring>(int i, int j, T *data, int length)</argsstring>
        <name>add_to_position</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Utils/Matrices.h" line="53" column="1" bodyfile="src/Utils/Matrices.h" bodystart="185" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix2D_1a2cd319270ca890e47dad636b9af34a11" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const vector&lt; vector&lt; T &gt; &gt;</type>
        <definition>const vector&lt; vector&lt; T &gt; &gt; Matrix2D&lt; T &gt;::get_vector</definition>
        <argsstring>() const</argsstring>
        <name>get_vector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Utils/Matrices.h" line="55" column="1" bodyfile="src/Utils/Matrices.h" bodystart="194" bodyend="204"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/Utils/Matrices.h" line="17" column="1" bodyfile="src/Utils/Matrices.h" bodystart="17" bodyend="56"/>
    <listofallmembers>
      <member refid="classMatrix2D_1a2bd34bc1808af36aa3dce5af143ce304" prot="public" virt="non-virtual"><scope>Matrix2D</scope><name>add_to_position</name></member>
      <member refid="classMatrix2D_1af6db5a4e311ea727f52f16a7fb15a055" prot="private" virt="non-virtual"><scope>Matrix2D</scope><name>data_</name></member>
      <member refid="classMatrix2D_1ad9c316f4e27753ab30164f90f9dfaee9" prot="private" virt="non-virtual"><scope>Matrix2D</scope><name>di_</name></member>
      <member refid="classMatrix2D_1a69fb005b681e8740654e28616560a780" prot="private" virt="non-virtual"><scope>Matrix2D</scope><name>dj_</name></member>
      <member refid="classMatrix2D_1a5fd8ff857d4554c8fed6ca1ca2f1e87d" prot="public" virt="non-virtual"><scope>Matrix2D</scope><name>empty</name></member>
      <member refid="classMatrix2D_1a9d44e60eef0274c20ed9bd1f597c89eb" prot="public" virt="non-virtual"><scope>Matrix2D</scope><name>get_i</name></member>
      <member refid="classMatrix2D_1a30918dfce713408a9b3188bea33dbb57" prot="public" virt="non-virtual"><scope>Matrix2D</scope><name>get_j</name></member>
      <member refid="classMatrix2D_1a2cd319270ca890e47dad636b9af34a11" prot="public" virt="non-virtual"><scope>Matrix2D</scope><name>get_vector</name></member>
      <member refid="classMatrix2D_1ac3d6fbe385374e65ce00a34be5a7d323" prot="public" virt="non-virtual"><scope>Matrix2D</scope><name>getPointerToElement</name></member>
      <member refid="classMatrix2D_1a950bb2aa76c86e057d91f430d5a27b57" prot="public" virt="non-virtual"><scope>Matrix2D</scope><name>Matrix2D</name></member>
      <member refid="classMatrix2D_1ac93acc71341e612cf8b23d4308c561f8" prot="public" virt="non-virtual"><scope>Matrix2D</scope><name>Matrix2D</name></member>
      <member refid="classMatrix2D_1aa1d3642d7cea07adac1a7bd83586d292" prot="public" virt="non-virtual"><scope>Matrix2D</scope><name>Matrix2D</name></member>
      <member refid="classMatrix2D_1a4138aec11153780128a8d93a3ef06576" prot="private" virt="non-virtual"><scope>Matrix2D</scope><name>not_initialized</name></member>
      <member refid="classMatrix2D_1abcb61863666c4e17352c9fd2fc0a254a" prot="public" virt="non-virtual"><scope>Matrix2D</scope><name>operator()</name></member>
      <member refid="classMatrix2D_1a1a14d98d090d0d1cbda97a8fa797f1c5" prot="public" virt="non-virtual"><scope>Matrix2D</scope><name>operator()</name></member>
      <member refid="classMatrix2D_1a05b92232d9a5e7b76c4d4c1508ae2e12" prot="public" virt="non-virtual"><scope>Matrix2D</scope><name>operator+=</name></member>
      <member refid="classMatrix2D_1a48122f2fa79bf511d0c4e143dcdb0cf0" prot="public" virt="non-virtual"><scope>Matrix2D</scope><name>operator/</name></member>
      <member refid="classMatrix2D_1a17597829237784fa6089a23b7accb631" prot="public" virt="non-virtual"><scope>Matrix2D</scope><name>operator=</name></member>
      <member refid="classMatrix2D_1a27ccf42f23c568b2397b744ec32a41d1" prot="public" virt="non-virtual"><scope>Matrix2D</scope><name>print</name></member>
      <member refid="classMatrix2D_1a1a646829a2e9d166e0e47439de633b95" prot="public" virt="non-virtual"><scope>Matrix2D</scope><name>reset</name></member>
      <member refid="classMatrix2D_1a28515c515652637734a22a3440e80258" prot="public" virt="non-virtual"><scope>Matrix2D</scope><name>setData</name></member>
      <member refid="classMatrix2D_1a4c959b3c3807e9ca4d8d62f3e516b933" prot="public" virt="non-virtual"><scope>Matrix2D</scope><name>setPartialData</name></member>
      <member refid="classMatrix2D_1a6b86d001220161af2136ba49fd8b26b9" prot="public" virt="non-virtual"><scope>Matrix2D</scope><name>~Matrix2D</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
