<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classObjectivesCalculator" kind="class" language="C++" prot="public">
    <compoundname>ObjectivesCalculator</compoundname>
    <includes refid="ObjectivesCalculator_8h" local="no">ObjectivesCalculator.h</includes>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classObjectivesCalculator_1a4cb12f9bb7861368c999d435477593c4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double ObjectivesCalculator::calculateReliabilityObjective</definition>
        <argsstring>(const vector&lt; UtilitiesDataCollector *&gt; &amp;utility_collector, vector&lt; unsigned long &gt; realizations=vector&lt; unsigned long &gt;(0))</argsstring>
        <name>calculateReliabilityObjective</name>
        <param>
          <type>const vector&lt; <ref refid="classUtilitiesDataCollector" kindref="compound">UtilitiesDataCollector</ref> *&gt; &amp;</type>
          <declname>utility_collector</declname>
        </param>
        <param>
          <type>vector&lt; unsigned long &gt;</type>
          <declname>realizations</declname>
          <defval>vector&lt; unsigned long &gt;(0)</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Creates a table with years that failed in each realization.</para><para>Creates a vector with the number of realizations that failed for each year.</para><para>Returns year with most realization failures, divided by the number of realizations (reliability objective). </para>        </inbodydescription>
        <location file="src/Utils/ObjectivesCalculator.h" line="15" column="1" bodyfile="src/Utils/ObjectivesCalculator.cpp" bodystart="10" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classObjectivesCalculator_1aba30dbaf1a1520282f81c683fe00b5ed" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double ObjectivesCalculator::calculateRestrictionFrequencyObjective</definition>
        <argsstring>(const vector&lt; RestrictionsDataCollector *&gt; &amp;restriction_data, vector&lt; unsigned long &gt; realizations=vector&lt; unsigned long &gt;(0))</argsstring>
        <name>calculateRestrictionFrequencyObjective</name>
        <param>
          <type>const vector&lt; <ref refid="classRestrictionsDataCollector" kindref="compound">RestrictionsDataCollector</ref> *&gt; &amp;</type>
          <declname>restriction_data</declname>
        </param>
        <param>
          <type>vector&lt; unsigned long &gt;</type>
          <declname>realizations</declname>
          <defval>vector&lt; unsigned long &gt;(0)</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Check if there were restriction policies in place.</para><para>Counts how many years across all realizations had restrictions. </para>        </inbodydescription>
        <location file="src/Utils/ObjectivesCalculator.h" line="19" column="1" bodyfile="src/Utils/ObjectivesCalculator.cpp" bodystart="72" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classObjectivesCalculator_1a5619e4472f8e96bc6fa274002d4809f1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double ObjectivesCalculator::calculateNetPresentCostInfrastructureObjective</definition>
        <argsstring>(const vector&lt; UtilitiesDataCollector *&gt; &amp;utility_data, vector&lt; unsigned long &gt; realizations=vector&lt; unsigned long &gt;(0))</argsstring>
        <name>calculateNetPresentCostInfrastructureObjective</name>
        <param>
          <type>const vector&lt; <ref refid="classUtilitiesDataCollector" kindref="compound">UtilitiesDataCollector</ref> *&gt; &amp;</type>
          <declname>utility_data</declname>
        </param>
        <param>
          <type>vector&lt; unsigned long &gt;</type>
          <declname>realizations</declname>
          <defval>vector&lt; unsigned long &gt;(0)</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Utils/ObjectivesCalculator.h" line="23" column="1" bodyfile="src/Utils/ObjectivesCalculator.cpp" bodystart="117" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classObjectivesCalculator_1a2352c178eab40798324120102cc7891b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double ObjectivesCalculator::calculatePeakFinancialCostsObjective</definition>
        <argsstring>(const vector&lt; UtilitiesDataCollector *&gt; &amp;utility_data, vector&lt; unsigned long &gt; realizations=vector&lt; unsigned long &gt;(0))</argsstring>
        <name>calculatePeakFinancialCostsObjective</name>
        <param>
          <type>const vector&lt; <ref refid="classUtilitiesDataCollector" kindref="compound">UtilitiesDataCollector</ref> *&gt; &amp;</type>
          <declname>utility_data</declname>
        </param>
        <param>
          <type>vector&lt; unsigned long &gt;</type>
          <declname>realizations</declname>
          <defval>vector&lt; unsigned long &gt;(0)</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Creates a table with years that failed in each realization.</para><para>accumulate year&apos;s info by summing weekly amounts.</para><para>if last week of the year, close the books and calculate financial cost for the year. <linebreak/>
<linebreak/>
<linebreak/>
 update year count.</para><para>reset accounts.</para><para>store highest year cost as the cost financial cost of the realization. </para>        </inbodydescription>
        <location file="src/Utils/ObjectivesCalculator.h" line="27" column="1" bodyfile="src/Utils/ObjectivesCalculator.cpp" bodystart="140" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="classObjectivesCalculator_1a74cf53d4a7abbb2ea34304844262a826" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double ObjectivesCalculator::calculateWorseCaseCostsObjective</definition>
        <argsstring>(const vector&lt; UtilitiesDataCollector *&gt; &amp;utility_data, vector&lt; unsigned long &gt; realizations=vector&lt; unsigned long &gt;(0))</argsstring>
        <name>calculateWorseCaseCostsObjective</name>
        <param>
          <type>const vector&lt; <ref refid="classUtilitiesDataCollector" kindref="compound">UtilitiesDataCollector</ref> *&gt; &amp;</type>
          <declname>utility_data</declname>
        </param>
        <param>
          <type>vector&lt; unsigned long &gt;</type>
          <declname>realizations</declname>
          <defval>vector&lt; unsigned long &gt;(0)</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Creates a table with years that failed in each realization.</para><para>accumulate year&apos;s info by summing weekly amounts.</para><para>if last week of the year, close the books and calculate financial cost for the year.</para><para>update year count.</para><para>store highest year cost as the drought mitigation cost of the realization.</para><para>sort costs to get the worse 1 percentile. </para>        </inbodydescription>
        <location file="src/Utils/ObjectivesCalculator.h" line="31" column="1" bodyfile="src/Utils/ObjectivesCalculator.cpp" bodystart="216" bodyend="278"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/Utils/ObjectivesCalculator.h" line="12" column="1" bodyfile="src/Utils/ObjectivesCalculator.h" bodystart="12" bodyend="35"/>
    <listofallmembers>
      <member refid="classObjectivesCalculator_1a5619e4472f8e96bc6fa274002d4809f1" prot="public" virt="non-virtual"><scope>ObjectivesCalculator</scope><name>calculateNetPresentCostInfrastructureObjective</name></member>
      <member refid="classObjectivesCalculator_1a2352c178eab40798324120102cc7891b" prot="public" virt="non-virtual"><scope>ObjectivesCalculator</scope><name>calculatePeakFinancialCostsObjective</name></member>
      <member refid="classObjectivesCalculator_1a4cb12f9bb7861368c999d435477593c4" prot="public" virt="non-virtual"><scope>ObjectivesCalculator</scope><name>calculateReliabilityObjective</name></member>
      <member refid="classObjectivesCalculator_1aba30dbaf1a1520282f81c683fe00b5ed" prot="public" virt="non-virtual"><scope>ObjectivesCalculator</scope><name>calculateRestrictionFrequencyObjective</name></member>
      <member refid="classObjectivesCalculator_1a74cf53d4a7abbb2ea34304844262a826" prot="public" virt="non-virtual"><scope>ObjectivesCalculator</scope><name>calculateWorseCaseCostsObjective</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
