<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="Utils_8cpp" kind="file" language="C++">
    <compoundname>Utils.cpp</compoundname>
    <includes refid="Utils_8h" local="yes">Utils.h</includes>
    <includes refid="Transfers_8h" local="yes">../DroughtMitigationInstruments/Transfers.h</includes>
    <includes refid="ReservoirExpansion_8h" local="yes">../SystemComponents/WaterSources/ReservoirExpansion.h</includes>
    <includes refid="Quarry_8h" local="yes">../SystemComponents/WaterSources/Quarry.h</includes>
    <includes refid="InsuranceStorageToROF_8h" local="yes">../DroughtMitigationInstruments/InsuranceStorageToROF.h</includes>
    <includes refid="WaterReuse_8h" local="yes">../SystemComponents/WaterSources/WaterReuse.h</includes>
    <includes refid="AllocatedReservoir_8h" local="yes">../SystemComponents/WaterSources/AllocatedReservoir.h</includes>
    <includes refid="SequentialJointTreatmentExpansion_8h" local="yes">../SystemComponents/WaterSources/SequentialJointTreatmentExpansion.h</includes>
    <includes refid="Relocation_8h" local="yes">../SystemComponents/WaterSources/Relocation.h</includes>
    <includes refid="FixedMinEnvFlowControl_8h" local="yes">../Controls/FixedMinEnvFlowControl.h</includes>
    <includes refid="InflowMinEnvFlowControl_8h" local="yes">../Controls/InflowMinEnvFlowControl.h</includes>
    <includes refid="SeasonalMinEnvFlowControl_8h" local="yes">../Controls/SeasonalMinEnvFlowControl.h</includes>
    <includes refid="StorageMinEnvFlowControl_8h" local="yes">../Controls/StorageMinEnvFlowControl.h</includes>
    <includes refid="JordanLakeMinEnvFlowControl_8h" local="yes">../Controls/Custom/JordanLakeMinEnvFlowControl.h</includes>
    <includes refid="FallsLakeMinEnvFlowControl_8h" local="yes">../Controls/Custom/FallsLakeMinEnvFlowControl.h</includes>
    <includes refid="LevelDebtServiceBond_8h" local="yes">../SystemComponents/Bonds/LevelDebtServiceBond.h</includes>
    <includes refid="BalloonPaymentBond_8h" local="yes">../SystemComponents/Bonds/BalloonPaymentBond.h</includes>
    <includes refid="FloatingInterestBalloonPaymentBond_8h" local="yes">../SystemComponents/Bonds/FloatingInterestBalloonPaymentBond.h</includes>
    <includes local="no">fstream</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">climits</includes>
    <includes local="no">unistd.h</includes>
    <includes local="no">sys/stat.h</includes>
    <incdepgraph>
      <node id="3698">
        <label>sys/stat.h</label>
      </node>
      <node id="3664">
        <label>list</label>
      </node>
      <node id="3654">
        <label>../../Utils/DataSeries.h</label>
        <link refid="DataSeries_8h"/>
        <childnode refid="3646" relation="include">
        </childnode>
        <childnode refid="3655" relation="include">
        </childnode>
        <childnode refid="3656" relation="include">
        </childnode>
      </node>
      <node id="3656">
        <label>../Controls/Base/ControlRules.h</label>
        <link refid="ControlRules_8h"/>
      </node>
      <node id="3674">
        <label>iomanip</label>
      </node>
      <node id="3677">
        <label>../SystemComponents/WaterSources/Quarry.h</label>
        <link refid="Quarry_8h"/>
        <childnode refid="3653" relation="include">
        </childnode>
      </node>
      <node id="3668">
        <label>../../Controls/Base/MinEnvFlowControl.h</label>
        <link refid="MinEnvFlowControl_8h"/>
        <childnode refid="3643" relation="include">
        </childnode>
        <childnode refid="3658" relation="include">
        </childnode>
      </node>
      <node id="3669">
        <label>../DroughtMitigationInstruments/Restrictions.h</label>
        <link refid="Restrictions_8h"/>
        <childnode refid="3658" relation="include">
        </childnode>
        <childnode refid="3662" relation="include">
        </childnode>
      </node>
      <node id="3652">
        <label>../SystemComponents/WaterSources/Intake.h</label>
        <link refid="Intake_8h"/>
        <childnode refid="3653" relation="include">
        </childnode>
      </node>
      <node id="3682">
        <label>../SystemComponents/WaterSources/WaterReuse.h</label>
        <link refid="WaterReuse_8h"/>
        <childnode refid="3643" relation="include">
        </childnode>
      </node>
      <node id="3680">
        <label>Base/ContinuityModel.h</label>
        <link refid="ContinuityModel_8h"/>
        <childnode refid="3643" relation="include">
        </childnode>
        <childnode refid="3647" relation="include">
        </childnode>
        <childnode refid="3658" relation="include">
        </childnode>
        <childnode refid="3663" relation="include">
        </childnode>
        <childnode refid="3668" relation="include">
        </childnode>
        <childnode refid="3646" relation="include">
        </childnode>
      </node>
      <node id="3688">
        <label>../Controls/SeasonalMinEnvFlowControl.h</label>
        <link refid="SeasonalMinEnvFlowControl_8h"/>
        <childnode refid="3646" relation="include">
        </childnode>
        <childnode refid="3668" relation="include">
        </childnode>
      </node>
      <node id="3649">
        <label>cmath</label>
      </node>
      <node id="3689">
        <label>../Controls/StorageMinEnvFlowControl.h</label>
        <link refid="StorageMinEnvFlowControl_8h"/>
        <childnode refid="3668" relation="include">
        </childnode>
      </node>
      <node id="3655">
        <label>stdexcept</label>
      </node>
      <node id="3647">
        <label>../Utils/Constants.h</label>
        <link refid="Constants_8h"/>
        <childnode refid="3648" relation="include">
        </childnode>
        <childnode refid="3649" relation="include">
        </childnode>
        <childnode refid="3650" relation="include">
        </childnode>
        <childnode refid="3646" relation="include">
        </childnode>
      </node>
      <node id="3660">
        <label>../../Controls/WwtpDischargeRule.h</label>
        <link refid="WwtpDischargeRule_8h"/>
        <childnode refid="3656" relation="include">
        </childnode>
        <childnode refid="3646" relation="include">
        </childnode>
      </node>
      <node id="3644">
        <label>string</label>
      </node>
      <node id="3691">
        <label>../Controls/Custom/FallsLakeMinEnvFlowControl.h</label>
        <link refid="FallsLakeMinEnvFlowControl_8h"/>
        <childnode refid="3668" relation="include">
        </childnode>
      </node>
      <node id="3648">
        <label>map</label>
      </node>
      <node id="3661">
        <label>InfrastructureManager.h</label>
        <link refid="InfrastructureManager_8h"/>
        <childnode refid="3646" relation="include">
        </childnode>
        <childnode refid="3643" relation="include">
        </childnode>
      </node>
      <node id="3643">
        <label>../SystemComponents/WaterSources/Base/WaterSource.h</label>
        <link refid="WaterSource_8h"/>
        <childnode refid="3644" relation="include">
        </childnode>
        <childnode refid="3645" relation="include">
        </childnode>
        <childnode refid="3647" relation="include">
        </childnode>
        <childnode refid="3651" relation="include">
        </childnode>
      </node>
      <node id="3686">
        <label>../Controls/FixedMinEnvFlowControl.h</label>
        <link refid="FixedMinEnvFlowControl_8h"/>
        <childnode refid="3668" relation="include">
        </childnode>
      </node>
      <node id="3692">
        <label>../SystemComponents/Bonds/LevelDebtServiceBond.h</label>
        <link refid="LevelDebtServiceBond_8h"/>
        <childnode refid="3651" relation="include">
        </childnode>
      </node>
      <node id="3683">
        <label>../SystemComponents/WaterSources/AllocatedReservoir.h</label>
        <link refid="AllocatedReservoir_8h"/>
        <childnode refid="3653" relation="include">
        </childnode>
      </node>
      <node id="3667">
        <label>fstream</label>
      </node>
      <node id="3678">
        <label>../DroughtMitigationInstruments/InsuranceStorageToROF.h</label>
        <link refid="InsuranceStorageToROF_8h"/>
        <childnode refid="3662" relation="include">
        </childnode>
        <childnode refid="3679" relation="include">
        </childnode>
        <childnode refid="3681" relation="include">
        </childnode>
      </node>
      <node id="3676">
        <label>../SystemComponents/WaterSources/ReservoirExpansion.h</label>
        <link refid="ReservoirExpansion_8h"/>
        <childnode refid="3643" relation="include">
        </childnode>
      </node>
      <node id="3662">
        <label>../DroughtMitigationInstruments/Base/DroughtMitigationPolicy.h</label>
        <link refid="DroughtMitigationPolicy_8h"/>
        <childnode refid="3658" relation="include">
        </childnode>
        <childnode refid="3647" relation="include">
        </childnode>
        <childnode refid="3663" relation="include">
        </childnode>
        <childnode refid="3665" relation="include">
        </childnode>
        <childnode refid="3668" relation="include">
        </childnode>
      </node>
      <node id="3641">
        <label>src/Utils/Utils.cpp</label>
        <link refid="Utils_8cpp"/>
        <childnode refid="3642" relation="include">
        </childnode>
        <childnode refid="3670" relation="include">
        </childnode>
        <childnode refid="3676" relation="include">
        </childnode>
        <childnode refid="3677" relation="include">
        </childnode>
        <childnode refid="3678" relation="include">
        </childnode>
        <childnode refid="3682" relation="include">
        </childnode>
        <childnode refid="3683" relation="include">
        </childnode>
        <childnode refid="3684" relation="include">
        </childnode>
        <childnode refid="3685" relation="include">
        </childnode>
        <childnode refid="3686" relation="include">
        </childnode>
        <childnode refid="3687" relation="include">
        </childnode>
        <childnode refid="3688" relation="include">
        </childnode>
        <childnode refid="3689" relation="include">
        </childnode>
        <childnode refid="3690" relation="include">
        </childnode>
        <childnode refid="3691" relation="include">
        </childnode>
        <childnode refid="3692" relation="include">
        </childnode>
        <childnode refid="3693" relation="include">
        </childnode>
        <childnode refid="3694" relation="include">
        </childnode>
        <childnode refid="3667" relation="include">
        </childnode>
        <childnode refid="3695" relation="include">
        </childnode>
        <childnode refid="3696" relation="include">
        </childnode>
        <childnode refid="3697" relation="include">
        </childnode>
        <childnode refid="3698" relation="include">
        </childnode>
      </node>
      <node id="3658">
        <label>../SystemComponents/Utility/Utility.h</label>
        <link refid="Utility_8h"/>
        <childnode refid="3648" relation="include">
        </childnode>
        <childnode refid="3659" relation="include">
        </childnode>
        <childnode refid="3653" relation="include">
        </childnode>
        <childnode refid="3647" relation="include">
        </childnode>
        <childnode refid="3660" relation="include">
        </childnode>
        <childnode refid="3661" relation="include">
        </childnode>
      </node>
      <node id="3697">
        <label>unistd.h</label>
      </node>
      <node id="3646">
        <label>vector</label>
      </node>
      <node id="3687">
        <label>../Controls/InflowMinEnvFlowControl.h</label>
        <link refid="InflowMinEnvFlowControl_8h"/>
        <childnode refid="3668" relation="include">
        </childnode>
      </node>
      <node id="3663">
        <label>../../Utils/Graph/Graph.h</label>
        <link refid="Graph_8h"/>
        <childnode refid="3664" relation="include">
        </childnode>
        <childnode refid="3646" relation="include">
        </childnode>
        <childnode refid="3647" relation="include">
        </childnode>
      </node>
      <node id="3645">
        <label>../../Catchment.h</label>
        <link refid="Catchment_8h"/>
        <childnode refid="3646" relation="include">
        </childnode>
        <childnode refid="3647" relation="include">
        </childnode>
      </node>
      <node id="3653">
        <label>Reservoir.h</label>
        <link refid="Reservoir_8h"/>
        <childnode refid="3644" relation="include">
        </childnode>
        <childnode refid="3645" relation="include">
        </childnode>
        <childnode refid="3643" relation="include">
        </childnode>
        <childnode refid="3654" relation="include">
        </childnode>
        <childnode refid="3657" relation="include">
        </childnode>
      </node>
      <node id="3685">
        <label>../SystemComponents/WaterSources/Relocation.h</label>
        <link refid="Relocation_8h"/>
        <childnode refid="3643" relation="include">
        </childnode>
      </node>
      <node id="3681">
        <label>../ContinuityModels/ContinuityModelRealization.h</label>
        <link refid="ContinuityModelRealization_8h"/>
        <childnode refid="3680" relation="include">
        </childnode>
        <childnode refid="3662" relation="include">
        </childnode>
      </node>
      <node id="3670">
        <label>../DroughtMitigationInstruments/Transfers.h</label>
        <link refid="Transfers_8h"/>
        <childnode refid="3662" relation="include">
        </childnode>
        <childnode refid="3671" relation="include">
        </childnode>
        <childnode refid="3663" relation="include">
        </childnode>
      </node>
      <node id="3675">
        <label>cstdlib</label>
      </node>
      <node id="3666">
        <label>iostream</label>
      </node>
      <node id="3693">
        <label>../SystemComponents/Bonds/BalloonPaymentBond.h</label>
        <link refid="BalloonPaymentBond_8h"/>
        <childnode refid="3646" relation="include">
        </childnode>
        <childnode refid="3651" relation="include">
        </childnode>
      </node>
      <node id="3696">
        <label>climits</label>
      </node>
      <node id="3684">
        <label>../SystemComponents/WaterSources/SequentialJointTreatmentExpansion.h</label>
        <link refid="SequentialJointTreatmentExpansion_8h"/>
        <childnode refid="3643" relation="include">
        </childnode>
      </node>
      <node id="3672">
        <label>Array.h</label>
        <link refid="Array_8h"/>
        <childnode refid="3673" relation="include">
        </childnode>
        <childnode refid="3655" relation="include">
        </childnode>
        <childnode refid="3666" relation="include">
        </childnode>
        <childnode refid="3674" relation="include">
        </childnode>
        <childnode refid="3649" relation="include">
        </childnode>
        <childnode refid="3675" relation="include">
        </childnode>
      </node>
      <node id="3694">
        <label>../SystemComponents/Bonds/FloatingInterestBalloonPaymentBond.h</label>
        <link refid="FloatingInterestBalloonPaymentBond_8h"/>
        <childnode refid="3651" relation="include">
        </childnode>
      </node>
      <node id="3657">
        <label>../../Controls/EvaporationSeries.h</label>
        <link refid="EvaporationSeries_8h"/>
        <childnode refid="3646" relation="include">
        </childnode>
        <childnode refid="3645" relation="include">
        </childnode>
      </node>
      <node id="3673">
        <label>set</label>
      </node>
      <node id="3695">
        <label>algorithm</label>
      </node>
      <node id="3651">
        <label>../../Bonds/Base/Bond.h</label>
        <link refid="Bond_8h"/>
        <childnode refid="3646" relation="include">
        </childnode>
        <childnode refid="3647" relation="include">
        </childnode>
      </node>
      <node id="3690">
        <label>../Controls/Custom/JordanLakeMinEnvFlowControl.h</label>
        <link refid="JordanLakeMinEnvFlowControl_8h"/>
        <childnode refid="3689" relation="include">
        </childnode>
      </node>
      <node id="3671">
        <label>../Utils/QPSolver/QuadProg++.h</label>
        <link refid="QuadProg_09_09_8h"/>
        <childnode refid="3672" relation="include">
        </childnode>
      </node>
      <node id="3650">
        <label>cstring</label>
      </node>
      <node id="3665">
        <label>../../Utils/Matrices.h</label>
        <link refid="Matrices_8h"/>
        <childnode refid="3666" relation="include">
        </childnode>
        <childnode refid="3650" relation="include">
        </childnode>
        <childnode refid="3667" relation="include">
        </childnode>
        <childnode refid="3659" relation="include">
        </childnode>
      </node>
      <node id="3659">
        <label>memory</label>
      </node>
      <node id="3642">
        <label>Utils.h</label>
        <link refid="Utils_8h"/>
        <childnode refid="3643" relation="include">
        </childnode>
        <childnode refid="3652" relation="include">
        </childnode>
        <childnode refid="3658" relation="include">
        </childnode>
        <childnode refid="3662" relation="include">
        </childnode>
        <childnode refid="3669" relation="include">
        </childnode>
        <childnode refid="3668" relation="include">
        </childnode>
      </node>
      <node id="3679">
        <label>../ContinuityModels/ContinuityModelROF.h</label>
        <link refid="ContinuityModelROF_8h"/>
        <childnode refid="3680" relation="include">
        </childnode>
        <childnode refid="3665" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>by<sp/>bernardo<sp/>on<sp/>1/13/17.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Utils_8h" kindref="compound">Utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../DroughtMitigationInstruments/Transfers.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../SystemComponents/WaterSources/ReservoirExpansion.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../SystemComponents/WaterSources/Quarry.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../DroughtMitigationInstruments/InsuranceStorageToROF.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../SystemComponents/WaterSources/WaterReuse.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../SystemComponents/WaterSources/AllocatedReservoir.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../SystemComponents/WaterSources/SequentialJointTreatmentExpansion.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../SystemComponents/WaterSources/Relocation.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Controls/FixedMinEnvFlowControl.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Controls/InflowMinEnvFlowControl.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Controls/SeasonalMinEnvFlowControl.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Controls/StorageMinEnvFlowControl.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Controls/Custom/JordanLakeMinEnvFlowControl.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Controls/Custom/FallsLakeMinEnvFlowControl.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../SystemComponents/Bonds/LevelDebtServiceBond.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../SystemComponents/Bonds/BalloonPaymentBond.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../SystemComponents/Bonds/FloatingInterestBalloonPaymentBond.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;climits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/stat.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal">vector&lt;vector&lt;double&gt;&gt;<sp/><ref refid="classUtils_1ab1dced1d690056b012aec72d28cd4176" kindref="member">Utils::parse2DCsvFile</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>file_name,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>max_lines,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;unsigned<sp/>long&gt;<sp/>rows_to_read)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;vector&lt;double&gt;<sp/>&gt;<sp/>data;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>ifstream<sp/>inputFile(file_name);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ml<sp/>=<sp/>(int)<sp/>(rows_to_read.empty()<sp/>?<sp/>max_lines<sp/>:<sp/>*max_element(</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rows_to_read.begin(),<sp/>rows_to_read.end()))<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>if<sp/>(!rows_to_read.empty())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ml<sp/>=<sp/>max_lines;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ml<sp/>=<sp/>*max_element(rows_to_read.begin(),<sp/>rows_to_read.end());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inputFile.is_open())<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(inputFile<sp/>&amp;&amp;<sp/>l<sp/>&lt;<sp/>ml)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l++;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!getline(inputFile,<sp/>s))<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>record;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s[0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;#&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(rows_to_read.empty()<sp/>||</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::find(rows_to_read.begin(),<sp/>rows_to_read.end(),<sp/>l)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!=<sp/>rows_to_read.end()))<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>istringstream<sp/>ss(s);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ss)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>line;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!getline(ss,<sp/>line,<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>record.push_back(stof(line));</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::invalid_argument<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;NaN<sp/>found<sp/>in<sp/>file<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>file_name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>line<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>l<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>column<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>c<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e.what();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c++;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.push_back(record);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>error<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;File<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>file_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>not<sp/>found.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>error_char[error.size()<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(error_char,<sp/>error.c_str());</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>invalid_argument(error_char);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rows_to_read.empty())</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;vector&lt;double&gt;&gt;<sp/>return_data;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>:<sp/>rows_to_read)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return_data.push_back(data[i]);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>return_data;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal">vector&lt;double&gt;<sp/><ref refid="classUtils_1a575cc5fb290f083a3101a8f0969ae483" kindref="member">Utils::parse1DCsvFile</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>file_name,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>max_lines,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;unsigned<sp/>long&gt;<sp/>rows_to_read)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>data;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>ifstream<sp/>infile(file_name);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>l<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(infile<sp/>&amp;&amp;<sp/>l<sp/>&lt;<sp/>max_lines)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l++;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!getline(infile,<sp/>s))<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s[0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;#&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>(rows_to_read.empty()<sp/>||<sp/>(!rows_to_read.empty()<sp/>&amp;&amp;<sp/>l<sp/>-<sp/>1<sp/>==<sp/>rows_to_read[0])))<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>istringstream<sp/>ss(s);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>record;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>record<sp/>=<sp/>stof(ss.str());</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.push_back(record);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::invalid_argument<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;NaN<sp/>found<sp/>in<sp/>file<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>file_name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>line<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>l<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e.what();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!rows_to_read.empty())</highlight><highlight class="comment">//<sp/>&amp;&amp;<sp/>rows_to_read[0]<sp/>!=<sp/>NON_INITIALIZED)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rows_to_read.erase(rows_to_read.begin());</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!infile.eof()<sp/>&amp;&amp;<sp/>l<sp/>&lt;<sp/>max_lines)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>read<sp/>file<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>file_name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>invalid_argument(</highlight><highlight class="stringliteral">&quot;File<sp/>not<sp/>found.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data;</highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal">vector&lt;MinEnvFlowControl<sp/>*&gt;<sp/><ref refid="classUtils_1af0041ddac14b680b4039e378b060b6f7" kindref="member">Utils::copyMinEnvFlowControlVector</ref>(</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;MinEnvFlowControl<sp/>*&gt;<sp/>min_env_flow_controls_original)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;MinEnvFlowControl<sp/>*&gt;<sp/>min_env_flow_controls_new;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classMinEnvFlowControl" kindref="compound">MinEnvFlowControl</ref><sp/>*mef<sp/>:<sp/>min_env_flow_controls_original)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mef-&gt;type<sp/>==<sp/><ref refid="namespaceConstants_1ad8ac2a802acc9bbd547c676255692ff3" kindref="member">FIXED_FLOW_CONTROLS</ref>)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_env_flow_controls_new.push_back(</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classFixedMinEnvFlowControl" kindref="compound">FixedMinEnvFlowControl</ref>(*dynamic_cast&lt;FixedMinEnvFlowControl<sp/>*&gt;(mef)));</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mef-&gt;type<sp/>==<sp/><ref refid="namespaceConstants_1af73061aaa392892f65f5070d7a979895" kindref="member">INFLOW_CONTROLS</ref>)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_env_flow_controls_new.push_back(</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classInflowMinEnvFlowControl" kindref="compound">InflowMinEnvFlowControl</ref>(*dynamic_cast&lt;InflowMinEnvFlowControl<sp/>*&gt;(mef)));</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mef-&gt;type<sp/>==<sp/><ref refid="namespaceConstants_1a8e78b56c12f7896c4b1f225503172634" kindref="member">SEASONAL_CONTROLS</ref>)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_env_flow_controls_new.push_back(</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classSeasonalMinEnvFlowControl" kindref="compound">SeasonalMinEnvFlowControl</ref>(*dynamic_cast&lt;SeasonalMinEnvFlowControl<sp/>*&gt;(mef)));</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mef-&gt;type<sp/>==<sp/><ref refid="namespaceConstants_1ae986af9edd51d442ce78589435ddbf0b" kindref="member">STORAGE_CONTROLS</ref>)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_env_flow_controls_new.push_back(</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classStorageMinEnvFlowControl" kindref="compound">StorageMinEnvFlowControl</ref>(*dynamic_cast&lt;StorageMinEnvFlowControl<sp/>*&gt;(mef)));</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mef-&gt;type<sp/>==<sp/><ref refid="namespaceConstants_1ae35241b436f7a539f367f08b0f9fa9f1" kindref="member">JORDAN_CONTROLS</ref>)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_env_flow_controls_new.push_back(</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classJordanLakeMinEnvFlowControl" kindref="compound">JordanLakeMinEnvFlowControl</ref>(*dynamic_cast&lt;JordanLakeMinEnvFlowControl<sp/>*&gt;(mef)));</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mef-&gt;type<sp/>==<sp/><ref refid="namespaceConstants_1a9ced0b193590ae665ccefc280837464d" kindref="member">FALLS_CONTROLS</ref>)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_env_flow_controls_new.push_back(</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classFallsLakeMinEnvFlowControl" kindref="compound">FallsLakeMinEnvFlowControl</ref>(*dynamic_cast&lt;FallsLakeMinEnvFlowControl<sp/>*&gt;(mef)));</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>invalid_argument(</highlight><highlight class="stringliteral">&quot;One<sp/>of<sp/>the<sp/>minimum<sp/>environmental<sp/>flow<sp/>controls<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;does<sp/>not<sp/>have<sp/>an<sp/>implementation<sp/>in<sp/>the<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Utils::copyWaterSourceVector<sp/>function.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>add<sp/>your<sp/>control<sp/>to<sp/>it.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>min_env_flow_controls_new;</highlight></codeline>
<codeline lineno="160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="comment">//#pragma<sp/>optimize(&quot;&quot;,<sp/>off)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal">vector&lt;WaterSource<sp/>*&gt;<sp/><ref refid="classUtils_1ad83b39de47909892725f2d9a8ee0ff1a" kindref="member">Utils::copyWaterSourceVector</ref>(</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;WaterSource<sp/>*&gt;<sp/>water_sources_original)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;WaterSource<sp/>*&gt;<sp/>water_sources_new;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classWaterSource" kindref="compound">WaterSource</ref><sp/>*ws<sp/>:<sp/>water_sources_original)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ws-&gt;source_type<sp/>==<sp/><ref refid="namespaceConstants_1a127d57d404f178c91f8ed88823e24088" kindref="member">RESERVOIR</ref>)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>water_sources_new.push_back(</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classReservoir" kindref="compound">Reservoir</ref>(*dynamic_cast&lt;Reservoir<sp/>*&gt;(ws)));</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ws-&gt;source_type<sp/>==<sp/><ref refid="namespaceConstants_1adb591bf3b5663c16cf71d3cbb044c3b3" kindref="member">INTAKE</ref>)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>water_sources_new.push_back(</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classIntake" kindref="compound">Intake</ref>(*dynamic_cast&lt;Intake<sp/>*&gt;(ws)));</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ws-&gt;source_type<sp/>==<sp/><ref refid="namespaceConstants_1a27567a2a62ed837986156cb424fdc83f" kindref="member">RESERVOIR_EXPANSION</ref>)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>water_sources_new.push_back(</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classReservoirExpansion" kindref="compound">ReservoirExpansion</ref>(</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dynamic_cast&lt;ReservoirExpansion<sp/>*&gt;(ws)));</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ws-&gt;source_type<sp/>==<sp/><ref refid="namespaceConstants_1ac5f85f1f073e01d6d42ac8b19fc73f1e" kindref="member">QUARRY</ref>)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>water_sources_new.push_back(</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classQuarry" kindref="compound">Quarry</ref>(*dynamic_cast&lt;Quarry<sp/>*&gt;(ws)));</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ws-&gt;source_type<sp/>==<sp/><ref refid="namespaceConstants_1aebb21b9413741e893ea6a79e379e9ec6" kindref="member">WATER_REUSE</ref>)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>water_sources_new.push_back(</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classWaterReuse" kindref="compound">WaterReuse</ref>(*dynamic_cast&lt;WaterReuse<sp/>*&gt;(ws)));</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ws-&gt;source_type<sp/>==<sp/><ref refid="namespaceConstants_1a2769e2f1bc080457c78297402e78c8d1" kindref="member">ALLOCATED_RESERVOIR</ref>)</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>water_sources_new.push_back(</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classAllocatedReservoir" kindref="compound">AllocatedReservoir</ref>(</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dynamic_cast&lt;AllocatedReservoir<sp/>*&gt;(ws)));</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ws-&gt;source_type<sp/>==<sp/><ref refid="namespaceConstants_1a6166f1b56ea9e9bfd63ac77cb99da31a" kindref="member">NEW_WATER_TREATMENT_PLANT</ref>)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>water_sources_new.push_back(</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classSequentialJointTreatmentExpansion" kindref="compound">SequentialJointTreatmentExpansion</ref>(</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dynamic_cast&lt;SequentialJointTreatmentExpansion<sp/>*&gt;(ws)));</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ws-&gt;source_type<sp/>==<sp/><ref refid="namespaceConstants_1ab321801ef588e5083ec368d310871523" kindref="member">SOURCE_RELOCATION</ref>)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>water_sources_new.push_back(</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classRelocation" kindref="compound">Relocation</ref>(</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dynamic_cast&lt;Relocation<sp/>*&gt;(ws)));</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>invalid_argument(</highlight><highlight class="stringliteral">&quot;One<sp/>of<sp/>the<sp/>water<sp/>sources<sp/>does<sp/>not<sp/>have<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;an<sp/>implementation<sp/>in<sp/>the<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Utils::copyWaterSourceVector<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;function.<sp/>Please<sp/>add<sp/>your<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;source<sp/>to<sp/>it.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>water_sources_new;</highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal">vector&lt;Utility<sp/>*&gt;<sp/><ref refid="classUtils_1aae13775d0c17ca43ae39450188958d7d" kindref="member">Utils::copyUtilityVector</ref>(vector&lt;Utility<sp/>*&gt;<sp/>utility_original,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>clear_water_sources)<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;Utility<sp/>*&gt;<sp/>utility_new;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classUtility" kindref="compound">Utility</ref><sp/>*u<sp/>:<sp/>utility_original)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>utility_new.push_back(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classUtility" kindref="compound">Utility</ref>(*u));</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clear_water_sources)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classUtility" kindref="compound">Utility</ref><sp/>*u<sp/>:<sp/>utility_new)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u-&gt;clearWaterSources();</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>utility_new;</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal">vector&lt;DroughtMitigationPolicy<sp/>*&gt;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><ref refid="classUtils_1ac387c706746bffa0308e1fad7a6cd7a6" kindref="member">Utils::copyDroughtMitigationPolicyVector</ref>(</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;DroughtMitigationPolicy<sp/>*&gt;<sp/>drought_mitigation_policy_original)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;DroughtMitigationPolicy<sp/>*&gt;<sp/>drought_mitigation_policy_new;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classDroughtMitigationPolicy" kindref="compound">DroughtMitigationPolicy</ref><sp/>*dmp<sp/>:<sp/>drought_mitigation_policy_original)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dmp-&gt;type<sp/>==<sp/><ref refid="namespaceConstants_1a15c13d76b55f85fae5635ec62063c0d9" kindref="member">RESTRICTIONS</ref>)</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drought_mitigation_policy_new.push_back(</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classRestrictions" kindref="compound">Restrictions</ref>(*dynamic_cast&lt;Restrictions<sp/>*&gt;(dmp)));</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dmp-&gt;type<sp/>==<sp/><ref refid="namespaceConstants_1a02748ff742cda86e055625ce8ca43133" kindref="member">TRANSFERS</ref>)</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drought_mitigation_policy_new.push_back(</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classTransfers" kindref="compound">Transfers</ref>(*dynamic_cast&lt;Transfers<sp/>*&gt;(dmp)));</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dmp-&gt;type<sp/>==<sp/><ref refid="namespaceConstants_1a459317d221226a86ebf5b00a4f87eaa7" kindref="member">INSURANCE_STORAGE_ROF</ref>)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drought_mitigation_policy_new.push_back(</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classInsuranceStorageToROF" kindref="compound">InsuranceStorageToROF</ref>(</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dynamic_cast&lt;InsuranceStorageToROF<sp/>*&gt;(dmp)));</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>drought_mitigation_policy_new;</highlight></codeline>
<codeline lineno="242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal">vector&lt;Bond<sp/>*&gt;<sp/><ref refid="classUtils_1addb3e866200f4152d3f004b2c19c4aa9" kindref="member">Utils::copyBonds</ref>(vector&lt;Bond<sp/>*&gt;<sp/>bonds_original)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;Bond<sp/>*&gt;<sp/>bonds_new;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classBond" kindref="compound">Bond</ref><sp/>*bond<sp/>:<sp/>bonds_original)<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bond-&gt;type<sp/>==<sp/><ref refid="namespaceConstants_1a4b19c9668b1dd7c3cf77b16029fe3cac" kindref="member">LEVEL_DEBT_SERVICE</ref>)</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bonds_new.push_back(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classLevelDebtServiceBond" kindref="compound">LevelDebtServiceBond</ref>(*dynamic_cast&lt;LevelDebtServiceBond<sp/>*&gt;(bond)));</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bond-&gt;type<sp/>==<sp/><ref refid="namespaceConstants_1a08c9220e91237a5b58d648fb4298833c" kindref="member">BALLOON_PAYMENT</ref>)</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bonds_new.push_back(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classBalloonPaymentBond" kindref="compound">BalloonPaymentBond</ref>(*dynamic_cast&lt;BalloonPaymentBond<sp/>*&gt;(bond)));</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bond-&gt;type<sp/>==<sp/><ref refid="namespaceConstants_1aaa7f6235ee94070b06f049654312a63e" kindref="member">FLOATING_INTEREST</ref>)</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bonds_new.push_back(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classFloatingInterestBalloonPaymentBond" kindref="compound">FloatingInterestBalloonPaymentBond</ref>(</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dynamic_cast&lt;FloatingInterestBalloonPaymentBond<sp/>*&gt;(bond)));</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>invalid_argument(</highlight><highlight class="stringliteral">&quot;Your<sp/>bond<sp/>type<sp/>does<sp/>not<sp/>have<sp/>a<sp/>corresponding<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;copy<sp/>function<sp/>in<sp/>Utils::copyBonds<sp/>yet.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bonds_new;</highlight></codeline>
<codeline lineno="261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classUtils_1aea07106862ac4b17a93bb598952b5f3c" kindref="member">Utils::isFirstWeekOfTheYear</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>week)<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>WEEK_OF_YEAR[week]<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="265"><highlight class="normal">}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classUtils_1a8318227e82678b727c4de0dda180e64a" kindref="member">Utils::weekOfTheYear</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>week)<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>WEEK_OF_YEAR[week];</highlight></codeline>
<codeline lineno="269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classUtils_1a01a90cec5c722c66a0d75d051f48dd03" kindref="member">Utils::removeIntFromVector</ref>(vector&lt;int&gt;&amp;<sp/>vec,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>el)<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>vbeg<sp/>=<sp/>vec.begin();</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>vend<sp/>=<sp/>vec.end();</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>vec.erase(std::remove(vbeg,<sp/>vend,<sp/>el),<sp/>vend);</highlight></codeline>
<codeline lineno="276"><highlight class="normal">}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classUtils_1a0ce3051b18a14aad2608d31e25b5fdca" kindref="member">Utils::print_exception</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::exception&amp;<sp/>e,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level)<sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/>std::string(level,<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;exception:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>e.what()<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::rethrow_if_nested(e);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::exception&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classUtils_1a0ce3051b18a14aad2608d31e25b5fdca" kindref="member">print_exception</ref>(e,<sp/>level+1);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(...)<sp/>{}</highlight></codeline>
<codeline lineno="285"><highlight class="normal">}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classUtils_1ad22978d5ae586f881920c2c2452436ce" kindref="member">Utils::createDir</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>directory)<sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>create_dir_command;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>create_dir_command<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;if<sp/>not<sp/>exist<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/>+<sp/>directory<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>mkdir<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>create_dir_command<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;mkdir<sp/>-p&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">stat<sp/>sb;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>io_directory<sp/>exists<sp/>and<sp/>print<sp/>either<sp/>location<sp/>or<sp/>that<sp/>io_directory<sp/>does<sp/>not<sp/>exist.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stat(directory.c_str(),<sp/>&amp;sb)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>output<sp/>=<sp/>system((create_dir_command<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>directory).c_str());</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/Utils/Utils.cpp"/>
  </compounddef>
</doxygen>
