<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classReservoir" kind="class" language="C++" prot="public">
    <compoundname>Reservoir</compoundname>
    <basecompoundref refid="classWaterSource" prot="public" virt="non-virtual">WaterSource</basecompoundref>
    <derivedcompoundref refid="classAllocatedReservoir" prot="public" virt="non-virtual">AllocatedReservoir</derivedcompoundref>
    <derivedcompoundref refid="classQuarry" prot="public" virt="non-virtual">Quarry</derivedcompoundref>
    <includes refid="Reservoir_8h" local="no">Reservoir.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classReservoir_1a46bd5b750963dfa9a57b247fd77ab8ff" prot="protected" static="no" mutable="no">
        <type><ref refid="classDataSeries" kindref="compound">DataSeries</ref> *</type>
        <definition>DataSeries* Reservoir::storage_area_curve</definition>
        <argsstring></argsstring>
        <name>storage_area_curve</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SystemComponents/WaterSources/Reservoir.h" line="19" column="1" bodyfile="src/SystemComponents/WaterSources/Reservoir.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classReservoir_1a57ab55e0dde9e29a4ff97de98b09e458" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Reservoir::area</definition>
        <argsstring></argsstring>
        <name>area</name>
        <initializer>= NON_INITIALIZED</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SystemComponents/WaterSources/Reservoir.h" line="20" column="1" bodyfile="src/SystemComponents/WaterSources/Reservoir.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classReservoir_1ad4b37aef4873071d1766baaccce5b8cf" prot="public" static="no" mutable="no">
        <type>const bool</type>
        <definition>const bool Reservoir::fixed_area</definition>
        <argsstring></argsstring>
        <name>fixed_area</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SystemComponents/WaterSources/Reservoir.h" line="23" column="1" bodyfile="src/SystemComponents/WaterSources/Reservoir.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classReservoir_1a2d2d9b302c13703309bb798d24136810" prot="public" static="no" mutable="no">
        <type><ref refid="classEvaporationSeries" kindref="compound">EvaporationSeries</ref></type>
        <definition>EvaporationSeries Reservoir::evaporation_series</definition>
        <argsstring></argsstring>
        <name>evaporation_series</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SystemComponents/WaterSources/Reservoir.h" line="24" column="1" bodyfile="src/SystemComponents/WaterSources/Reservoir.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classReservoir_1ac9803ae5446e4e9a2631ce66817004cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Reservoir::Reservoir</definition>
        <argsstring>(const char *name, const int id, const vector&lt; Catchment *&gt; &amp;catchments, const double capacity, const double max_treatment_capacity, EvaporationSeries &amp;evaporation_series, DataSeries *storage_area_curve, int source_type=RESERVOIR)</argsstring>
        <name>Reservoir</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const vector&lt; <ref refid="classCatchment" kindref="compound">Catchment</ref> *&gt; &amp;</type>
          <declname>catchments</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>capacity</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>max_treatment_capacity</declname>
        </param>
        <param>
          <type><ref refid="classEvaporationSeries" kindref="compound">EvaporationSeries</ref> &amp;</type>
          <declname>evaporation_series</declname>
        </param>
        <param>
          <type><ref refid="classDataSeries" kindref="compound">DataSeries</ref> *</type>
          <declname>storage_area_curve</declname>
        </param>
        <param>
          <type>int</type>
          <declname>source_type</declname>
          <defval>RESERVOIR</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor for when <ref refid="classReservoir" kindref="compound">Reservoir</ref> is built and operational. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>min_environmental_outflow</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>catchments</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>capacity</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_treatment_capacity</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>source_type</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SystemComponents/WaterSources/Reservoir.h" line="26" column="1" bodyfile="src/SystemComponents/WaterSources/Reservoir.cpp" bodystart="20" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classReservoir_1a2e324b75aacc65d90b214ff7f62dfa89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Reservoir::Reservoir</definition>
        <argsstring>(const char *name, const int id, const vector&lt; Catchment *&gt; &amp;catchments, const double capacity, const double max_treatment_capacity, EvaporationSeries &amp;evaporation_series, DataSeries *storage_area_curve, const vector&lt; double &gt; &amp;construction_time_range, double permitting_period, Bond &amp;bond, int source_type=RESERVOIR)</argsstring>
        <name>Reservoir</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const vector&lt; <ref refid="classCatchment" kindref="compound">Catchment</ref> *&gt; &amp;</type>
          <declname>catchments</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>capacity</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>max_treatment_capacity</declname>
        </param>
        <param>
          <type><ref refid="classEvaporationSeries" kindref="compound">EvaporationSeries</ref> &amp;</type>
          <declname>evaporation_series</declname>
        </param>
        <param>
          <type><ref refid="classDataSeries" kindref="compound">DataSeries</ref> *</type>
          <declname>storage_area_curve</declname>
        </param>
        <param>
          <type>const vector&lt; double &gt; &amp;</type>
          <declname>construction_time_range</declname>
        </param>
        <param>
          <type>double</type>
          <declname>permitting_period</declname>
        </param>
        <param>
          <type><ref refid="classBond" kindref="compound">Bond</ref> &amp;</type>
          <declname>bond</declname>
        </param>
        <param>
          <type>int</type>
          <declname>source_type</declname>
          <defval>RESERVOIR</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor for when <ref refid="classReservoir" kindref="compound">Reservoir</ref> does not exist in the beginning of the simulation. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>min_environmental_outflow</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>catchments</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>capacity</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_treatment_capacity</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>source_type</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>construction_rof_or_demand</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>construction_time_range</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>construction_price</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SystemComponents/WaterSources/Reservoir.h" line="33" column="1" bodyfile="src/SystemComponents/WaterSources/Reservoir.cpp" bodystart="69" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classReservoir_1a0a1041fc72df190bbc51d965ede96f49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Reservoir::Reservoir</definition>
        <argsstring>(const char *name, const int id, const vector&lt; Catchment *&gt; &amp;catchments, const double capacity, const double max_treatment_capacity, EvaporationSeries &amp;evaporation_series, double storage_area, int source_type=RESERVOIR)</argsstring>
        <name>Reservoir</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const vector&lt; <ref refid="classCatchment" kindref="compound">Catchment</ref> *&gt; &amp;</type>
          <declname>catchments</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>capacity</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>max_treatment_capacity</declname>
        </param>
        <param>
          <type><ref refid="classEvaporationSeries" kindref="compound">EvaporationSeries</ref> &amp;</type>
          <declname>evaporation_series</declname>
        </param>
        <param>
          <type>double</type>
          <declname>storage_area</declname>
        </param>
        <param>
          <type>int</type>
          <declname>source_type</declname>
          <defval>RESERVOIR</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor for when <ref refid="classReservoir" kindref="compound">Reservoir</ref> is built and operational. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>min_environmental_outflow</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>catchments</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>capacity</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_treatment_capacity</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>source_type</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SystemComponents/WaterSources/Reservoir.h" line="38" column="1" bodyfile="src/SystemComponents/WaterSources/Reservoir.cpp" bodystart="47" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classReservoir_1a56409325d4554f8ef32a9c3605ece5c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Reservoir::Reservoir</definition>
        <argsstring>(const char *name, const int id, const vector&lt; Catchment *&gt; &amp;catchments, const double capacity, const double max_treatment_capacity, EvaporationSeries &amp;evaporation_series, double storage_area, const vector&lt; double &gt; &amp;construction_time_range, double permitting_period, Bond &amp;bond, int source_type=RESERVOIR)</argsstring>
        <name>Reservoir</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const vector&lt; <ref refid="classCatchment" kindref="compound">Catchment</ref> *&gt; &amp;</type>
          <declname>catchments</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>capacity</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>max_treatment_capacity</declname>
        </param>
        <param>
          <type><ref refid="classEvaporationSeries" kindref="compound">EvaporationSeries</ref> &amp;</type>
          <declname>evaporation_series</declname>
        </param>
        <param>
          <type>double</type>
          <declname>storage_area</declname>
        </param>
        <param>
          <type>const vector&lt; double &gt; &amp;</type>
          <declname>construction_time_range</declname>
        </param>
        <param>
          <type>double</type>
          <declname>permitting_period</declname>
        </param>
        <param>
          <type><ref refid="classBond" kindref="compound">Bond</ref> &amp;</type>
          <declname>bond</declname>
        </param>
        <param>
          <type>int</type>
          <declname>source_type</declname>
          <defval>RESERVOIR</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor for when <ref refid="classReservoir" kindref="compound">Reservoir</ref> does not exist in the beginning of the simulation. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>min_environmental_outflow</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>catchments</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>capacity</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_treatment_capacity</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>source_type</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>construction_rof_or_demand</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>construction_time_range</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>construction_price</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SystemComponents/WaterSources/Reservoir.h" line="45" column="1" bodyfile="src/SystemComponents/WaterSources/Reservoir.cpp" bodystart="98" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classReservoir_1a1a6f078a9565dcb65843d3575bdd4172" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Reservoir::Reservoir</definition>
        <argsstring>(const char *name, const int id, const vector&lt; Catchment *&gt; &amp;catchments, const double capacity, const double max_treatment_capacity, EvaporationSeries &amp;evaporation_series, DataSeries *storage_area_curve, vector&lt; double &gt; *allocated_treatment_fractions, vector&lt; double &gt; *allocated_fractions, vector&lt; int &gt; *utilities_with_allocations, int source_type=RESERVOIR)</argsstring>
        <name>Reservoir</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const vector&lt; <ref refid="classCatchment" kindref="compound">Catchment</ref> *&gt; &amp;</type>
          <declname>catchments</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>capacity</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>max_treatment_capacity</declname>
        </param>
        <param>
          <type><ref refid="classEvaporationSeries" kindref="compound">EvaporationSeries</ref> &amp;</type>
          <declname>evaporation_series</declname>
        </param>
        <param>
          <type><ref refid="classDataSeries" kindref="compound">DataSeries</ref> *</type>
          <declname>storage_area_curve</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; *</type>
          <declname>allocated_treatment_fractions</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; *</type>
          <declname>allocated_fractions</declname>
        </param>
        <param>
          <type>vector&lt; int &gt; *</type>
          <declname>utilities_with_allocations</declname>
        </param>
        <param>
          <type>int</type>
          <declname>source_type</declname>
          <defval>RESERVOIR</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor for when <ref refid="classReservoir" kindref="compound">Reservoir</ref> is built and operational. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>min_environmental_outflow</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>catchments</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>capacity</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_treatment_capacity</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>source_type</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SystemComponents/WaterSources/Reservoir.h" line="50" column="1" bodyfile="src/SystemComponents/WaterSources/Reservoir.cpp" bodystart="117" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="classReservoir_1a617f90b97899699d7e0dd97e7ebb34bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Reservoir::Reservoir</definition>
        <argsstring>(const char *name, const int id, const vector&lt; Catchment *&gt; &amp;catchments, const double capacity, const double max_treatment_capacity, EvaporationSeries &amp;evaporation_series, double storage_area, vector&lt; double &gt; *allocated_treatment_fractions, vector&lt; double &gt; *allocated_fractions, vector&lt; int &gt; *utilities_with_allocations, int source_type=RESERVOIR)</argsstring>
        <name>Reservoir</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const vector&lt; <ref refid="classCatchment" kindref="compound">Catchment</ref> *&gt; &amp;</type>
          <declname>catchments</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>capacity</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>max_treatment_capacity</declname>
        </param>
        <param>
          <type><ref refid="classEvaporationSeries" kindref="compound">EvaporationSeries</ref> &amp;</type>
          <declname>evaporation_series</declname>
        </param>
        <param>
          <type>double</type>
          <declname>storage_area</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; *</type>
          <declname>allocated_treatment_fractions</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; *</type>
          <declname>allocated_fractions</declname>
        </param>
        <param>
          <type>vector&lt; int &gt; *</type>
          <declname>utilities_with_allocations</declname>
        </param>
        <param>
          <type>int</type>
          <declname>source_type</declname>
          <defval>RESERVOIR</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor for when <ref refid="classReservoir" kindref="compound">Reservoir</ref> is built and operational. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>min_environmental_outflow</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>catchments</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>capacity</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_treatment_capacity</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>source_type</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SystemComponents/WaterSources/Reservoir.h" line="61" column="1" bodyfile="src/SystemComponents/WaterSources/Reservoir.cpp" bodystart="148" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="classReservoir_1ac20659043afad4d2df49ce91e08f5dad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Reservoir::Reservoir</definition>
        <argsstring>(const char *name, const int id, const vector&lt; Catchment *&gt; &amp;catchments, const double capacity, const double max_treatment_capacity, EvaporationSeries &amp;evaporation_series, DataSeries *storage_area_curve, vector&lt; double &gt; *allocated_treatment_fractions, vector&lt; double &gt; *allocated_fractions, vector&lt; int &gt; *utilities_with_allocations, const vector&lt; double &gt; &amp;construction_time_range, double permitting_period, Bond &amp;bond, int source_type=RESERVOIR)</argsstring>
        <name>Reservoir</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const vector&lt; <ref refid="classCatchment" kindref="compound">Catchment</ref> *&gt; &amp;</type>
          <declname>catchments</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>capacity</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>max_treatment_capacity</declname>
        </param>
        <param>
          <type><ref refid="classEvaporationSeries" kindref="compound">EvaporationSeries</ref> &amp;</type>
          <declname>evaporation_series</declname>
        </param>
        <param>
          <type><ref refid="classDataSeries" kindref="compound">DataSeries</ref> *</type>
          <declname>storage_area_curve</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; *</type>
          <declname>allocated_treatment_fractions</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; *</type>
          <declname>allocated_fractions</declname>
        </param>
        <param>
          <type>vector&lt; int &gt; *</type>
          <declname>utilities_with_allocations</declname>
        </param>
        <param>
          <type>const vector&lt; double &gt; &amp;</type>
          <declname>construction_time_range</declname>
        </param>
        <param>
          <type>double</type>
          <declname>permitting_period</declname>
        </param>
        <param>
          <type><ref refid="classBond" kindref="compound">Bond</ref> &amp;</type>
          <declname>bond</declname>
        </param>
        <param>
          <type>int</type>
          <declname>source_type</declname>
          <defval>RESERVOIR</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor for when <ref refid="classReservoir" kindref="compound">Reservoir</ref> does not exist in the beginning of the simulation. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>min_environmental_outflow</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>catchments</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>capacity</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_treatment_capacity</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>source_type</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>construction_rof_or_demand</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>construction_time_range</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>construction_price</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SystemComponents/WaterSources/Reservoir.h" line="72" column="1" bodyfile="src/SystemComponents/WaterSources/Reservoir.cpp" bodystart="174" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="classReservoir_1a37ca7ba59d127fee6522c1ad545c9caf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Reservoir::Reservoir</definition>
        <argsstring>(const char *name, const int id, const vector&lt; Catchment *&gt; &amp;catchments, const double capacity, const double max_treatment_capacity, EvaporationSeries &amp;evaporation_series, double storage_area, vector&lt; double &gt; *allocated_treatment_fractions, vector&lt; double &gt; *allocated_fractions, vector&lt; int &gt; *utilities_with_allocations, const vector&lt; double &gt; &amp;construction_time_range, double permitting_period, Bond &amp;bond, int source_type=RESERVOIR)</argsstring>
        <name>Reservoir</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const vector&lt; <ref refid="classCatchment" kindref="compound">Catchment</ref> *&gt; &amp;</type>
          <declname>catchments</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>capacity</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>max_treatment_capacity</declname>
        </param>
        <param>
          <type><ref refid="classEvaporationSeries" kindref="compound">EvaporationSeries</ref> &amp;</type>
          <declname>evaporation_series</declname>
        </param>
        <param>
          <type>double</type>
          <declname>storage_area</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; *</type>
          <declname>allocated_treatment_fractions</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; *</type>
          <declname>allocated_fractions</declname>
        </param>
        <param>
          <type>vector&lt; int &gt; *</type>
          <declname>utilities_with_allocations</declname>
        </param>
        <param>
          <type>const vector&lt; double &gt; &amp;</type>
          <declname>construction_time_range</declname>
        </param>
        <param>
          <type>double</type>
          <declname>permitting_period</declname>
        </param>
        <param>
          <type><ref refid="classBond" kindref="compound">Bond</ref> &amp;</type>
          <declname>bond</declname>
        </param>
        <param>
          <type>int</type>
          <declname>source_type</declname>
          <defval>RESERVOIR</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor for when <ref refid="classReservoir" kindref="compound">Reservoir</ref> does not exist in the beginning of the simulation. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>min_environmental_outflow</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>catchments</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>capacity</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_treatment_capacity</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>source_type</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>construction_rof_or_demand</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>construction_time_range</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>construction_price</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SystemComponents/WaterSources/Reservoir.h" line="79" column="1" bodyfile="src/SystemComponents/WaterSources/Reservoir.cpp" bodystart="206" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="classReservoir_1a3fc46303b2846aa23bb52f0b69b9585c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Reservoir::Reservoir</definition>
        <argsstring>(const Reservoir &amp;reservoir)</argsstring>
        <name>Reservoir</name>
        <param>
          <type>const <ref refid="classReservoir" kindref="compound">Reservoir</ref> &amp;</type>
          <declname>reservoir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy constructor. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reservoir</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SystemComponents/WaterSources/Reservoir.h" line="87" column="1" bodyfile="src/SystemComponents/WaterSources/Reservoir.cpp" bodystart="222" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="classReservoir_1a0a66480ae98d0cc67ca5c3134f460d3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classReservoir" kindref="compound">Reservoir</ref> &amp;</type>
        <definition>Reservoir &amp; Reservoir::operator=</definition>
        <argsstring>(const Reservoir &amp;reservoir)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classReservoir" kindref="compound">Reservoir</ref> &amp;</type>
          <declname>reservoir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy assignment operator <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reservoir</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SystemComponents/WaterSources/Reservoir.h" line="89" column="1" bodyfile="src/SystemComponents/WaterSources/Reservoir.cpp" bodystart="236" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="classReservoir_1a2f8bfdc73c7470185775a940fb3531de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Reservoir::~Reservoir</definition>
        <argsstring>() override</argsstring>
        <name>~Reservoir</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SystemComponents/WaterSources/Reservoir.h" line="91" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classReservoir_1a66929c055193785bc9d47bcdf0bc7445" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Reservoir::applyContinuity</definition>
        <argsstring>(int week, double upstream_source_inflow, double wastewater_discharge, vector&lt; double &gt; &amp;demand_outflow) override</argsstring>
        <name>applyContinuity</name>
        <reimplements refid="classWaterSource_1ac070445379fe706f65b977dade4f3fbc">applyContinuity</reimplements>
        <param>
          <type>int</type>
          <declname>week</declname>
        </param>
        <param>
          <type>double</type>
          <declname>upstream_source_inflow</declname>
        </param>
        <param>
          <type>double</type>
          <declname>wastewater_discharge</declname>
          <defname>wastewater_inflow</defname>
        </param>
        <param>
          <type>vector&lt; double &gt; &amp;</type>
          <declname>demand_outflow</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classReservoir" kindref="compound">Reservoir</ref> mass balance. Gets releases from upstream reservoirs, demands from connected utilities, and combines them with its catchments inflows. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>week</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>upstream_source_inflow</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>demand_outflow</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para>Calculate total runoff inflow reaching reservoir from its watershed.</para><para>Calculates water lost through evaporation.</para><para>Calculate new stored volume and outflow based on continuity.</para><para>Check if spillage is needed and, if so, correct stored volume and calculate spillage. <linebreak/>
 Update data collection variables. </para>        </inbodydescription>
        <location file="src/SystemComponents/WaterSources/Reservoir.h" line="93" column="1" bodyfile="src/SystemComponents/WaterSources/Reservoir.cpp" bodystart="255" bodyend="309"/>
      </memberdef>
      <memberdef kind="function" id="classReservoir_1ac6f64dd92c401e58095e7b125855041b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Reservoir::setOnline</definition>
        <argsstring>() override</argsstring>
        <name>setOnline</name>
        <reimplements refid="classWaterSource_1ab3396e2915db91a6c82e0f29c7889df4">setOnline</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>start empty and gradually fill as inflows start coming in. </para>        </inbodydescription>
        <location file="src/SystemComponents/WaterSources/Reservoir.h" line="97" column="1" bodyfile="src/SystemComponents/WaterSources/Reservoir.cpp" bodystart="311" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="classReservoir_1ad1bb7aa46397719d09e0b6188b9bc28d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Reservoir::setRealization</definition>
        <argsstring>(unsigned long r, vector&lt; double &gt; &amp;rdm_factors) override</argsstring>
        <name>setRealization</name>
        <reimplements refid="classWaterSource_1af72660e62fda45b6ae53da5f0afd86db">setRealization</reimplements>
        <param>
          <type>unsigned long</type>
          <declname>r</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; &amp;</type>
          <declname>rdm_factors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set inflows, evaporation and rdm values for water source for a given utility r <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rdm_factors</parametername>
</parameternamelist>
<parameterdescription>
<para>table with one realization per row in which the first column is the evaporation multiplier, followed by pairs of values for each source representing permitting time and construction cost. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para>Update total catchment inflow, demand, and available water volume for week 0; <linebreak/>
<linebreak/>
 Set permitting times according to corresponding rdm factors.</para><para>Set construction cost overruns according to corresponding rdm factors. </para>        </inbodydescription>
        <location file="src/SystemComponents/WaterSources/Reservoir.h" line="99" column="1" bodyfile="src/SystemComponents/WaterSources/Reservoir.cpp" bodystart="318" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="classReservoir_1af86ffdaa2842a38b7f59e0360a1004a1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Reservoir::getArea</definition>
        <argsstring>() const</argsstring>
        <name>getArea</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SystemComponents/WaterSources/Reservoir.h" line="101" column="1" bodyfile="src/SystemComponents/WaterSources/Reservoir.cpp" bodystart="324" bodyend="326"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="179">
        <label>Quarry</label>
        <link refid="classQuarry"/>
        <childnode refid="176" relation="public-inheritance">
        </childnode>
      </node>
      <node id="177">
        <label>WaterSource</label>
        <link refid="classWaterSource"/>
      </node>
      <node id="176">
        <label>Reservoir</label>
        <link refid="classReservoir"/>
        <childnode refid="177" relation="public-inheritance">
        </childnode>
      </node>
      <node id="178">
        <label>AllocatedReservoir</label>
        <link refid="classAllocatedReservoir"/>
        <childnode refid="176" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="184">
        <label>DataSeries</label>
        <link refid="classDataSeries"/>
        <childnode refid="185" relation="public-inheritance">
        </childnode>
      </node>
      <node id="185">
        <label>ControlRules</label>
        <link refid="classControlRules"/>
      </node>
      <node id="181">
        <label>WaterSource</label>
        <link refid="classWaterSource"/>
      </node>
      <node id="183">
        <label>Catchment</label>
        <link refid="classCatchment"/>
      </node>
      <node id="182">
        <label>EvaporationSeries</label>
        <link refid="classEvaporationSeries"/>
        <childnode refid="183" relation="public-inheritance">
        </childnode>
      </node>
      <node id="180">
        <label>Reservoir</label>
        <link refid="classReservoir"/>
        <childnode refid="181" relation="public-inheritance">
        </childnode>
        <childnode refid="182" relation="usage">
          <edgelabel>evaporation_series</edgelabel>
        </childnode>
        <childnode refid="184" relation="usage">
          <edgelabel>storage_area_curve</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/SystemComponents/WaterSources/Reservoir.h" line="17" column="1" bodyfile="src/SystemComponents/WaterSources/Reservoir.h" bodystart="17" bodyend="102"/>
    <listofallmembers>
      <member refid="classWaterSource_1abffedb6e58620b1b1d6f3c4b4480d3a0" prot="public" virt="virtual"><scope>Reservoir</scope><name>addCapacity</name></member>
      <member refid="classWaterSource_1a210818957f088da4046597d0f1a1340f" prot="public" virt="virtual"><scope>Reservoir</scope><name>addTreatmentCapacity</name></member>
      <member refid="classWaterSource_1ab94063d51314cfb896010408ae32fa9c" prot="protected" virt="non-virtual"><scope>Reservoir</scope><name>allocated_capacities</name></member>
      <member refid="classWaterSource_1a2f6655a80c4847fe039987255d9d998c" prot="protected" virt="non-virtual"><scope>Reservoir</scope><name>allocated_fractions</name></member>
      <member refid="classWaterSource_1a87dc0bfb5cf4e2b9a953c7a80058c923" prot="protected" virt="non-virtual"><scope>Reservoir</scope><name>allocated_treatment_capacities</name></member>
      <member refid="classWaterSource_1aa73fe10cfc6579b2fb79529e1dde5140" prot="protected" virt="non-virtual"><scope>Reservoir</scope><name>allocated_treatment_fractions</name></member>
      <member refid="classReservoir_1a66929c055193785bc9d47bcdf0bc7445" prot="public" virt="virtual"><scope>Reservoir</scope><name>applyContinuity</name></member>
      <member refid="classReservoir_1a57ab55e0dde9e29a4ff97de98b09e458" prot="protected" virt="non-virtual"><scope>Reservoir</scope><name>area</name></member>
      <member refid="classWaterSource_1a77d3fe9ea445fc987b07debdfb9e2f5b" prot="protected" virt="non-virtual"><scope>Reservoir</scope><name>available_allocated_volumes</name></member>
      <member refid="classWaterSource_1a49e1a191152e344e2161e8db166e067a" prot="protected" virt="non-virtual"><scope>Reservoir</scope><name>available_volume</name></member>
      <member refid="classWaterSource_1a413b094e11bdce62f4d82e5bb9e4706e" prot="protected" virt="non-virtual"><scope>Reservoir</scope><name>bonds</name></member>
      <member refid="classWaterSource_1a49f9da70a5080abe82160b1a0d194e60" prot="protected" virt="non-virtual"><scope>Reservoir</scope><name>built_in_sequence</name></member>
      <member refid="classWaterSource_1abeb8ba4b51c2b270baf9162df76d8b58" prot="protected" virt="non-virtual"><scope>Reservoir</scope><name>bypass</name></member>
      <member refid="classWaterSource_1a2ec257b415b248214a8bce7fc5267723" prot="protected" virt="non-virtual"><scope>Reservoir</scope><name>capacity</name></member>
      <member refid="classWaterSource_1a8c18c34f23f8a06685c1d12f462ed830" prot="protected" virt="non-virtual"><scope>Reservoir</scope><name>catchments</name></member>
      <member refid="classWaterSource_1a47bc2006a1ef6ea4429d56a24319940f" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>checkForInputErrorsConstruction</name></member>
      <member refid="classWaterSource_1a7a1325107c74bb0ea553dc3547204e01" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>compare</name></member>
      <member refid="classWaterSource_1ae059fbe3f911a819bac0202f7f45e8e4" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>construction_time</name></member>
      <member refid="classWaterSource_1a1137cd86f8d3f8a48ebec54282132993" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>continuityWaterSource</name></member>
      <member refid="classWaterSource_1a6085899c4b4cc40fa80784203e1a9755" prot="protected" virt="non-virtual"><scope>Reservoir</scope><name>evaporated_volume</name></member>
      <member refid="classReservoir_1a2d2d9b302c13703309bb798d24136810" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>evaporation_series</name></member>
      <member refid="classReservoir_1ad4b37aef4873071d1766baaccce5b8cf" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>fixed_area</name></member>
      <member refid="classWaterSource_1a44102a0eafdaebd86f0ed8dabb313733" prot="public" virt="virtual"><scope>Reservoir</scope><name>getAllocatedCapacity</name></member>
      <member refid="classWaterSource_1a1843ada21b8e7500d80a5a7db10621b3" prot="public" virt="virtual"><scope>Reservoir</scope><name>getAllocatedFraction</name></member>
      <member refid="classWaterSource_1a63b1a410b47710db049e2b2e9c3c39a0" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>getAllocatedInflow</name></member>
      <member refid="classWaterSource_1ab3ba86d2a3e864e435ba2b88cceea555" prot="public" virt="virtual"><scope>Reservoir</scope><name>getAllocatedTreatmentCapacity</name></member>
      <member refid="classReservoir_1af86ffdaa2842a38b7f59e0360a1004a1" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>getArea</name></member>
      <member refid="classWaterSource_1a1087f5f2458803fd1d37383e303bd25f" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>getAvailable_allocated_volumes</name></member>
      <member refid="classWaterSource_1a42c687a3be3d88ba38dbea668c8d35cf" prot="public" virt="virtual"><scope>Reservoir</scope><name>getAvailableAllocatedVolume</name></member>
      <member refid="classWaterSource_1af6445a2dd3764907bcb9a37d4647f910" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>getAvailableSupplyVolume</name></member>
      <member refid="classWaterSource_1a8eae3b16fc0f37780c1df827386f656e" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>getAvailableVolume</name></member>
      <member refid="classWaterSource_1a22f89ebf1115de192df588a4fd83c671" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>getBond</name></member>
      <member refid="classWaterSource_1a09b60eb2e318c72a42cd6bdd336a6f67" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>getBuilt_in_sequence</name></member>
      <member refid="classWaterSource_1ac1e8880f0aeb56b2728e253d3500ef40" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>getConstruction_time</name></member>
      <member refid="classWaterSource_1ac57d6b292490333b5bc14233bce326ce" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>getDemand</name></member>
      <member refid="classWaterSource_1a00b156a153fc24097e4c8a4e5c46c4e0" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>getEvaporated_volume</name></member>
      <member refid="classWaterSource_1af7607924825ffe293179b09fe1bc466e" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>getMin_environmental_outflow</name></member>
      <member refid="classWaterSource_1aa21d3f1c87ced40c2b673d9e43d99176" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>getPermitting_period</name></member>
      <member refid="classWaterSource_1a71cb8bd481bbce0089aa78dcd1c3309a" prot="public" virt="virtual"><scope>Reservoir</scope><name>getSupplyAllocatedFraction</name></member>
      <member refid="classWaterSource_1aa4cbbd1ee0fc5ea9291eb5d8067b3aa0" prot="public" virt="virtual"><scope>Reservoir</scope><name>getSupplyCapacity</name></member>
      <member refid="classWaterSource_1a7678e05e3e73b927c0b47e3041d7415f" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>getTotal_outflow</name></member>
      <member refid="classWaterSource_1a6228c9aee407ca2544753dbd2792c5fb" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>getTotal_treatment_capacity</name></member>
      <member refid="classWaterSource_1ad7e60efd7395f8d3e674e602226e5ac1" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>getUpstream_source_inflow</name></member>
      <member refid="classWaterSource_1afd2a153ba8f4ecaa9f8fa851d5a1727c" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>getUpstreamCatchmentInflow</name></member>
      <member refid="classWaterSource_1a7d6beb9fce5be21a3777fee88f045e62" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>getUtilities_with_allocations</name></member>
      <member refid="classWaterSource_1aee22325e6af0e3c804ddbd9a3505be05" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>getWastewater_inflow</name></member>
      <member refid="classWaterSource_1a83c6dcf19b64533ce4bc3b918ce6cc8e" prot="protected" virt="non-virtual"><scope>Reservoir</scope><name>highest_alloc_id</name></member>
      <member refid="classWaterSource_1a6eafe5dfefd317877d1244e8a7c6e742" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>id</name></member>
      <member refid="classWaterSource_1a130fd661ff31c53115cca23e4e2f210a" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>isOnline</name></member>
      <member refid="classWaterSource_1adae67ac96597e4b25332002b88a9a52b" prot="protected" virt="non-virtual"><scope>Reservoir</scope><name>min_environmental_outflow</name></member>
      <member refid="classWaterSource_1a846ea74c5b453d014f594d41fee8c765" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>name</name></member>
      <member refid="classWaterSource_1aef4e289b47c2360f2e991ea3ee535781" prot="protected" virt="non-virtual"><scope>Reservoir</scope><name>online</name></member>
      <member refid="classWaterSource_1accb044cc78f9a444ca18bf7283b5b596" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>operator&lt;</name></member>
      <member refid="classReservoir_1a0a66480ae98d0cc67ca5c3134f460d3c" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>operator=</name></member>
      <member refid="classWaterSource_1aafdaafb023a35186ae01d213665b5e27" prot="public" virt="non-virtual" ambiguityscope="WaterSource::"><scope>Reservoir</scope><name>operator=</name></member>
      <member refid="classWaterSource_1af25e06ec954898f3392cb125d2f2c2ad" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>operator==</name></member>
      <member refid="classWaterSource_1a9db800769891e1f49d74a78298f4dac1" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>operator&gt;</name></member>
      <member refid="classWaterSource_1a036d7980e74224fd5f5c6a390e0d5abb" prot="protected" virt="non-virtual"><scope>Reservoir</scope><name>permitting_time</name></member>
      <member refid="classWaterSource_1a3f04ae75d6235117d391dece2d323890" prot="protected" virt="non-virtual"><scope>Reservoir</scope><name>policy_added_demand</name></member>
      <member refid="classWaterSource_1aebc6985952d3e69f0d8ae1d0498a1ffe" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>randomConstructionTime</name></member>
      <member refid="classWaterSource_1ab697c3a0765d445f72533f6a5f139bd9" prot="public" virt="virtual"><scope>Reservoir</scope><name>removeWater</name></member>
      <member refid="classReservoir_1ac9803ae5446e4e9a2631ce66817004cf" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>Reservoir</name></member>
      <member refid="classReservoir_1a2e324b75aacc65d90b214ff7f62dfa89" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>Reservoir</name></member>
      <member refid="classReservoir_1a0a1041fc72df190bbc51d965ede96f49" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>Reservoir</name></member>
      <member refid="classReservoir_1a56409325d4554f8ef32a9c3605ece5c8" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>Reservoir</name></member>
      <member refid="classReservoir_1a1a6f078a9565dcb65843d3575bdd4172" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>Reservoir</name></member>
      <member refid="classReservoir_1a617f90b97899699d7e0dd97e7ebb34bc" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>Reservoir</name></member>
      <member refid="classReservoir_1ac20659043afad4d2df49ce91e08f5dad" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>Reservoir</name></member>
      <member refid="classReservoir_1a37ca7ba59d127fee6522c1ad545c9caf" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>Reservoir</name></member>
      <member refid="classReservoir_1a3fc46303b2846aa23bb52f0b69b9585c" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>Reservoir</name></member>
      <member refid="classWaterSource_1af52f39412f0d761f7e3b3369ffdf90f1" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>resetAllocations</name></member>
      <member refid="classWaterSource_1abaf6cb0ecca08c87428ad516f11f8c2e" prot="protected" virt="non-virtual"><scope>Reservoir</scope><name>seed</name></member>
      <member refid="classWaterSource_1ac834762e016e796968ad286feeca7be6" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>setAllocations</name></member>
      <member refid="classWaterSource_1ae29ed4aa2b9c97c5a41772daf4631f05" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>setAvailableAllocatedVolumes</name></member>
      <member refid="classWaterSource_1a5f8007eb1ae604cfaa67ebb4c0c46eb1" prot="public" virt="virtual"><scope>Reservoir</scope><name>setFull</name></member>
      <member refid="classWaterSource_1a406246432d29f49189d53207ab1d895a" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>setMin_environmental_outflow</name></member>
      <member refid="classReservoir_1ac6f64dd92c401e58095e7b125855041b" prot="public" virt="virtual"><scope>Reservoir</scope><name>setOnline</name></member>
      <member refid="classWaterSource_1ab53d376a425b8db603382ba27b52b1d4" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>setOutflow_previous_week</name></member>
      <member refid="classReservoir_1ad1bb7aa46397719d09e0b6188b9bc28d" prot="public" virt="virtual"><scope>Reservoir</scope><name>setRealization</name></member>
      <member refid="classWaterSource_1a741c60afc9dafaae318ce7c99f4fd327" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>setSeed</name></member>
      <member refid="classWaterSource_1ac3105a8ef5470af2e40e7ed74a9be157" prot="public" virt="virtual"><scope>Reservoir</scope><name>skipConstruction</name></member>
      <member refid="classWaterSource_1afdd12c29fc74ea21dff1f1be9b8c2b7b" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>source_type</name></member>
      <member refid="classReservoir_1a46bd5b750963dfa9a57b247fd77ab8ff" prot="protected" virt="non-virtual"><scope>Reservoir</scope><name>storage_area_curve</name></member>
      <member refid="classWaterSource_1a87535be59994b2602576cdf34dbe04b9" prot="protected" virt="non-virtual"><scope>Reservoir</scope><name>supply_allocated_fractions</name></member>
      <member refid="classWaterSource_1a4be6864dc196287bdf8329b3aa6ca662" prot="protected" virt="non-virtual"><scope>Reservoir</scope><name>total_allocated_fraction</name></member>
      <member refid="classWaterSource_1a1934917dd35a2508a5102eb5831431b7" prot="protected" virt="non-virtual"><scope>Reservoir</scope><name>total_demand</name></member>
      <member refid="classWaterSource_1a5e6992931464ed75576326b9f1bd3c4f" prot="protected" virt="non-virtual"><scope>Reservoir</scope><name>total_outflow</name></member>
      <member refid="classWaterSource_1a2fdfd5ff7d103e71108cf2a31babaccb" prot="protected" virt="non-virtual"><scope>Reservoir</scope><name>total_treatment_capacity</name></member>
      <member refid="classWaterSource_1a4bd60dafcc0b18f1c7a415f489bb220a" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>unsetSeed</name></member>
      <member refid="classWaterSource_1aceb2d77612db7ba71a171848a5e03b4f" prot="protected" virt="non-virtual"><scope>Reservoir</scope><name>upstream_catchment_inflow</name></member>
      <member refid="classWaterSource_1a67165e29345b61f36c8d8ccf3f648819" prot="protected" virt="non-virtual"><scope>Reservoir</scope><name>upstream_min_env_inflow</name></member>
      <member refid="classWaterSource_1a7a69b2e9b6030f1035e6cf44d2918ee5" prot="protected" virt="non-virtual"><scope>Reservoir</scope><name>upstream_source_inflow</name></member>
      <member refid="classWaterSource_1ac345583fc2d0f7e1db31ee40244d7ace" prot="protected" virt="non-virtual"><scope>Reservoir</scope><name>utilities_with_allocations</name></member>
      <member refid="classWaterSource_1aeb5a2d2d83383a70ca20f3e94635a9c7" prot="protected" virt="non-virtual"><scope>Reservoir</scope><name>wastewater_inflow</name></member>
      <member refid="classWaterSource_1a27b9d29d6cbb36d128f740f7ca00f500" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>WaterSource</name></member>
      <member refid="classWaterSource_1a7723d343a0b8edff36018ca7acf09f62" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>WaterSource</name></member>
      <member refid="classWaterSource_1a48641ff06b69505ab298f4f23e759a22" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>WaterSource</name></member>
      <member refid="classWaterSource_1a284e207f074da6f485d41f65ac025cf1" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>WaterSource</name></member>
      <member refid="classWaterSource_1ae8cf84e138983737e044bc1217858021" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>WaterSource</name></member>
      <member refid="classWaterSource_1aaa3aba0a9709cc1432f85f443b033a65" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>WaterSource</name></member>
      <member refid="classWaterSource_1acef73d9b1675fb6db9ec39347514db6d" prot="protected" virt="non-virtual"><scope>Reservoir</scope><name>wq_pool_id</name></member>
      <member refid="classReservoir_1a2f8bfdc73c7470185775a940fb3531de" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>~Reservoir</name></member>
      <member refid="classWaterSource_1a48d9be2deccd87e1d1cdcbb4b2df83cf" prot="public" virt="virtual"><scope>Reservoir</scope><name>~WaterSource</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
