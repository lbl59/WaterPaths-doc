<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classVector" kind="class" language="C++" prot="public">
    <compoundname>Vector</compoundname>
    <includes refid="Array_8h" local="no">Array.h</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classVector_1adab11fd27ce9e960aa8612937e453786" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int Vector&lt; T &gt;::n</definition>
        <argsstring></argsstring>
        <name>n</name>
        <briefdescription>
<para>The size of the array. The upper index is <computeroutput>n-1</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/QPSolver/Array.h" line="60" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/QPSolver/Array.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classVector_1ab72db1fed2b2310123729b1fd76d3446" prot="private" static="no" mutable="no">
        <type>T *</type>
        <definition>T* Vector&lt; T &gt;::v</definition>
        <argsstring></argsstring>
        <name>v</name>
        <briefdescription>
<para>A pointer to the location in memory that stores the vector (the data). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/QPSolver/Array.h" line="64" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/QPSolver/Array.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classVector_1a39d6069675db4ecfc1ab81d440da759a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Vector&lt; T &gt;::Vector</definition>
        <argsstring>()</argsstring>
        <name>Vector</name>
        <briefdescription>
<para>Base constructor for a new Vector&lt; T&gt;:: <ref refid="classVector" kindref="compound">Vector</ref> object with data type <computeroutput>T</computeroutput> with size 0 and no data. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the elements stored in the matrix and vectors. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/QPSolver/Array.h" line="30" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/QPSolver/Array.h" bodystart="75" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classVector_1a8575836acd6e8c9a2297b5ba6d14008c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Vector&lt; T &gt;::Vector</definition>
        <argsstring>(const unsigned int n)</argsstring>
        <name>Vector</name>
        <param>
          <type>const unsigned int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Construct a new Vector&lt; T&gt;:: <ref refid="classVector" kindref="compound">Vector</ref> object with size <computeroutput>n</computeroutput> and no data. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the elements stored in the matrix and vectors. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the vector. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/QPSolver/Array.h" line="31" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/QPSolver/Array.h" bodystart="86" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classVector_1aa2bc8aac00503574bac8302652ef7ba0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Vector&lt; T &gt;::Vector</definition>
        <argsstring>(const T &amp;a, const unsigned int n)</argsstring>
        <name>Vector</name>
        <param>
          <type>const T &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Construct a new Vector&lt; T&gt;:: <ref refid="classVector" kindref="compound">Vector</ref> object with size <computeroutput>n</computeroutput> and initialize all elements to the constant value <computeroutput>a</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>This template takes a reference to the constant value <computeroutput>a</computeroutput> and initializes all elements to this value.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the elements stored in the matrix and vectors. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>The constant value to initialize all elements to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/QPSolver/Array.h" line="32" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/QPSolver/Array.h" bodystart="102" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classVector_1a62f06e9931e61437a5a5783eca0a9550" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Vector&lt; T &gt;::Vector</definition>
        <argsstring>(const T *a, const unsigned int n)</argsstring>
        <name>Vector</name>
        <param>
          <type>const T *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Construct a new Vector&lt; T&gt;:: <ref refid="classVector" kindref="compound">Vector</ref> object with size <computeroutput>n</computeroutput> and initialize all elements to the constant value <computeroutput>a</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>This template takes a pointer to the constant value <computeroutput>a</computeroutput>. It first dereferences the pointer to get the value of <computeroutput>a</computeroutput> and then increments the pointer to get the next value. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the elements stored in the matrix and vectors. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>The array to initialize the vector to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the vector. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/QPSolver/Array.h" line="33" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/QPSolver/Array.h" bodystart="120" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classVector_1ac71d98c4ac152523a76bbadcd3a83a5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Vector&lt; T &gt;::Vector</definition>
        <argsstring>(const Vector &amp;rhs)</argsstring>
        <name>Vector</name>
        <param>
          <type>const <ref refid="classVector" kindref="compound">Vector</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Construct a new Vector&lt; T&gt;:: <ref refid="classVector" kindref="compound">Vector</ref> object by copying the vector <computeroutput>rhs</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the elements stored in the matrix and vectors. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>The vector to copy. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/QPSolver/Array.h" line="34" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/QPSolver/Array.h" bodystart="135" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classVector_1afd524fac19e6d3d69db5198ffe2952b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Vector&lt; T &gt;::~Vector</definition>
        <argsstring>()</argsstring>
        <name>~Vector</name>
        <briefdescription>
<para>Destroy the Vector&lt; T&gt;:: <ref refid="classVector" kindref="compound">Vector</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the elements stored in the matrix and vectors. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/QPSolver/Array.h" line="35" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/QPSolver/Array.h" bodystart="149" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="classVector_1aa07a0c8ca467e2ce190afc26054cf422" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T &amp; Vector&lt; T &gt;::operator[]</definition>
        <argsstring>(const unsigned int &amp;i)</argsstring>
        <name>operator[]</name>
        <param>
          <type>const unsigned int &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>A subscripting operator to access the <computeroutput>i</computeroutput>-th element of the vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the element to access. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>T&amp; A reference to the <computeroutput>i</computeroutput>-th element. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/QPSolver/Array.h" line="37" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/QPSolver/Array.h" bodystart="231" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="classVector_1a36cc881f0270de628bec7a80bbdab741" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T &amp; Vector&lt; T &gt;::operator[]</definition>
        <argsstring>(const unsigned int &amp;i) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>const unsigned int &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>A subscripting operator to access the <computeroutput>i</computeroutput>-th element of the vector without changing the vector itself. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the element to access. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>T&amp; A reference to the <computeroutput>i</computeroutput>-th element. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/QPSolver/Array.h" line="38" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/QPSolver/Array.h" bodystart="243" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="classVector_1a5214a382564aedc712b609416aa3b7b1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int Vector&lt; T &gt;::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <briefdescription>
<para>Returns the size of the vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the elements stored in the matrix and vectors. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>unsigned int </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/QPSolver/Array.h" line="39" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/QPSolver/Array.h" bodystart="255" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="classVector_1ae751d4bf4c403e4578a9df1202e93f56" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Vector&lt; T &gt;::resize</definition>
        <argsstring>(const unsigned int n)</argsstring>
        <name>resize</name>
        <param>
          <type>const unsigned int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Resize the vector to size <computeroutput>n</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the elements stored in the matrix and vectors. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>The size to resize the vector to. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/QPSolver/Array.h" line="40" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/QPSolver/Array.h" bodystart="161" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="classVector_1a1ff5ed0bca47854450eb78024c6f52ff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Vector&lt; T &gt;::resize</definition>
        <argsstring>(const T &amp;a, const unsigned int n)</argsstring>
        <name>resize</name>
        <param>
          <type>const T &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Resize the vector to size <computeroutput>n</computeroutput> and initialize all elements to the constant value <computeroutput>a</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the elements stored in the matrix and vectors. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>The constant value to initialize all elements to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>The size to resize the vector to. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/QPSolver/Array.h" line="41" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/QPSolver/Array.h" bodystart="180" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="classVector_1aa44e8e04a723f2c0bd9382a3bfa46e7c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classVector" kindref="compound">Vector</ref>&lt; T &gt; &amp;</type>
        <definition>Vector&lt; T &gt; &amp; Vector&lt; T &gt;::operator=</definition>
        <argsstring>(const Vector&lt; T &gt; &amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classVector" kindref="compound">Vector</ref>&lt; T &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Assignment operator that assigns the current vector to the vector <computeroutput>rhs</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>Postcondition: normal assignment via copying has been performed. If vector and rhs were different sizes, vector has been resized to match the size of <computeroutput>rhs</computeroutput>.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the elements stored in the matrix and vectors. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>The vector to assign to. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Vector&lt;T&gt;&amp; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/QPSolver/Array.h" line="43" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/QPSolver/Array.h" bodystart="198" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="classVector_1a6bbf5f187006ef2567fdcebd37ebfa97" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classVector" kindref="compound">Vector</ref>&lt; T &gt; &amp;</type>
        <definition>Vector&lt; T &gt; &amp; Vector&lt; T &gt;::operator=</definition>
        <argsstring>(const T &amp;a)</argsstring>
        <name>operator=</name>
        <param>
          <type>const T &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>Assignment operator that assigns the constant value <computeroutput>a</computeroutput> to every element of the vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the elements stored in the matrix and vectors. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>The constant value to assign to every element. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Vector&lt;T&gt;&amp; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/QPSolver/Array.h" line="44" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/QPSolver/Array.h" bodystart="217" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="classVector_1a0cdad8a65e9dd1ef60afaf32aa547f9e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classVector" kindref="compound">Vector</ref>&lt; T &gt; &amp;</type>
        <definition>Vector&lt; T &gt; &amp; Vector&lt; T &gt;::operator+=</definition>
        <argsstring>(const Vector&lt; T &gt; &amp;rhs)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classVector" kindref="compound">Vector</ref>&lt; T &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Operator that performs an in-place addition of each element in the vector <computeroutput>rhs</computeroutput> to each element in the current vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>The vector to add. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Vector&lt;T&gt;&amp;</para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::logic_error</parametername>
</parameternamelist>
<parameterdescription>
<para>if the vectors are of different sizes. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/QPSolver/Array.h" line="45" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/QPSolver/Array.h" bodystart="269" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="classVector_1ab5ed11e19503bbc0ee10c7a8d1ee2978" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classVector" kindref="compound">Vector</ref>&lt; T &gt; &amp;</type>
        <definition>Vector&lt; T &gt; &amp; Vector&lt; T &gt;::operator-=</definition>
        <argsstring>(const Vector&lt; T &gt; &amp;rhs)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="classVector" kindref="compound">Vector</ref>&lt; T &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Operator that performs an in-place subtraction of each element in vector <computeroutput>rhs</computeroutput> from each element in the current vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>The vector to subtract. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Vector&lt;T&gt;&amp;</para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::logic_error</parametername>
</parameternamelist>
<parameterdescription>
<para>if the vectors are of different sizes. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/QPSolver/Array.h" line="46" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/QPSolver/Array.h" bodystart="374" bodyend="382"/>
      </memberdef>
      <memberdef kind="function" id="classVector_1a3b3e94a4ee6601a8c3ceaed790c2d965" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classVector" kindref="compound">Vector</ref>&lt; T &gt; &amp;</type>
        <definition>Vector&lt; T &gt; &amp; Vector&lt; T &gt;::operator*=</definition>
        <argsstring>(const Vector&lt; T &gt; &amp;rhs)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const <ref refid="classVector" kindref="compound">Vector</ref>&lt; T &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Operator that multiplies each element in vector <computeroutput>rhs</computeroutput> with each element in the current vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>The vector to multiply. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Vector&lt;T&gt;&amp;</para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::logic_error</parametername>
</parameternamelist>
<parameterdescription>
<para>if the vectors are of different sizes. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/QPSolver/Array.h" line="47" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/QPSolver/Array.h" bodystart="479" bodyend="487"/>
      </memberdef>
      <memberdef kind="function" id="classVector_1adbf519ce5d68eb131947137e30596dc1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classVector" kindref="compound">Vector</ref>&lt; T &gt; &amp;</type>
        <definition>Vector&lt; T &gt; &amp; Vector&lt; T &gt;::operator/=</definition>
        <argsstring>(const Vector&lt; T &gt; &amp;rhs)</argsstring>
        <name>operator/=</name>
        <param>
          <type>const <ref refid="classVector" kindref="compound">Vector</ref>&lt; T &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Operator that divides each element in vector <computeroutput>rhs</computeroutput> with each element in the current vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>The vector to divide. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Vector&lt;T&gt;&amp;</para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::logic_error</parametername>
</parameternamelist>
<parameterdescription>
<para>if the vectors are of different sizes. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/QPSolver/Array.h" line="48" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/QPSolver/Array.h" bodystart="572" bodyend="580"/>
      </memberdef>
      <memberdef kind="function" id="classVector_1acd4d558272832a19d614468400ca605d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classVector" kindref="compound">Vector</ref>&lt; T &gt; &amp;</type>
        <definition>Vector&lt; T &gt; &amp; Vector&lt; T &gt;::operator^=</definition>
        <argsstring>(const Vector&lt; T &gt; &amp;rhs)</argsstring>
        <name>operator^=</name>
        <param>
          <type>const <ref refid="classVector" kindref="compound">Vector</ref>&lt; T &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Operator that performs an in-place raising of each element in the vector to the power each element in <computeroutput>rhs</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the elements stored in the matrix and vectors. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>The vector to raise to the power of. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Vector&lt;T&gt;&amp;</para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::logic_error</parametername>
</parameternamelist>
<parameterdescription>
<para>if the vectors are of different sizes. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/QPSolver/Array.h" line="49" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/QPSolver/Array.h" bodystart="721" bodyend="729"/>
      </memberdef>
      <memberdef kind="function" id="classVector_1a5650df0775f0677f76259cd3f474dded" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classVector" kindref="compound">Vector</ref>&lt; T &gt; &amp;</type>
        <definition>Vector&lt; T &gt; &amp; Vector&lt; T &gt;::operator+=</definition>
        <argsstring>(const T &amp;a)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const T &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>Operator that performs an in-place addition of a constant value <computeroutput>a</computeroutput> to each element in the vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the elements stored in the matrix and vectors. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>The constant value to add. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Vector&lt;T&gt;&amp; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/QPSolver/Array.h" line="50" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/QPSolver/Array.h" bodystart="287" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="classVector_1a7581aba7a67b45ff1b2848d37e00cfa1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classVector" kindref="compound">Vector</ref>&lt; T &gt; &amp;</type>
        <definition>Vector&lt; T &gt; &amp; Vector&lt; T &gt;::operator-=</definition>
        <argsstring>(const T &amp;a)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const T &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>Operator that performs an in-place subtraction of a constant value <computeroutput>a</computeroutput> from each element in the vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the elements stored in the matrix and vectors. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>The constant value to subtract. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Vector&lt;T&gt;&amp; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/QPSolver/Array.h" line="51" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/QPSolver/Array.h" bodystart="392" bodyend="398"/>
      </memberdef>
      <memberdef kind="function" id="classVector_1a02e9c5296c7ddb1a2047a8c80d93e0d5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classVector" kindref="compound">Vector</ref>&lt; T &gt; &amp;</type>
        <definition>Vector&lt; T &gt; &amp; Vector&lt; T &gt;::operator*=</definition>
        <argsstring>(const T &amp;a)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const T &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>Operator that multiplies each element in the vector with the constant value <computeroutput>a</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the elements stored in the matrix and vectors. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>The constant value to multiply. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Vector&lt;T&gt;&amp; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/QPSolver/Array.h" line="52" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/QPSolver/Array.h" bodystart="497" bodyend="503"/>
      </memberdef>
      <memberdef kind="function" id="classVector_1a358eca4649d02b3bbab359484eb93140" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classVector" kindref="compound">Vector</ref>&lt; T &gt; &amp;</type>
        <definition>Vector&lt; T &gt; &amp; Vector&lt; T &gt;::operator/=</definition>
        <argsstring>(const T &amp;a)</argsstring>
        <name>operator/=</name>
        <param>
          <type>const T &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>Operator that divides each element in the vector with the constant value <computeroutput>a</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the elements stored in the matrix and vectors. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>The constant value to divide. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Vector&lt;T&gt;&amp; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/QPSolver/Array.h" line="53" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/QPSolver/Array.h" bodystart="590" bodyend="596"/>
      </memberdef>
      <memberdef kind="function" id="classVector_1a6767000b5cbf4999aa301eb24a7b74fc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classVector" kindref="compound">Vector</ref>&lt; T &gt; &amp;</type>
        <definition>Vector&lt; T &gt; &amp; Vector&lt; T &gt;::operator^=</definition>
        <argsstring>(const T &amp;a)</argsstring>
        <name>operator^=</name>
        <param>
          <type>const T &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>Operator that performs an in-place raising of each element in the vector to the power of the constant value <computeroutput>a</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the elements stored in the matrix and vectors. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>The constant value to raise to the power of. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Vector&lt;T&gt;&amp; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/QPSolver/Array.h" line="54" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/QPSolver/Array.h" bodystart="739" bodyend="745"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/QPSolver/Array.h" line="28" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/QPSolver/Array.h" bodystart="27" bodyend="65"/>
    <listofallmembers>
      <member refid="classVector_1adab11fd27ce9e960aa8612937e453786" prot="private" virt="non-virtual"><scope>Vector</scope><name>n</name></member>
      <member refid="classVector_1a3b3e94a4ee6601a8c3ceaed790c2d965" prot="public" virt="non-virtual"><scope>Vector</scope><name>operator*=</name></member>
      <member refid="classVector_1a02e9c5296c7ddb1a2047a8c80d93e0d5" prot="public" virt="non-virtual"><scope>Vector</scope><name>operator*=</name></member>
      <member refid="classVector_1a0cdad8a65e9dd1ef60afaf32aa547f9e" prot="public" virt="non-virtual"><scope>Vector</scope><name>operator+=</name></member>
      <member refid="classVector_1a5650df0775f0677f76259cd3f474dded" prot="public" virt="non-virtual"><scope>Vector</scope><name>operator+=</name></member>
      <member refid="classVector_1ab5ed11e19503bbc0ee10c7a8d1ee2978" prot="public" virt="non-virtual"><scope>Vector</scope><name>operator-=</name></member>
      <member refid="classVector_1a7581aba7a67b45ff1b2848d37e00cfa1" prot="public" virt="non-virtual"><scope>Vector</scope><name>operator-=</name></member>
      <member refid="classVector_1adbf519ce5d68eb131947137e30596dc1" prot="public" virt="non-virtual"><scope>Vector</scope><name>operator/=</name></member>
      <member refid="classVector_1a358eca4649d02b3bbab359484eb93140" prot="public" virt="non-virtual"><scope>Vector</scope><name>operator/=</name></member>
      <member refid="classVector_1aa44e8e04a723f2c0bd9382a3bfa46e7c" prot="public" virt="non-virtual"><scope>Vector</scope><name>operator=</name></member>
      <member refid="classVector_1a6bbf5f187006ef2567fdcebd37ebfa97" prot="public" virt="non-virtual"><scope>Vector</scope><name>operator=</name></member>
      <member refid="classVector_1aa07a0c8ca467e2ce190afc26054cf422" prot="public" virt="non-virtual"><scope>Vector</scope><name>operator[]</name></member>
      <member refid="classVector_1a36cc881f0270de628bec7a80bbdab741" prot="public" virt="non-virtual"><scope>Vector</scope><name>operator[]</name></member>
      <member refid="classVector_1acd4d558272832a19d614468400ca605d" prot="public" virt="non-virtual"><scope>Vector</scope><name>operator^=</name></member>
      <member refid="classVector_1a6767000b5cbf4999aa301eb24a7b74fc" prot="public" virt="non-virtual"><scope>Vector</scope><name>operator^=</name></member>
      <member refid="classVector_1ae751d4bf4c403e4578a9df1202e93f56" prot="public" virt="non-virtual"><scope>Vector</scope><name>resize</name></member>
      <member refid="classVector_1a1ff5ed0bca47854450eb78024c6f52ff" prot="public" virt="non-virtual"><scope>Vector</scope><name>resize</name></member>
      <member refid="classVector_1a5214a382564aedc712b609416aa3b7b1" prot="public" virt="non-virtual"><scope>Vector</scope><name>size</name></member>
      <member refid="classVector_1ab72db1fed2b2310123729b1fd76d3446" prot="private" virt="non-virtual"><scope>Vector</scope><name>v</name></member>
      <member refid="classVector_1a39d6069675db4ecfc1ab81d440da759a" prot="public" virt="non-virtual"><scope>Vector</scope><name>Vector</name></member>
      <member refid="classVector_1a8575836acd6e8c9a2297b5ba6d14008c" prot="public" virt="non-virtual"><scope>Vector</scope><name>Vector</name></member>
      <member refid="classVector_1aa2bc8aac00503574bac8302652ef7ba0" prot="public" virt="non-virtual"><scope>Vector</scope><name>Vector</name></member>
      <member refid="classVector_1a62f06e9931e61437a5a5783eca0a9550" prot="public" virt="non-virtual"><scope>Vector</scope><name>Vector</name></member>
      <member refid="classVector_1ac71d98c4ac152523a76bbadcd3a83a5a" prot="public" virt="non-virtual"><scope>Vector</scope><name>Vector</name></member>
      <member refid="classVector_1afd524fac19e6d3d69db5198ffe2952b0" prot="public" virt="non-virtual"><scope>Vector</scope><name>~Vector</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
