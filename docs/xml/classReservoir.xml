<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classReservoir" kind="class" language="C++" prot="public">
    <compoundname>Reservoir</compoundname>
    <basecompoundref refid="classWaterSource" prot="public" virt="non-virtual">WaterSource</basecompoundref>
    <derivedcompoundref refid="classAllocatedReservoir" prot="public" virt="non-virtual">AllocatedReservoir</derivedcompoundref>
    <derivedcompoundref refid="classQuarry" prot="public" virt="non-virtual">Quarry</derivedcompoundref>
    <includes refid="Reservoir_8h" local="no">Reservoir.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classReservoir_1a46bd5b750963dfa9a57b247fd77ab8ff" prot="protected" static="no" mutable="no">
        <type>DataSeries *</type>
        <definition>DataSeries* Reservoir::storage_area_curve</definition>
        <argsstring></argsstring>
        <name>storage_area_curve</name>
        <briefdescription>
<para>The DataSeries object representing the storage area curve of the reservoir. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SystemComponents/WaterSources/Reservoir.h" line="22" column="1" bodyfile="src/SystemComponents/WaterSources/Reservoir.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classReservoir_1a57ab55e0dde9e29a4ff97de98b09e458" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Reservoir::area</definition>
        <argsstring></argsstring>
        <name>area</name>
        <initializer>= NON_INITIALIZED</initializer>
        <briefdescription>
<para>The area of the reservoir. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SystemComponents/WaterSources/Reservoir.h" line="26" column="1" bodyfile="src/SystemComponents/WaterSources/Reservoir.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classReservoir_1ad4b37aef4873071d1766baaccce5b8cf" prot="public" static="no" mutable="no">
        <type>const bool</type>
        <definition>const bool Reservoir::fixed_area</definition>
        <argsstring></argsstring>
        <name>fixed_area</name>
        <briefdescription>
<para>The fixed area of the reservoir. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SystemComponents/WaterSources/Reservoir.h" line="32" column="1" bodyfile="src/SystemComponents/WaterSources/Reservoir.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classReservoir_1a2d2d9b302c13703309bb798d24136810" prot="public" static="no" mutable="no">
        <type>EvaporationSeries</type>
        <definition>EvaporationSeries Reservoir::evaporation_series</definition>
        <argsstring></argsstring>
        <name>evaporation_series</name>
        <briefdescription>
<para>The EvaporationSeries object representing the evaporation series of the reservoir. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SystemComponents/WaterSources/Reservoir.h" line="36" column="1" bodyfile="src/SystemComponents/WaterSources/Reservoir.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classReservoir_1ac9803ae5446e4e9a2631ce66817004cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Reservoir::Reservoir</definition>
        <argsstring>(const char *name, const int id, const vector&lt; Catchment *&gt; &amp;catchments, const double capacity, const double max_treatment_capacity, EvaporationSeries &amp;evaporation_series, DataSeries *storage_area_curve, int source_type=RESERVOIR)</argsstring>
        <name>Reservoir</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const vector&lt; <ref refid="classCatchment" kindref="compound">Catchment</ref> *&gt; &amp;</type>
          <declname>catchments</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>capacity</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>max_treatment_capacity</declname>
        </param>
        <param>
          <type>EvaporationSeries &amp;</type>
          <declname>evaporation_series</declname>
        </param>
        <param>
          <type>DataSeries *</type>
          <declname>storage_area_curve</declname>
        </param>
        <param>
          <type>int</type>
          <declname>source_type</declname>
          <defval>RESERVOIR</defval>
        </param>
        <briefdescription>
<para>Constructs a basic <ref refid="classReservoir" kindref="compound">Reservoir</ref> object with a storage area curve. It also ensures that the last storage value in the storage area curve matches the reservoir&apos;s capacity. </para>        </briefdescription>
        <detaileddescription>
<para>Called for a reservoir that is already built and operational.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the reservoir as a C-style string. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The unique identifier of the reservoir as an integer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>catchments</parametername>
</parameternamelist>
<parameterdescription>
<para>A vector of pointers to <ref refid="classCatchment" kindref="compound">Catchment</ref> objects representing the catchments linked to the reservoir. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>capacity</parametername>
</parameternamelist>
<parameterdescription>
<para>The total storage capacity of the reservoir in cubic units. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_treatment_capacity</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum treatment capacity of the reservoir in cubic units per time unit. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>evaporation_series</parametername>
</parameternamelist>
<parameterdescription>
<para>A reference to an EvaporationSeries object containing evaporation data for the reservoir. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>storage_area_curve</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a DataSeries object representing the storage area curve for the reservoir. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>source_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the source (e.g., a constant or specific reservoir type).</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>If the last storage value in the storage area curve does not match the reservoir&apos;s capacity. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SystemComponents/WaterSources/Reservoir.h" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classReservoir_1a2e324b75aacc65d90b214ff7f62dfa89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Reservoir::Reservoir</definition>
        <argsstring>(const char *name, const int id, const vector&lt; Catchment *&gt; &amp;catchments, const double capacity, const double max_treatment_capacity, EvaporationSeries &amp;evaporation_series, DataSeries *storage_area_curve, const vector&lt; double &gt; &amp;construction_time_range, double permitting_period, Bond &amp;bond, int source_type=RESERVOIR)</argsstring>
        <name>Reservoir</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const vector&lt; <ref refid="classCatchment" kindref="compound">Catchment</ref> *&gt; &amp;</type>
          <declname>catchments</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>capacity</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>max_treatment_capacity</declname>
        </param>
        <param>
          <type>EvaporationSeries &amp;</type>
          <declname>evaporation_series</declname>
        </param>
        <param>
          <type>DataSeries *</type>
          <declname>storage_area_curve</declname>
        </param>
        <param>
          <type>const vector&lt; double &gt; &amp;</type>
          <declname>construction_time_range</declname>
        </param>
        <param>
          <type>double</type>
          <declname>permitting_period</declname>
        </param>
        <param>
          <type><ref refid="classBond" kindref="compound">Bond</ref> &amp;</type>
          <declname>bond</declname>
        </param>
        <param>
          <type>int</type>
          <declname>source_type</declname>
          <defval>RESERVOIR</defval>
        </param>
        <briefdescription>
<para>Constructs a <ref refid="classReservoir" kindref="compound">Reservoir</ref> object with a storage area curve, treatment capacity. Also includes financing, construction, and permitting information. </para>        </briefdescription>
        <detaileddescription>
<para>Called when the reservoir does not yet exist at the beginning of the simulation.</para><para>This function initializes a <ref refid="classReservoir" kindref="compound">Reservoir</ref> object with parameters such as the name, ID, catchments, capacity, maximum treatment capacity, evaporation series, storage area curve, and other construction and permitting details. It also ensures that the last storage value in the storage area curve matches the reservoir&apos;s capacity.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the reservoir as a C-style string. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The unique identifier of the reservoir as an integer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>catchments</parametername>
</parameternamelist>
<parameterdescription>
<para>A vector of pointers to <ref refid="classCatchment" kindref="compound">Catchment</ref> objects representing the catchments linked to the reservoir. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>capacity</parametername>
</parameternamelist>
<parameterdescription>
<para>The total storage capacity of the reservoir in cubic units. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_treatment_capacity</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum treatment capacity of the reservoir in cubic units per time unit. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>evaporation_series</parametername>
</parameternamelist>
<parameterdescription>
<para>A reference to an EvaporationSeries object containing evaporation data for the reservoir. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>storage_area_curve</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a DataSeries object representing the storage area curve for the reservoir. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>construction_time_range</parametername>
</parameternamelist>
<parameterdescription>
<para>A vector of doubles representing the start and end times of the construction period. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>permitting_period</parametername>
</parameternamelist>
<parameterdescription>
<para>The permitting period for the reservoir in time units. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bond</parametername>
</parameternamelist>
<parameterdescription>
<para>A reference to a <ref refid="classBond" kindref="compound">Bond</ref> object representing the financial bond associated with the reservoir. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>source_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the source (e.g., a constant or specific reservoir type).</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>If the last storage value in the storage area curve does not match the reservoir&apos;s capacity. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SystemComponents/WaterSources/Reservoir.h" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classReservoir_1a0a1041fc72df190bbc51d965ede96f49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Reservoir::Reservoir</definition>
        <argsstring>(const char *name, const int id, const vector&lt; Catchment *&gt; &amp;catchments, const double capacity, const double max_treatment_capacity, EvaporationSeries &amp;evaporation_series, double storage_area, int source_type=RESERVOIR)</argsstring>
        <name>Reservoir</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const vector&lt; <ref refid="classCatchment" kindref="compound">Catchment</ref> *&gt; &amp;</type>
          <declname>catchments</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>capacity</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>max_treatment_capacity</declname>
        </param>
        <param>
          <type>EvaporationSeries &amp;</type>
          <declname>evaporation_series</declname>
        </param>
        <param>
          <type>double</type>
          <declname>storage_area</declname>
        </param>
        <param>
          <type>int</type>
          <declname>source_type</declname>
          <defval>RESERVOIR</defval>
        </param>
        <briefdescription>
<para>Constructs a <ref refid="classReservoir" kindref="compound">Reservoir</ref> object with a fixed storage area, treatment capacity, and evaporation data. </para>        </briefdescription>
        <detaileddescription>
<para>Called for a reservoir that is already built and operational.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the reservoir as a C-style string. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The unique identifier of the reservoir as an integer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>catchments</parametername>
</parameternamelist>
<parameterdescription>
<para>A vector of pointers to <ref refid="classCatchment" kindref="compound">Catchment</ref> objects representing the catchments linked to the reservoir. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>capacity</parametername>
</parameternamelist>
<parameterdescription>
<para>The total storage capacity of the reservoir in cubic units. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_treatment_capacity</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum treatment capacity of the reservoir in cubic units per time unit. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>evaporation_series</parametername>
</parameternamelist>
<parameterdescription>
<para>A reference to an EvaporationSeries object containing evaporation data for the reservoir. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>storage_area</parametername>
</parameternamelist>
<parameterdescription>
<para>The area of the reservoir in square units. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>source_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the source (e.g., a constant or specific reservoir type). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SystemComponents/WaterSources/Reservoir.h" line="122" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classReservoir_1a56409325d4554f8ef32a9c3605ece5c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Reservoir::Reservoir</definition>
        <argsstring>(const char *name, const int id, const vector&lt; Catchment *&gt; &amp;catchments, const double capacity, const double max_treatment_capacity, EvaporationSeries &amp;evaporation_series, double storage_area, const vector&lt; double &gt; &amp;construction_time_range, double permitting_period, Bond &amp;bond, int source_type=RESERVOIR)</argsstring>
        <name>Reservoir</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const vector&lt; <ref refid="classCatchment" kindref="compound">Catchment</ref> *&gt; &amp;</type>
          <declname>catchments</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>capacity</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>max_treatment_capacity</declname>
        </param>
        <param>
          <type>EvaporationSeries &amp;</type>
          <declname>evaporation_series</declname>
        </param>
        <param>
          <type>double</type>
          <declname>storage_area</declname>
        </param>
        <param>
          <type>const vector&lt; double &gt; &amp;</type>
          <declname>construction_time_range</declname>
        </param>
        <param>
          <type>double</type>
          <declname>permitting_period</declname>
        </param>
        <param>
          <type><ref refid="classBond" kindref="compound">Bond</ref> &amp;</type>
          <declname>bond</declname>
        </param>
        <param>
          <type>int</type>
          <declname>source_type</declname>
          <defval>RESERVOIR</defval>
        </param>
        <briefdescription>
<para>Constructs a <ref refid="classReservoir" kindref="compound">Reservoir</ref> object with a fixed storage area, treatment capacity. Also includes financing, construction, and permitting information. </para>        </briefdescription>
        <detaileddescription>
<para>Called when the reservoir does not yet exist at the beginning of the simulation.</para><para>This function initializes a <ref refid="classReservoir" kindref="compound">Reservoir</ref> object with parameters such as the name, ID, catchments, capacity, maximum treatment capacity, evaporation series, storage area curve, and other construction and permitting details. It also ensures that the last storage value in the storage area curve matches the reservoir&apos;s capacity.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the reservoir as a C-style string. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The unique identifier of the reservoir as an integer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>catchments</parametername>
</parameternamelist>
<parameterdescription>
<para>A vector of pointers to <ref refid="classCatchment" kindref="compound">Catchment</ref> objects representing the catchments linked to the reservoir. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>capacity</parametername>
</parameternamelist>
<parameterdescription>
<para>The total storage capacity of the reservoir in cubic units. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_treatment_capacity</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum treatment capacity of the reservoir in cubic units per time unit. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>evaporation_series</parametername>
</parameternamelist>
<parameterdescription>
<para>A reference to an EvaporationSeries object containing evaporation data for the reservoir. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>storage_area_curve</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a DataSeries object representing the storage area curve for the reservoir. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>construction_time_range</parametername>
</parameternamelist>
<parameterdescription>
<para>A vector of doubles representing the start and end times of the construction period. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>permitting_period</parametername>
</parameternamelist>
<parameterdescription>
<para>The permitting period for the reservoir in time units. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bond</parametername>
</parameternamelist>
<parameterdescription>
<para>A reference to a <ref refid="classBond" kindref="compound">Bond</ref> object representing the financial bond associated with the reservoir. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>source_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the source (e.g., a constant or specific reservoir type).</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>If the last storage value in the storage area curve does not match the reservoir&apos;s capacity. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SystemComponents/WaterSources/Reservoir.h" line="161" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classReservoir_1a1a6f078a9565dcb65843d3575bdd4172" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Reservoir::Reservoir</definition>
        <argsstring>(const char *name, const int id, const vector&lt; Catchment *&gt; &amp;catchments, const double capacity, const double max_treatment_capacity, EvaporationSeries &amp;evaporation_series, DataSeries *storage_area_curve, vector&lt; double &gt; *allocated_treatment_fractions, vector&lt; double &gt; *allocated_fractions, vector&lt; int &gt; *utilities_with_allocations, int source_type=RESERVOIR)</argsstring>
        <name>Reservoir</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const vector&lt; <ref refid="classCatchment" kindref="compound">Catchment</ref> *&gt; &amp;</type>
          <declname>catchments</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>capacity</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>max_treatment_capacity</declname>
        </param>
        <param>
          <type>EvaporationSeries &amp;</type>
          <declname>evaporation_series</declname>
        </param>
        <param>
          <type>DataSeries *</type>
          <declname>storage_area_curve</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; *</type>
          <declname>allocated_treatment_fractions</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; *</type>
          <declname>allocated_fractions</declname>
        </param>
        <param>
          <type>vector&lt; int &gt; *</type>
          <declname>utilities_with_allocations</declname>
        </param>
        <param>
          <type>int</type>
          <declname>source_type</declname>
          <defval>RESERVOIR</defval>
        </param>
        <briefdescription>
<para>Constructs a <ref refid="classReservoir" kindref="compound">Reservoir</ref> object with specified storage area curve. Includes additional details like treatment fractions and allocation details to connected utilities. </para>        </briefdescription>
        <detaileddescription>
<para>Called for a reservoir that is already built and operational.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the reservoir as a C-style string. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The unique identifier of the reservoir as an integer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>catchments</parametername>
</parameternamelist>
<parameterdescription>
<para>A vector of pointers to <ref refid="classCatchment" kindref="compound">Catchment</ref> objects representing the catchments linked to the reservoir. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>capacity</parametername>
</parameternamelist>
<parameterdescription>
<para>The total storage capacity of the reservoir in cubic units. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_treatment_capacity</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum treatment capacity of the reservoir in cubic units per time unit. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>evaporation_series</parametername>
</parameternamelist>
<parameterdescription>
<para>A reference to an EvaporationSeries object containing evaporation data for the reservoir. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>storage_area_curve</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a DataSeries object representing the storage area curve for the reservoir. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>allocated_treatment_fractions</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a vector of treatment fractions allocated to utilities. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>allocated_fractions</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a vector of fractions allocated to utilities. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>utilities_with_allocations</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a vector of integers representing the utilities that have allocations. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>source_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the source (e.g., a constant or specific reservoir type).</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>If the last storage value in the storage area curve does not match the reservoir&apos;s capacity. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SystemComponents/WaterSources/Reservoir.h" line="193" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classReservoir_1a617f90b97899699d7e0dd97e7ebb34bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Reservoir::Reservoir</definition>
        <argsstring>(const char *name, const int id, const vector&lt; Catchment *&gt; &amp;catchments, const double capacity, const double max_treatment_capacity, EvaporationSeries &amp;evaporation_series, double storage_area, vector&lt; double &gt; *allocated_treatment_fractions, vector&lt; double &gt; *allocated_fractions, vector&lt; int &gt; *utilities_with_allocations, int source_type=RESERVOIR)</argsstring>
        <name>Reservoir</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const vector&lt; <ref refid="classCatchment" kindref="compound">Catchment</ref> *&gt; &amp;</type>
          <declname>catchments</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>capacity</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>max_treatment_capacity</declname>
        </param>
        <param>
          <type>EvaporationSeries &amp;</type>
          <declname>evaporation_series</declname>
        </param>
        <param>
          <type>double</type>
          <declname>storage_area</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; *</type>
          <declname>allocated_treatment_fractions</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; *</type>
          <declname>allocated_fractions</declname>
        </param>
        <param>
          <type>vector&lt; int &gt; *</type>
          <declname>utilities_with_allocations</declname>
        </param>
        <param>
          <type>int</type>
          <declname>source_type</declname>
          <defval>RESERVOIR</defval>
        </param>
        <briefdescription>
<para>Constructs a <ref refid="classReservoir" kindref="compound">Reservoir</ref> object with specified storage area curve. Includes additional details like treatment fractions and allocation details to connected utilities. </para>        </briefdescription>
        <detaileddescription>
<para>Called for a reservoir that is already built and operational.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the reservoir as a C-style string. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The unique identifier of the reservoir as an integer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>catchments</parametername>
</parameternamelist>
<parameterdescription>
<para>A vector of pointers to <ref refid="classCatchment" kindref="compound">Catchment</ref> objects representing the catchments linked to the reservoir. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>capacity</parametername>
</parameternamelist>
<parameterdescription>
<para>The total storage capacity of the reservoir in cubic units. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_treatment_capacity</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum treatment capacity of the reservoir in cubic units per time unit. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>evaporation_series</parametername>
</parameternamelist>
<parameterdescription>
<para>A reference to an EvaporationSeries object containing evaporation data for the reservoir. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>storage_area</parametername>
</parameternamelist>
<parameterdescription>
<para>The area of the reservoir in square units. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>allocated_treatment_fractions</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a vector of treatment fractions allocated to utilities. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>allocated_fractions</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a vector of fractions allocated to utilities. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>utilities_with_allocations</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a vector of integers representing the utilities that have allocations. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>source_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the source (e.g., a constant or specific reservoir type). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SystemComponents/WaterSources/Reservoir.h" line="227" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classReservoir_1ac20659043afad4d2df49ce91e08f5dad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Reservoir::Reservoir</definition>
        <argsstring>(const char *name, const int id, const vector&lt; Catchment *&gt; &amp;catchments, const double capacity, const double max_treatment_capacity, EvaporationSeries &amp;evaporation_series, DataSeries *storage_area_curve, vector&lt; double &gt; *allocated_treatment_fractions, vector&lt; double &gt; *allocated_fractions, vector&lt; int &gt; *utilities_with_allocations, const vector&lt; double &gt; &amp;construction_time_range, double permitting_period, Bond &amp;bond, int source_type=RESERVOIR)</argsstring>
        <name>Reservoir</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const vector&lt; <ref refid="classCatchment" kindref="compound">Catchment</ref> *&gt; &amp;</type>
          <declname>catchments</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>capacity</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>max_treatment_capacity</declname>
        </param>
        <param>
          <type>EvaporationSeries &amp;</type>
          <declname>evaporation_series</declname>
        </param>
        <param>
          <type>DataSeries *</type>
          <declname>storage_area_curve</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; *</type>
          <declname>allocated_treatment_fractions</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; *</type>
          <declname>allocated_fractions</declname>
        </param>
        <param>
          <type>vector&lt; int &gt; *</type>
          <declname>utilities_with_allocations</declname>
        </param>
        <param>
          <type>const vector&lt; double &gt; &amp;</type>
          <declname>construction_time_range</declname>
        </param>
        <param>
          <type>double</type>
          <declname>permitting_period</declname>
        </param>
        <param>
          <type><ref refid="classBond" kindref="compound">Bond</ref> &amp;</type>
          <declname>bond</declname>
        </param>
        <param>
          <type>int</type>
          <declname>source_type</declname>
          <defval>RESERVOIR</defval>
        </param>
        <briefdescription>
<para>Constructs a <ref refid="classReservoir" kindref="compound">Reservoir</ref> object with specified storage area curve. Includes additional details like treatment fractions and allocation details to connected utilities. Also includes financing, construction, and permitting information. </para>        </briefdescription>
        <detaileddescription>
<para>Called when the reservoir does not yet exist at the beginning of the simulation.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the reservoir as a C-style string. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The unique identifier of the reservoir as an integer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>catchments</parametername>
</parameternamelist>
<parameterdescription>
<para>A vector of pointers to <ref refid="classCatchment" kindref="compound">Catchment</ref> objects representing the catchments linked to the reservoir. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>capacity</parametername>
</parameternamelist>
<parameterdescription>
<para>The total storage capacity of the reservoir in cubic units. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_treatment_capacity</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum treatment capacity of the reservoir in cubic units per time unit. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>evaporation_series</parametername>
</parameternamelist>
<parameterdescription>
<para>A reference to an EvaporationSeries object containing evaporation data for the reservoir. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>storage_area_curve</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a DataSeries object representing the storage area curve for the reservoir. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>allocated_treatment_fractions</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a vector of treatment fractions allocated to utilities. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>allocated_fractions</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a vector of fractions allocated to utilities. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>utilities_with_allocations</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a vector of integers representing the utilities that have allocations. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>construction_time_range</parametername>
</parameternamelist>
<parameterdescription>
<para>A vector of doubles representing the start and end times of the construction period. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>permitting_period</parametername>
</parameternamelist>
<parameterdescription>
<para>The permitting period for the reservoir in time units. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bond</parametername>
</parameternamelist>
<parameterdescription>
<para>A reference to a <ref refid="classBond" kindref="compound">Bond</ref> object representing the financial bond associated with the reservoir. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>source_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the source (e.g., a constant or specific reservoir type).</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>If the last storage value in the storage area curve does not match the reservoir&apos;s capacity. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SystemComponents/WaterSources/Reservoir.h" line="271" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classReservoir_1a37ca7ba59d127fee6522c1ad545c9caf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Reservoir::Reservoir</definition>
        <argsstring>(const char *name, const int id, const vector&lt; Catchment *&gt; &amp;catchments, const double capacity, const double max_treatment_capacity, EvaporationSeries &amp;evaporation_series, double storage_area, vector&lt; double &gt; *allocated_treatment_fractions, vector&lt; double &gt; *allocated_fractions, vector&lt; int &gt; *utilities_with_allocations, const vector&lt; double &gt; &amp;construction_time_range, double permitting_period, Bond &amp;bond, int source_type=RESERVOIR)</argsstring>
        <name>Reservoir</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const vector&lt; <ref refid="classCatchment" kindref="compound">Catchment</ref> *&gt; &amp;</type>
          <declname>catchments</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>capacity</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>max_treatment_capacity</declname>
        </param>
        <param>
          <type>EvaporationSeries &amp;</type>
          <declname>evaporation_series</declname>
        </param>
        <param>
          <type>double</type>
          <declname>storage_area</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; *</type>
          <declname>allocated_treatment_fractions</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; *</type>
          <declname>allocated_fractions</declname>
        </param>
        <param>
          <type>vector&lt; int &gt; *</type>
          <declname>utilities_with_allocations</declname>
        </param>
        <param>
          <type>const vector&lt; double &gt; &amp;</type>
          <declname>construction_time_range</declname>
        </param>
        <param>
          <type>double</type>
          <declname>permitting_period</declname>
        </param>
        <param>
          <type><ref refid="classBond" kindref="compound">Bond</ref> &amp;</type>
          <declname>bond</declname>
        </param>
        <param>
          <type>int</type>
          <declname>source_type</declname>
          <defval>RESERVOIR</defval>
        </param>
        <briefdescription>
<para>Constructs a <ref refid="classReservoir" kindref="compound">Reservoir</ref> object with fixed storage area. Includes additional details like treatment fractions and allocation details to connected utilities. Also includes financing, construction, and permitting information. </para>        </briefdescription>
        <detaileddescription>
<para>Called when the reservoir does not yet exist at the beginning of the simulation.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the reservoir as a C-style string. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The unique identifier of the reservoir as an integer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>catchments</parametername>
</parameternamelist>
<parameterdescription>
<para>A vector of pointers to <ref refid="classCatchment" kindref="compound">Catchment</ref> objects representing the catchments linked to the reservoir. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>capacity</parametername>
</parameternamelist>
<parameterdescription>
<para>The total storage capacity of the reservoir in cubic units. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_treatment_capacity</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum treatment capacity of the reservoir in cubic units per time unit. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>evaporation_series</parametername>
</parameternamelist>
<parameterdescription>
<para>A reference to an EvaporationSeries object containing evaporation data for the reservoir. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>storage_area</parametername>
</parameternamelist>
<parameterdescription>
<para>The area of the reservoir in square units. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>allocated_treatment_fractions</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a vector of treatment fractions allocated to utilities. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>allocated_fractions</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a vector of fractions allocated to utilities. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>utilities_with_allocations</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a vector of integers representing the utilities that have allocations. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>construction_time_range</parametername>
</parameternamelist>
<parameterdescription>
<para>A vector of doubles representing the start and end times of the construction period. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>permitting_period</parametername>
</parameternamelist>
<parameterdescription>
<para>The permitting period for the reservoir in time units. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bond</parametername>
</parameternamelist>
<parameterdescription>
<para>A reference to a <ref refid="classBond" kindref="compound">Bond</ref> object representing the financial bond associated with the reservoir. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>source_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the source (e.g., a constant or specific reservoir type).</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>If the last storage value in the storage area curve does not match the reservoir&apos;s capacity. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SystemComponents/WaterSources/Reservoir.h" line="310" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classReservoir_1a3fc46303b2846aa23bb52f0b69b9585c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Reservoir::Reservoir</definition>
        <argsstring>(const Reservoir &amp;reservoir)</argsstring>
        <name>Reservoir</name>
        <param>
          <type>const <ref refid="classReservoir" kindref="compound">Reservoir</ref> &amp;</type>
          <declname>reservoir</declname>
        </param>
        <briefdescription>
<para>Copy constructor for creating a copy of an existing <ref refid="classReservoir" kindref="compound">Reservoir</ref> object. A new <computeroutput>EvaporationSeries</computeroutput> is created to ensure deep copying of the evaporation data. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reservoir</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput><ref refid="classReservoir" kindref="compound">Reservoir</ref></computeroutput> object to copy. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SystemComponents/WaterSources/Reservoir.h" line="324" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classReservoir_1a8b43209f25276f279986d87b5a77c4f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classReservoir" kindref="compound">Reservoir</ref> &amp;</type>
        <definition>Reservoir&amp; Reservoir::operator=</definition>
        <argsstring>(const Reservoir &amp;reservoir)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classReservoir" kindref="compound">Reservoir</ref> &amp;</type>
          <declname>reservoir</declname>
        </param>
        <briefdescription>
<para>Assignment operator for copying data from another <ref refid="classReservoir" kindref="compound">Reservoir</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para>This operator assigns the values from another <computeroutput><ref refid="classReservoir" kindref="compound">Reservoir</ref></computeroutput> object to the current object, copying the storage area curve and performing a deep copy of the evaporation series. The base class <computeroutput><ref refid="classWaterSource" kindref="compound">WaterSource</ref></computeroutput>&apos;s assignment operator is also called to copy its attributes.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reservoir</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput><ref refid="classReservoir" kindref="compound">Reservoir</ref></computeroutput> object to copy data from.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to the current <computeroutput><ref refid="classReservoir" kindref="compound">Reservoir</ref></computeroutput> object after assignment. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SystemComponents/WaterSources/Reservoir.h" line="337" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classReservoir_1a2f8bfdc73c7470185775a940fb3531de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Reservoir::~Reservoir</definition>
        <argsstring>() override</argsstring>
        <name>~Reservoir</name>
        <briefdescription>
<para>Destructor for the <ref refid="classReservoir" kindref="compound">Reservoir</ref> class. </para>        </briefdescription>
        <detaileddescription>
<para>This destructor is the default destructor for the <computeroutput><ref refid="classReservoir" kindref="compound">Reservoir</ref></computeroutput> class and overrides the corresponding function in the base class. It ensures proper cleanup of any dynamically allocated resources when a <computeroutput><ref refid="classReservoir" kindref="compound">Reservoir</ref></computeroutput> object is destroyed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SystemComponents/WaterSources/Reservoir.h" line="346" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classReservoir_1a66929c055193785bc9d47bcdf0bc7445" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Reservoir::applyContinuity</definition>
        <argsstring>(int week, double upstream_source_inflow, double wastewater_discharge, vector&lt; double &gt; &amp;demand_outflow) override</argsstring>
        <name>applyContinuity</name>
        <reimplements refid="classWaterSource_1ac070445379fe706f65b977dade4f3fbc">applyContinuity</reimplements>
        <param>
          <type>int</type>
          <declname>week</declname>
        </param>
        <param>
          <type>double</type>
          <declname>upstream_source_inflow</declname>
        </param>
        <param>
          <type>double</type>
          <declname>wastewater_discharge</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; &amp;</type>
          <declname>demand_outflow</declname>
        </param>
        <briefdescription>
<para>Applies continuity calculations for the reservoir over a given week. </para>        </briefdescription>
        <detaileddescription>
<para>This function calculates the new stored volume and outflow for the reservoir based on the continuity equation, taking into account inflows, demand outflows, evaporation, and spillage. It also updates various internal state variables like total demand, available volume, and total outflow.</para><para>This function overrides the <computeroutput>applyContinuity</computeroutput> function in the base class <computeroutput><ref refid="classWaterSource" kindref="compound">WaterSource</ref></computeroutput>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>week</parametername>
</parameternamelist>
<parameterdescription>
<para>The week for which continuity calculations are performed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>upstream_source_inflow</parametername>
</parameternamelist>
<parameterdescription>
<para>The inflow from upstream sources. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>wastewater_inflow</parametername>
</parameternamelist>
<parameterdescription>
<para>The inflow from wastewater sources. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>demand_outflow</parametername>
</parameternamelist>
<parameterdescription>
<para>A vector of demand outflows for the week. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SystemComponents/WaterSources/Reservoir.h" line="363" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classReservoir_1ac6f64dd92c401e58095e7b125855041b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Reservoir::setOnline</definition>
        <argsstring>() override</argsstring>
        <name>setOnline</name>
        <reimplements refid="classWaterSource_1aaa55dc6e14ff184380300147b53c56ec">setOnline</reimplements>
        <briefdescription>
<para>Marks the reservoir as online and initializes available volume. </para>        </briefdescription>
        <detaileddescription>
<para>This function sets the reservoir to an online state, where it begins accepting inflows. It also sets the <computeroutput>available_volume</computeroutput> to <computeroutput>NONE</computeroutput>, indicating that the reservoir starts empty and will gradually fill as inflows start coming in.</para><para>This function overrides the <computeroutput>setOnline</computeroutput> function in the base class <computeroutput><ref refid="classWaterSource" kindref="compound">WaterSource</ref></computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SystemComponents/WaterSources/Reservoir.h" line="376" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classReservoir_1ad1bb7aa46397719d09e0b6188b9bc28d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Reservoir::setRealization</definition>
        <argsstring>(unsigned long r, vector&lt; double &gt; &amp;rdm_factors) override</argsstring>
        <name>setRealization</name>
        <reimplements refid="classWaterSource_1a634904c510b16de6d7c057fed6d6e625">setRealization</reimplements>
        <param>
          <type>unsigned long</type>
          <declname>r</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; &amp;</type>
          <declname>rdm_factors</declname>
        </param>
        <briefdescription>
<para>Sets the realization for the reservoir and updates the evaporation series. </para>        </briefdescription>
        <detaileddescription>
<para>This function sets the realization for the <computeroutput><ref refid="classReservoir" kindref="compound">Reservoir</ref></computeroutput> object, which may include applying random decision-making (RDM) factors to the reservoir&apos;s behavior. It also updates the <computeroutput>evaporation_series</computeroutput> by setting its realization based on the provided factors.</para><para>This function overrides the <computeroutput>setRealization</computeroutput> function in the base class <computeroutput><ref refid="classWaterSource" kindref="compound">WaterSource</ref></computeroutput>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>The realization index or identifier. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rdm_factors</parametername>
</parameternamelist>
<parameterdescription>
<para>A reference to a vector of RDM factors to apply during the realization. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SystemComponents/WaterSources/Reservoir.h" line="390" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classReservoir_1af86ffdaa2842a38b7f59e0360a1004a1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Reservoir::getArea</definition>
        <argsstring>() const</argsstring>
        <name>getArea</name>
        <briefdescription>
<para>Returns the area of the reservoir. </para>        </briefdescription>
        <detaileddescription>
<para>This function retrieves the area of the reservoir, which is used to calculate various hydrological properties related to the reservoir&apos;s size.</para><para><simplesect kind="return"><para>The area of the reservoir as a <computeroutput>double</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SystemComponents/WaterSources/Reservoir.h" line="400" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="93">
        <label>Quarry</label>
        <link refid="classQuarry"/>
        <childnode refid="90" relation="public-inheritance">
        </childnode>
      </node>
      <node id="91">
        <label>WaterSource</label>
        <link refid="classWaterSource"/>
      </node>
      <node id="90">
        <label>Reservoir</label>
        <link refid="classReservoir"/>
        <childnode refid="91" relation="public-inheritance">
        </childnode>
      </node>
      <node id="92">
        <label>AllocatedReservoir</label>
        <link refid="classAllocatedReservoir"/>
        <childnode refid="90" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="95">
        <label>WaterSource</label>
        <link refid="classWaterSource"/>
      </node>
      <node id="94">
        <label>Reservoir</label>
        <link refid="classReservoir"/>
        <childnode refid="95" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/SystemComponents/WaterSources/Reservoir.h" line="17" column="1" bodyfile="src/SystemComponents/WaterSources/Reservoir.h" bodystart="17" bodyend="401"/>
    <listofallmembers>
      <member refid="classWaterSource_1ab869abb3d3dde1875e933482bedc3ae3" prot="public" virt="virtual"><scope>Reservoir</scope><name>addCapacity</name></member>
      <member refid="classWaterSource_1ac2bc1a09fce3a3201d62a73052b27b0b" prot="public" virt="virtual"><scope>Reservoir</scope><name>addTreatmentCapacity</name></member>
      <member refid="classWaterSource_1ab94063d51314cfb896010408ae32fa9c" prot="protected" virt="non-virtual"><scope>Reservoir</scope><name>allocated_capacities</name></member>
      <member refid="classWaterSource_1a2f6655a80c4847fe039987255d9d998c" prot="protected" virt="non-virtual"><scope>Reservoir</scope><name>allocated_fractions</name></member>
      <member refid="classWaterSource_1a87dc0bfb5cf4e2b9a953c7a80058c923" prot="protected" virt="non-virtual"><scope>Reservoir</scope><name>allocated_treatment_capacities</name></member>
      <member refid="classWaterSource_1aa73fe10cfc6579b2fb79529e1dde5140" prot="protected" virt="non-virtual"><scope>Reservoir</scope><name>allocated_treatment_fractions</name></member>
      <member refid="classReservoir_1a66929c055193785bc9d47bcdf0bc7445" prot="public" virt="virtual"><scope>Reservoir</scope><name>applyContinuity</name></member>
      <member refid="classReservoir_1a57ab55e0dde9e29a4ff97de98b09e458" prot="protected" virt="non-virtual"><scope>Reservoir</scope><name>area</name></member>
      <member refid="classWaterSource_1a77d3fe9ea445fc987b07debdfb9e2f5b" prot="protected" virt="non-virtual"><scope>Reservoir</scope><name>available_allocated_volumes</name></member>
      <member refid="classWaterSource_1a49e1a191152e344e2161e8db166e067a" prot="protected" virt="non-virtual"><scope>Reservoir</scope><name>available_volume</name></member>
      <member refid="classWaterSource_1a413b094e11bdce62f4d82e5bb9e4706e" prot="protected" virt="non-virtual"><scope>Reservoir</scope><name>bonds</name></member>
      <member refid="classWaterSource_1a49f9da70a5080abe82160b1a0d194e60" prot="protected" virt="non-virtual"><scope>Reservoir</scope><name>built_in_sequence</name></member>
      <member refid="classWaterSource_1abeb8ba4b51c2b270baf9162df76d8b58" prot="protected" virt="non-virtual"><scope>Reservoir</scope><name>bypass</name></member>
      <member refid="classWaterSource_1a2ec257b415b248214a8bce7fc5267723" prot="protected" virt="non-virtual"><scope>Reservoir</scope><name>capacity</name></member>
      <member refid="classWaterSource_1a8c18c34f23f8a06685c1d12f462ed830" prot="protected" virt="non-virtual"><scope>Reservoir</scope><name>catchments</name></member>
      <member refid="classWaterSource_1a47bc2006a1ef6ea4429d56a24319940f" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>checkForInputErrorsConstruction</name></member>
      <member refid="classWaterSource_1a25d4ad4251b78267618b2f0ef5a501dc" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>compare</name></member>
      <member refid="classWaterSource_1ae059fbe3f911a819bac0202f7f45e8e4" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>construction_time</name></member>
      <member refid="classWaterSource_1a1137cd86f8d3f8a48ebec54282132993" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>continuityWaterSource</name></member>
      <member refid="classWaterSource_1a6085899c4b4cc40fa80784203e1a9755" prot="protected" virt="non-virtual"><scope>Reservoir</scope><name>evaporated_volume</name></member>
      <member refid="classReservoir_1a2d2d9b302c13703309bb798d24136810" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>evaporation_series</name></member>
      <member refid="classReservoir_1ad4b37aef4873071d1766baaccce5b8cf" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>fixed_area</name></member>
      <member refid="classWaterSource_1add1082429d114b41cb9e3afaa623aeb1" prot="public" virt="virtual"><scope>Reservoir</scope><name>getAgreementType</name></member>
      <member refid="classWaterSource_1ad218f2a603d7ebce268d800e0249a74c" prot="public" virt="virtual"><scope>Reservoir</scope><name>getAllocatedCapacity</name></member>
      <member refid="classWaterSource_1acec9b1fef81a9b73c4517409438452ac" prot="public" virt="virtual"><scope>Reservoir</scope><name>getAllocatedFraction</name></member>
      <member refid="classWaterSource_1a63b1a410b47710db049e2b2e9c3c39a0" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>getAllocatedInflow</name></member>
      <member refid="classWaterSource_1a4b05ca30a659ff351e75c487f31ff847" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>getAllocatedSupplyCapacities</name></member>
      <member refid="classWaterSource_1a48df9ae09a8a7844beb18c35382adba1" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>getAllocatedTreatmentCapacities</name></member>
      <member refid="classWaterSource_1ab98528c4d2e6ecd14cb2c813b1d445c6" prot="public" virt="virtual"><scope>Reservoir</scope><name>getAllocatedTreatmentCapacity</name></member>
      <member refid="classWaterSource_1ad943083d8b3bee60ad8d106bba8a5faa" prot="public" virt="virtual"><scope>Reservoir</scope><name>getAllocatedTreatmentFraction</name></member>
      <member refid="classReservoir_1af86ffdaa2842a38b7f59e0360a1004a1" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>getArea</name></member>
      <member refid="classWaterSource_1a9a87dafd08834147bcf5004bc3907824" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>getAvailable_allocated_volumes</name></member>
      <member refid="classWaterSource_1ad4667296dc6b6dabc36b871529ca2749" prot="public" virt="virtual"><scope>Reservoir</scope><name>getAvailableAllocatedVolume</name></member>
      <member refid="classWaterSource_1af6445a2dd3764907bcb9a37d4647f910" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>getAvailableSupplyVolume</name></member>
      <member refid="classWaterSource_1acb9e57253157c969fa57fc6e7b35ab68" prot="public" virt="virtual"><scope>Reservoir</scope><name>getAvailableVolume</name></member>
      <member refid="classWaterSource_1acacef71453819480c5438ae5b433e66b" prot="public" virt="virtual"><scope>Reservoir</scope><name>getBond</name></member>
      <member refid="classWaterSource_1a1e28dee97f62fbb9845300fc2768d172" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>getBuilt_in_sequence</name></member>
      <member refid="classWaterSource_1ac1e8880f0aeb56b2728e253d3500ef40" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>getConstruction_time</name></member>
      <member refid="classWaterSource_1ac57d6b292490333b5bc14233bce326ce" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>getDemand</name></member>
      <member refid="classWaterSource_1a00b156a153fc24097e4c8a4e5c46c4e0" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>getEvaporated_volume</name></member>
      <member refid="classWaterSource_1af7607924825ffe293179b09fe1bc466e" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>getMin_environmental_outflow</name></member>
      <member refid="classWaterSource_1a506c77317ae84db0a4d9ea2cd74ddb11" prot="public" virt="virtual"><scope>Reservoir</scope><name>getParentWaterSourceID</name></member>
      <member refid="classWaterSource_1aa21d3f1c87ced40c2b673d9e43d99176" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>getPermitting_period</name></member>
      <member refid="classWaterSource_1a00a432eba75eaae7195338a8514ac853" prot="public" virt="virtual"><scope>Reservoir</scope><name>getPrioritySourcePotentialVolume</name></member>
      <member refid="classWaterSource_1a484bca192a9e3aacaad47db0afb8fbdd" prot="public" virt="virtual"><scope>Reservoir</scope><name>getSupplyAllocatedFraction</name></member>
      <member refid="classWaterSource_1aeefcddb0119d5aab95dab03912a65cad" prot="public" virt="virtual"><scope>Reservoir</scope><name>getSupplyCapacity</name></member>
      <member refid="classWaterSource_1a7678e05e3e73b927c0b47e3041d7415f" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>getTotal_outflow</name></member>
      <member refid="classWaterSource_1a6228c9aee407ca2544753dbd2792c5fb" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>getTotal_treatment_capacity</name></member>
      <member refid="classWaterSource_1ad7e60efd7395f8d3e674e602226e5ac1" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>getUpstream_source_inflow</name></member>
      <member refid="classWaterSource_1afd2a153ba8f4ecaa9f8fa851d5a1727c" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>getUpstreamCatchmentInflow</name></member>
      <member refid="classWaterSource_1a41a9f1fb088f29633c9141687958c16e" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>getUtilities_with_allocations</name></member>
      <member refid="classWaterSource_1aee22325e6af0e3c804ddbd9a3505be05" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>getWastewater_inflow</name></member>
      <member refid="classWaterSource_1a9d85cbca88eefd54fda383237807470d" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>getWaterQualityPoolID</name></member>
      <member refid="classWaterSource_1a83c6dcf19b64533ce4bc3b918ce6cc8e" prot="protected" virt="non-virtual"><scope>Reservoir</scope><name>highest_alloc_id</name></member>
      <member refid="classWaterSource_1a6eafe5dfefd317877d1244e8a7c6e742" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>id</name></member>
      <member refid="classWaterSource_1a130fd661ff31c53115cca23e4e2f210a" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>isOnline</name></member>
      <member refid="classWaterSource_1adae67ac96597e4b25332002b88a9a52b" prot="protected" virt="non-virtual"><scope>Reservoir</scope><name>min_environmental_outflow</name></member>
      <member refid="classWaterSource_1a846ea74c5b453d014f594d41fee8c765" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>name</name></member>
      <member refid="classWaterSource_1aef4e289b47c2360f2e991ea3ee535781" prot="protected" virt="non-virtual"><scope>Reservoir</scope><name>online</name></member>
      <member refid="classWaterSource_1accb044cc78f9a444ca18bf7283b5b596" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>operator&lt;</name></member>
      <member refid="classReservoir_1a8b43209f25276f279986d87b5a77c4f1" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>operator=</name></member>
      <member refid="classWaterSource_1af10a33e286cf44b362984ff8d8053c91" prot="public" virt="non-virtual" ambiguityscope="WaterSource::"><scope>Reservoir</scope><name>operator=</name></member>
      <member refid="classWaterSource_1af25e06ec954898f3392cb125d2f2c2ad" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>operator==</name></member>
      <member refid="classWaterSource_1a9db800769891e1f49d74a78298f4dac1" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>operator&gt;</name></member>
      <member refid="classWaterSource_1a036d7980e74224fd5f5c6a390e0d5abb" prot="protected" virt="non-virtual"><scope>Reservoir</scope><name>permitting_time</name></member>
      <member refid="classWaterSource_1a3f04ae75d6235117d391dece2d323890" prot="protected" virt="non-virtual"><scope>Reservoir</scope><name>policy_added_demand</name></member>
      <member refid="classWaterSource_1aebc6985952d3e69f0d8ae1d0498a1ffe" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>randomConstructionTime</name></member>
      <member refid="classWaterSource_1a4a4d948033c57feb8523bd7d5828c59b" prot="public" virt="virtual"><scope>Reservoir</scope><name>removeWater</name></member>
      <member refid="classReservoir_1ac9803ae5446e4e9a2631ce66817004cf" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>Reservoir</name></member>
      <member refid="classReservoir_1a2e324b75aacc65d90b214ff7f62dfa89" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>Reservoir</name></member>
      <member refid="classReservoir_1a0a1041fc72df190bbc51d965ede96f49" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>Reservoir</name></member>
      <member refid="classReservoir_1a56409325d4554f8ef32a9c3605ece5c8" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>Reservoir</name></member>
      <member refid="classReservoir_1a1a6f078a9565dcb65843d3575bdd4172" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>Reservoir</name></member>
      <member refid="classReservoir_1a617f90b97899699d7e0dd97e7ebb34bc" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>Reservoir</name></member>
      <member refid="classReservoir_1ac20659043afad4d2df49ce91e08f5dad" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>Reservoir</name></member>
      <member refid="classReservoir_1a37ca7ba59d127fee6522c1ad545c9caf" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>Reservoir</name></member>
      <member refid="classReservoir_1a3fc46303b2846aa23bb52f0b69b9585c" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>Reservoir</name></member>
      <member refid="classWaterSource_1afe2f6b96383abdb14563db279a261a31" prot="public" virt="virtual"><scope>Reservoir</scope><name>resetAllocations</name></member>
      <member refid="classWaterSource_1adfc85c196cfc262d4b463e87c459eb3f" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>resetTreatmentAllocations</name></member>
      <member refid="classWaterSource_1abaf6cb0ecca08c87428ad516f11f8c2e" prot="protected" virt="non-virtual"><scope>Reservoir</scope><name>seed</name></member>
      <member refid="classWaterSource_1ac834762e016e796968ad286feeca7be6" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>setAllocations</name></member>
      <member refid="classWaterSource_1ae29ed4aa2b9c97c5a41772daf4631f05" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>setAvailableAllocatedVolumes</name></member>
      <member refid="classWaterSource_1a86999f23ec7f4fb518adb88e16f156a7" prot="public" virt="virtual"><scope>Reservoir</scope><name>setFull</name></member>
      <member refid="classWaterSource_1a406246432d29f49189d53207ab1d895a" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>setMin_environmental_outflow</name></member>
      <member refid="classReservoir_1ac6f64dd92c401e58095e7b125855041b" prot="public" virt="virtual"><scope>Reservoir</scope><name>setOnline</name></member>
      <member refid="classWaterSource_1ab53d376a425b8db603382ba27b52b1d4" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>setOutflow_previous_week</name></member>
      <member refid="classReservoir_1ad1bb7aa46397719d09e0b6188b9bc28d" prot="public" virt="virtual"><scope>Reservoir</scope><name>setRealization</name></member>
      <member refid="classWaterSource_1a4c8f4c120b9101767b6013a78eb2c5d4" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>setSeed</name></member>
      <member refid="classWaterSource_1abc7034b8c78e45d7b1fa4bd13b8a3bdd" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>setTreatmentAllocations</name></member>
      <member refid="classWaterSource_1ad8496aea2d4ff97c8069b61cc984c799" prot="public" virt="virtual"><scope>Reservoir</scope><name>skipConstruction</name></member>
      <member refid="classWaterSource_1afdd12c29fc74ea21dff1f1be9b8c2b7b" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>source_type</name></member>
      <member refid="classReservoir_1a46bd5b750963dfa9a57b247fd77ab8ff" prot="protected" virt="non-virtual"><scope>Reservoir</scope><name>storage_area_curve</name></member>
      <member refid="classWaterSource_1a87535be59994b2602576cdf34dbe04b9" prot="protected" virt="non-virtual"><scope>Reservoir</scope><name>supply_allocated_fractions</name></member>
      <member refid="classWaterSource_1a4be6864dc196287bdf8329b3aa6ca662" prot="protected" virt="non-virtual"><scope>Reservoir</scope><name>total_allocated_fraction</name></member>
      <member refid="classWaterSource_1a1934917dd35a2508a5102eb5831431b7" prot="protected" virt="non-virtual"><scope>Reservoir</scope><name>total_demand</name></member>
      <member refid="classWaterSource_1a5e6992931464ed75576326b9f1bd3c4f" prot="protected" virt="non-virtual"><scope>Reservoir</scope><name>total_outflow</name></member>
      <member refid="classWaterSource_1a2fdfd5ff7d103e71108cf2a31babaccb" prot="protected" virt="non-virtual"><scope>Reservoir</scope><name>total_treatment_capacity</name></member>
      <member refid="classWaterSource_1a04f94831f4816bb277c5a615eace7779" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>unsetSeed</name></member>
      <member refid="classWaterSource_1aceb2d77612db7ba71a171848a5e03b4f" prot="protected" virt="non-virtual"><scope>Reservoir</scope><name>upstream_catchment_inflow</name></member>
      <member refid="classWaterSource_1a67165e29345b61f36c8d8ccf3f648819" prot="protected" virt="non-virtual"><scope>Reservoir</scope><name>upstream_min_env_inflow</name></member>
      <member refid="classWaterSource_1a7a69b2e9b6030f1035e6cf44d2918ee5" prot="protected" virt="non-virtual"><scope>Reservoir</scope><name>upstream_source_inflow</name></member>
      <member refid="classWaterSource_1ac345583fc2d0f7e1db31ee40244d7ace" prot="protected" virt="non-virtual"><scope>Reservoir</scope><name>utilities_with_allocations</name></member>
      <member refid="classWaterSource_1aeb5a2d2d83383a70ca20f3e94635a9c7" prot="protected" virt="non-virtual"><scope>Reservoir</scope><name>wastewater_inflow</name></member>
      <member refid="classWaterSource_1a27b9d29d6cbb36d128f740f7ca00f500" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>WaterSource</name></member>
      <member refid="classWaterSource_1a7723d343a0b8edff36018ca7acf09f62" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>WaterSource</name></member>
      <member refid="classWaterSource_1a48641ff06b69505ab298f4f23e759a22" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>WaterSource</name></member>
      <member refid="classWaterSource_1a284e207f074da6f485d41f65ac025cf1" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>WaterSource</name></member>
      <member refid="classWaterSource_1ae8cf84e138983737e044bc1217858021" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>WaterSource</name></member>
      <member refid="classWaterSource_1af9377254ee532ee30eaed78953336b5f" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>WaterSource</name></member>
      <member refid="classWaterSource_1a5d02f9dc15b18572bbfa945aeec4dbb0" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>WaterSource</name></member>
      <member refid="classWaterSource_1aaa3aba0a9709cc1432f85f443b033a65" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>WaterSource</name></member>
      <member refid="classWaterSource_1acef73d9b1675fb6db9ec39347514db6d" prot="protected" virt="non-virtual"><scope>Reservoir</scope><name>wq_pool_id</name></member>
      <member refid="classReservoir_1a2f8bfdc73c7470185775a940fb3531de" prot="public" virt="non-virtual"><scope>Reservoir</scope><name>~Reservoir</name></member>
      <member refid="classWaterSource_1aa3b9261264152782c3115d2f563f1caf" prot="public" virt="virtual"><scope>Reservoir</scope><name>~WaterSource</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
