<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classAllocatedReservoir" kind="class" language="C++" prot="public">
    <compoundname>AllocatedReservoir</compoundname>
    <basecompoundref refid="classReservoir" prot="public" virt="non-virtual">Reservoir</basecompoundref>
    <includes refid="AllocatedReservoir_8h" local="no">AllocatedReservoir.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classAllocatedReservoir_1af6a1924f60de19b7f77781af0419c39b" prot="protected" static="no" mutable="no">
        <type>const bool</type>
        <definition>const bool AllocatedReservoir::has_water_quality_pool</definition>
        <argsstring></argsstring>
        <name>has_water_quality_pool</name>
        <briefdescription>
<para>A flag to indicate if the reservoir has a water quality pool. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/SystemComponents/WaterSources/AllocatedReservoir.h" line="16" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/SystemComponents/WaterSources/AllocatedReservoir.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classAllocatedReservoir_1ae34d7123ff096d676609e32ba4b83e47" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double AllocatedReservoir::continuity_error</definition>
        <argsstring></argsstring>
        <name>continuity_error</name>
        <briefdescription>
<para>The error in calculating inflow continuity. Calculated as the total_outflow of the reservoir + available_allocated_volumes to a specific utility. Should be zero. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/SystemComponents/WaterSources/AllocatedReservoir.h" line="22" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/SystemComponents/WaterSources/AllocatedReservoir.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classAllocatedReservoir_1a0b2d620a1d1fe9a9fe053269f35a9a70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>AllocatedReservoir::AllocatedReservoir</definition>
        <argsstring>(const char *name, const int id, const vector&lt; Catchment *&gt; &amp;catchments, const double capacity, const double max_treatment_capacity, EvaporationSeries &amp;evaporation_series, DataSeries *storage_area_curve, vector&lt; int &gt; *utilities_with_allocations, vector&lt; double &gt; *allocated_fractions, vector&lt; double &gt; *allocated_treatment_fractions)</argsstring>
        <name>AllocatedReservoir</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const vector&lt; <ref refid="classCatchment" kindref="compound">Catchment</ref> *&gt; &amp;</type>
          <declname>catchments</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>capacity</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>max_treatment_capacity</declname>
        </param>
        <param>
          <type>EvaporationSeries &amp;</type>
          <declname>evaporation_series</declname>
        </param>
        <param>
          <type>DataSeries *</type>
          <declname>storage_area_curve</declname>
        </param>
        <param>
          <type>vector&lt; int &gt; *</type>
          <declname>utilities_with_allocations</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; *</type>
          <declname>allocated_fractions</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; *</type>
          <declname>allocated_treatment_fractions</declname>
        </param>
        <briefdescription>
<para>Constructor for the <ref refid="classAllocatedReservoir" kindref="compound">AllocatedReservoir</ref> class. </para>        </briefdescription>
        <detaileddescription>
<para>This function initializes an <ref refid="classAllocatedReservoir" kindref="compound">AllocatedReservoir</ref> object with the specified parameters. It sets up the reservoirâ€™s name, ID, catchments, capacities, and various allocation fractions. Additionally, it checks if the water quality pool is initialized.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the reservoir. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The unique identifier for the reservoir. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>catchments</parametername>
</parameternamelist>
<parameterdescription>
<para>A vector of pointers to catchment objects associated with the reservoir. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>capacity</parametername>
</parameternamelist>
<parameterdescription>
<para>The total capacity of the reservoir. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_treatment_capacity</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum treatment capacity of the reservoir. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>evaporation_series</parametername>
</parameternamelist>
<parameterdescription>
<para>The evaporation series object associated with the reservoir. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>storage_area_curve</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a DataSeries object representing the storage area curve. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>utilities_with_allocations</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a vector of integers representing the utilities with allocations. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>allocated_fractions</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a vector of doubles representing the allocated fractions of the reservoir. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>allocated_treatment_fractions</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a vector of doubles representing the allocated treatment fractions.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/SystemComponents/WaterSources/AllocatedReservoir.h" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classAllocatedReservoir_1a22794afc1f06d13fc3099015a2250b0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>AllocatedReservoir::AllocatedReservoir</definition>
        <argsstring>(const char *name, const int id, const vector&lt; Catchment *&gt; &amp;catchments, const double capacity, const double max_treatment_capacity, EvaporationSeries &amp;evaporation_series, DataSeries *storage_area_curve, const vector&lt; double &gt; &amp;construction_time_range, double permitting_period, Bond &amp;bond, vector&lt; int &gt; *utilities_with_allocations, vector&lt; double &gt; *allocated_fractions, vector&lt; double &gt; *allocated_treatment_fractions)</argsstring>
        <name>AllocatedReservoir</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const vector&lt; <ref refid="classCatchment" kindref="compound">Catchment</ref> *&gt; &amp;</type>
          <declname>catchments</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>capacity</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>max_treatment_capacity</declname>
        </param>
        <param>
          <type>EvaporationSeries &amp;</type>
          <declname>evaporation_series</declname>
        </param>
        <param>
          <type>DataSeries *</type>
          <declname>storage_area_curve</declname>
        </param>
        <param>
          <type>const vector&lt; double &gt; &amp;</type>
          <declname>construction_time_range</declname>
        </param>
        <param>
          <type>double</type>
          <declname>permitting_period</declname>
        </param>
        <param>
          <type><ref refid="classBond" kindref="compound">Bond</ref> &amp;</type>
          <declname>bond</declname>
        </param>
        <param>
          <type>vector&lt; int &gt; *</type>
          <declname>utilities_with_allocations</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; *</type>
          <declname>allocated_fractions</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; *</type>
          <declname>allocated_treatment_fractions</declname>
        </param>
        <briefdescription>
<para>Constructor for the <ref refid="classAllocatedReservoir" kindref="compound">AllocatedReservoir</ref> class. </para>        </briefdescription>
        <detaileddescription>
<para>This function initializes an <ref refid="classAllocatedReservoir" kindref="compound">AllocatedReservoir</ref> object with the specified parameters. It sets up additional attributes including construction time, permitting period, and bond information. Additionally, it checks if the water quality pool is initialized.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the reservoir. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The unique identifier for the reservoir. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>catchments</parametername>
</parameternamelist>
<parameterdescription>
<para>A vector of pointers to catchment objects associated with the reservoir. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>capacity</parametername>
</parameternamelist>
<parameterdescription>
<para>The total capacity of the reservoir. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_treatment_capacity</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum treatment capacity of the reservoir. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>evaporation_series</parametername>
</parameternamelist>
<parameterdescription>
<para>The evaporation series associated with the reservoir. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>storage_area_curve</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a DataSeries object representing the storage area curve. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>construction_time_range</parametername>
</parameternamelist>
<parameterdescription>
<para>A vector of doubles representing the range of construction times for the reservoir. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>permitting_period</parametername>
</parameternamelist>
<parameterdescription>
<para>The permitting period for the reservoir. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bond</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classBond" kindref="compound">Bond</ref> object associated with the reservoir. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>utilities_with_allocations</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a vector of integers representing the utilities with allocations. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>allocated_fractions</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a vector of doubles representing the allocated fractions of the reservoir. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>allocated_treatment_fractions</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a vector of doubles representing the allocated treatment fractions.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/SystemComponents/WaterSources/AllocatedReservoir.h" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classAllocatedReservoir_1a17a60d40d936b1a68459d0bd9578aada" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>AllocatedReservoir::AllocatedReservoir</definition>
        <argsstring>(const char *name, const int id, const vector&lt; Catchment *&gt; &amp;catchments, const double capacity, const double max_treatment_capacity, EvaporationSeries &amp;evaporation_series, double storage_area, vector&lt; int &gt; *utilities_with_allocations, vector&lt; double &gt; *allocated_fractions, vector&lt; double &gt; *allocated_treatment_fractions)</argsstring>
        <name>AllocatedReservoir</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const vector&lt; <ref refid="classCatchment" kindref="compound">Catchment</ref> *&gt; &amp;</type>
          <declname>catchments</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>capacity</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>max_treatment_capacity</declname>
        </param>
        <param>
          <type>EvaporationSeries &amp;</type>
          <declname>evaporation_series</declname>
        </param>
        <param>
          <type>double</type>
          <declname>storage_area</declname>
        </param>
        <param>
          <type>vector&lt; int &gt; *</type>
          <declname>utilities_with_allocations</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; *</type>
          <declname>allocated_fractions</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; *</type>
          <declname>allocated_treatment_fractions</declname>
        </param>
        <briefdescription>
<para>Constructor for the <ref refid="classAllocatedReservoir" kindref="compound">AllocatedReservoir</ref> class. </para>        </briefdescription>
        <detaileddescription>
<para>This function initializes an <ref refid="classAllocatedReservoir" kindref="compound">AllocatedReservoir</ref> object with the specified parameters. It sets up a reservoir with a fixed storage area instead of a storage area curve. Additionally, it checks if the water quality pool is initialized.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the reservoir. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The unique identifier for the reservoir. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>catchments</parametername>
</parameternamelist>
<parameterdescription>
<para>A vector of pointers to catchment objects associated with the reservoir. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>capacity</parametername>
</parameternamelist>
<parameterdescription>
<para>The total capacity of the reservoir. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_treatment_capacity</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum treatment capacity of the reservoir. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>evaporation_series</parametername>
</parameternamelist>
<parameterdescription>
<para>The evaporation series object associated with the reservoir. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>storage_area</parametername>
</parameternamelist>
<parameterdescription>
<para>The storage area of the reservoir. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>utilities_with_allocations</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a vector of integers representing the utilities with allocations. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>allocated_fractions</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a vector of doubles representing the allocated fractions of the reservoir. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>allocated_treatment_fractions</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a vector of doubles representing the allocated treatment fractions.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/SystemComponents/WaterSources/AllocatedReservoir.h" line="105" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classAllocatedReservoir_1a44ac982717a21a0b24bb3019d07ffe89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>AllocatedReservoir::AllocatedReservoir</definition>
        <argsstring>(const char *name, const int id, const vector&lt; Catchment *&gt; &amp;catchments, const double capacity, const double max_treatment_capacity, EvaporationSeries &amp;evaporation_series, double storage_area, const vector&lt; double &gt; &amp;construction_time_range, double permitting_period, Bond &amp;bond, vector&lt; int &gt; *utilities_with_allocations, vector&lt; double &gt; *allocated_fractions, vector&lt; double &gt; *allocated_treatment_fractions)</argsstring>
        <name>AllocatedReservoir</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const vector&lt; <ref refid="classCatchment" kindref="compound">Catchment</ref> *&gt; &amp;</type>
          <declname>catchments</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>capacity</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>max_treatment_capacity</declname>
        </param>
        <param>
          <type>EvaporationSeries &amp;</type>
          <declname>evaporation_series</declname>
        </param>
        <param>
          <type>double</type>
          <declname>storage_area</declname>
        </param>
        <param>
          <type>const vector&lt; double &gt; &amp;</type>
          <declname>construction_time_range</declname>
        </param>
        <param>
          <type>double</type>
          <declname>permitting_period</declname>
        </param>
        <param>
          <type><ref refid="classBond" kindref="compound">Bond</ref> &amp;</type>
          <declname>bond</declname>
        </param>
        <param>
          <type>vector&lt; int &gt; *</type>
          <declname>utilities_with_allocations</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; *</type>
          <declname>allocated_fractions</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; *</type>
          <declname>allocated_treatment_fractions</declname>
        </param>
        <briefdescription>
<para>Constructor for the <ref refid="classAllocatedReservoir" kindref="compound">AllocatedReservoir</ref> class. </para>        </briefdescription>
        <detaileddescription>
<para>This function initializes an <ref refid="classAllocatedReservoir" kindref="compound">AllocatedReservoir</ref> object with the specified parameters. It sets up additional attributes including construction time, permitting period, and bond information. It sets up a reservoir with a fixed storage area instead of a storage area curve. Additionally, it checks if the water quality pool is initialized.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the reservoir. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The unique identifier for the reservoir. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>catchments</parametername>
</parameternamelist>
<parameterdescription>
<para>A vector of pointers to catchment objects associated with the reservoir. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>capacity</parametername>
</parameternamelist>
<parameterdescription>
<para>The total capacity of the reservoir. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_treatment_capacity</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum treatment capacity of the reservoir. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>evaporation_series</parametername>
</parameternamelist>
<parameterdescription>
<para>The evaporation series associated with the reservoir. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>storage_area</parametername>
</parameternamelist>
<parameterdescription>
<para>The storage area of the reservoir. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>construction_time_range</parametername>
</parameternamelist>
<parameterdescription>
<para>A vector of doubles representing the range of construction times for the reservoir. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>permitting_period</parametername>
</parameternamelist>
<parameterdescription>
<para>The permitting period for the reservoir. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bond</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classBond" kindref="compound">Bond</ref> object associated with the reservoir. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>utilities_with_allocations</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a vector of integers representing the utilities with allocations. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>allocated_fractions</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a vector of doubles representing the allocated fractions of the reservoir. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>allocated_treatment_fractions</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a vector of doubles representing the allocated treatment fractions.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/SystemComponents/WaterSources/AllocatedReservoir.h" line="138" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classAllocatedReservoir_1a59098eb446ada7a23e914543f3c419c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>AllocatedReservoir::AllocatedReservoir</definition>
        <argsstring>(const AllocatedReservoir &amp;allocated_reservoir)</argsstring>
        <name>AllocatedReservoir</name>
        <param>
          <type>const <ref refid="classAllocatedReservoir" kindref="compound">AllocatedReservoir</ref> &amp;</type>
          <declname>allocated_reservoir</declname>
        </param>
        <briefdescription>
<para>Copy constructor for the <ref refid="classAllocatedReservoir" kindref="compound">AllocatedReservoir</ref> class. </para>        </briefdescription>
        <detaileddescription>
<para>This function creates a new <computeroutput><ref refid="classAllocatedReservoir" kindref="compound">AllocatedReservoir</ref></computeroutput> object as a copy of an existing one. It initializes the new object by copying the data members from the provided <computeroutput>allocated_reservoir</computeroutput>, including the base class <computeroutput><ref refid="classReservoir" kindref="compound">Reservoir</ref></computeroutput> and the <computeroutput>has_water_quality_pool</computeroutput> member.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>allocated_reservoir</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput><ref refid="classAllocatedReservoir" kindref="compound">AllocatedReservoir</ref></computeroutput> object to be copied.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/SystemComponents/WaterSources/AllocatedReservoir.h" line="156" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classAllocatedReservoir_1a31c1733dbf7385599f1b9866df353b4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classAllocatedReservoir" kindref="compound">AllocatedReservoir</ref> &amp;</type>
        <definition>AllocatedReservoir&amp; AllocatedReservoir::operator=</definition>
        <argsstring>(const AllocatedReservoir &amp;allocated_reservoir)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classAllocatedReservoir" kindref="compound">AllocatedReservoir</ref> &amp;</type>
          <declname>allocated_reservoir</declname>
        </param>
        <briefdescription>
<para>Assignment operator for the <ref refid="classAllocatedReservoir" kindref="compound">AllocatedReservoir</ref> class. </para>        </briefdescription>
        <detaileddescription>
<para>This function assigns the state of one <computeroutput><ref refid="classAllocatedReservoir" kindref="compound">AllocatedReservoir</ref></computeroutput> object to another using the assignment operator. It copies the data members from the provided <computeroutput>allocated_reservoir</computeroutput> object to the current object (<computeroutput>*this</computeroutput>), including the base class <computeroutput><ref refid="classReservoir" kindref="compound">Reservoir</ref></computeroutput> and the <computeroutput>has_water_quality_pool</computeroutput> member.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>allocated_reservoir</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput><ref refid="classAllocatedReservoir" kindref="compound">AllocatedReservoir</ref></computeroutput> object to be assigned.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to the current <computeroutput><ref refid="classAllocatedReservoir" kindref="compound">AllocatedReservoir</ref></computeroutput> object (<computeroutput>*this</computeroutput>). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/SystemComponents/WaterSources/AllocatedReservoir.h" line="169" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classAllocatedReservoir_1a3fc9aaca619a97d338449384e579900c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>AllocatedReservoir::~AllocatedReservoir</definition>
        <argsstring>()</argsstring>
        <name>~AllocatedReservoir</name>
        <briefdescription>
<para>Destructor for the <ref refid="classAllocatedReservoir" kindref="compound">AllocatedReservoir</ref> class. </para>        </briefdescription>
        <detaileddescription>
<para>This function cleans up the <computeroutput><ref refid="classAllocatedReservoir" kindref="compound">AllocatedReservoir</ref></computeroutput> object when it goes out of scope. As it is defaulted, it relies on the compiler-generated destructor to handle cleanup.</para><para><simplesect kind="return"><para>void </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/SystemComponents/WaterSources/AllocatedReservoir.h" line="181" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classAllocatedReservoir_1aa5a3683ac3a1e7a778627332c6a7fff7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void AllocatedReservoir::applyContinuity</definition>
        <argsstring>(int week, double upstream_source_inflow, double wastewater_inflow, vector&lt; double &gt; &amp;demand_outflow) override</argsstring>
        <name>applyContinuity</name>
        <reimplements refid="classWaterSource_1ac070445379fe706f65b977dade4f3fbc">applyContinuity</reimplements>
        <param>
          <type>int</type>
          <declname>week</declname>
        </param>
        <param>
          <type>double</type>
          <declname>upstream_source_inflow</declname>
        </param>
        <param>
          <type>double</type>
          <declname>wastewater_inflow</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; &amp;</type>
          <declname>demand_outflow</declname>
        </param>
        <briefdescription>
<para>Updates reservoir state by applying water balance equations for a given week. </para>        </briefdescription>
        <detaileddescription>
<para>This function calculates the reservoir&apos;s continuity, accounting for inflows, outflows, evaporation, and demand, and updates the state of the reservoir accordingly. This function overrides the base class <computeroutput><ref refid="classReservoir" kindref="compound">Reservoir</ref></computeroutput> function to include continuity calculations.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>week</parametername>
</parameternamelist>
<parameterdescription>
<para>The current week for which continuity is calculated. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>upstream_source_inflow</parametername>
</parameternamelist>
<parameterdescription>
<para>The inflow from upstream water sources. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>wastewater_inflow</parametername>
</parameternamelist>
<parameterdescription>
<para>The inflow from wastewater sources. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>demand_outflow</parametername>
</parameternamelist>
<parameterdescription>
<para>A vector representing the water demands of different utilities.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void</para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>runtime_error</parametername>
</parameternamelist>
<parameterdescription>
<para>If the continuity error exceeds acceptable limits or allocated volumes do not match the available volume. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/SystemComponents/WaterSources/AllocatedReservoir.h" line="200" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classAllocatedReservoir_1aea294cbca1e1630a1307072632d14b05" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void AllocatedReservoir::setFull</definition>
        <argsstring>() override</argsstring>
        <name>setFull</name>
        <reimplements refid="classWaterSource_1a86999f23ec7f4fb518adb88e16f156a7">setFull</reimplements>
        <briefdescription>
<para>Sets the reservoir and all allocated volumes to full capacity. </para>        </briefdescription>
        <detaileddescription>
<para>This function marks the reservoir as full by setting its state to maximum capacity. Additionally, it ensures that all allocations for utilities are set to their respective maximum capacities. This function overrides the base class <computeroutput><ref refid="classReservoir" kindref="compound">Reservoir</ref></computeroutput> function to include continuity calculations.</para><para><simplesect kind="return"><para>void </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/SystemComponents/WaterSources/AllocatedReservoir.h" line="213" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classAllocatedReservoir_1ae161ebfc285aa69cb8b7f4fe20ee7a2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double AllocatedReservoir::getAvailableAllocatedVolume</definition>
        <argsstring>(int utility_id) override</argsstring>
        <name>getAvailableAllocatedVolume</name>
        <reimplements refid="classWaterSource_1ad4667296dc6b6dabc36b871529ca2749">getAvailableAllocatedVolume</reimplements>
        <param>
          <type>int</type>
          <declname>utility_id</declname>
        </param>
        <briefdescription>
<para>Retrieves the available allocated volume for a specific utility. </para>        </briefdescription>
        <detaileddescription>
<para>This function returns the current available volume of water allocated to the specified utility. It retrieves the allocated volume from the <computeroutput>available_allocated_volumes</computeroutput> vector using the <computeroutput>utility_id</computeroutput>. This function overrides the base class <computeroutput><ref refid="classReservoir" kindref="compound">Reservoir</ref></computeroutput> function to include continuity calculations.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>utility_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The identifier of the utility for which the allocated volume is retrieved.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>double The available allocated volume for the specified utility. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/SystemComponents/WaterSources/AllocatedReservoir.h" line="227" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classAllocatedReservoir_1a3a9b7ce2e1d42cc373095cfd40ef2ae2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void AllocatedReservoir::removeWater</definition>
        <argsstring>(int allocation_id, double volume) override</argsstring>
        <name>removeWater</name>
        <reimplements refid="classWaterSource_1a4a4d948033c57feb8523bd7d5828c59b">removeWater</reimplements>
        <param>
          <type>int</type>
          <declname>allocation_id</declname>
        </param>
        <param>
          <type>double</type>
          <declname>volume</declname>
        </param>
        <briefdescription>
<para>Removes a utility&apos;s allocated volume of water from the reservoir updates the reservoir state. </para>        </briefdescription>
        <detaileddescription>
<para>This function reduces the allocated volume for a specific utility by the given amount, adjusts the total available volume of the reservoir, and updates the total demand and policy-added demand. This function overrides the base class <computeroutput><ref refid="classReservoir" kindref="compound">Reservoir</ref></computeroutput> function to include continuity calculations.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>allocation_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The identifier of the allocation (utility) from which water is to be removed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>volume</parametername>
</parameternamelist>
<parameterdescription>
<para>The volume of water to be removed.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/SystemComponents/WaterSources/AllocatedReservoir.h" line="241" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classAllocatedReservoir_1a8b9b38494fa23f0bea78134c82644bf1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double AllocatedReservoir::getAllocatedCapacity</definition>
        <argsstring>(int utility_id) override</argsstring>
        <name>getAllocatedCapacity</name>
        <reimplements refid="classWaterSource_1ad218f2a603d7ebce268d800e0249a74c">getAllocatedCapacity</reimplements>
        <param>
          <type>int</type>
          <declname>utility_id</declname>
        </param>
        <briefdescription>
<para>Retrieves the allocated capacity for a specific utility. </para>        </briefdescription>
        <detaileddescription>
<para>This function overrides the base class <computeroutput><ref refid="classReservoir" kindref="compound">Reservoir</ref></computeroutput> function to allow specific utility-related information to be retrieved.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>utility_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The identifier of the utility for which the allocated capacity is retrieved.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>double The allocated capacity for the specified utility. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/SystemComponents/WaterSources/AllocatedReservoir.h" line="253" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classAllocatedReservoir_1a731381982c9245b0bf24db4082dc74c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double AllocatedReservoir::getAllocatedFraction</definition>
        <argsstring>(int utility_id) override</argsstring>
        <name>getAllocatedFraction</name>
        <reimplements refid="classWaterSource_1acec9b1fef81a9b73c4517409438452ac">getAllocatedFraction</reimplements>
        <param>
          <type>int</type>
          <declname>utility_id</declname>
        </param>
        <briefdescription>
<para>Retrieves the allocated fraction of capacity for a specific utility. </para>        </briefdescription>
        <detaileddescription>
<para>This function returns the fraction of the reservoir&apos;s total capacity that is allocated to a specific utility. This function overrides the base class <computeroutput><ref refid="classReservoir" kindref="compound">Reservoir</ref></computeroutput> function to allow specific utility-related information to be retrieved.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>utility_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The identifier of the utility for which the allocated fraction is retrieved.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>double The allocated fraction for the specified utility (unitless, typically between 0 and 1). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/SystemComponents/WaterSources/AllocatedReservoir.h" line="266" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classAllocatedReservoir_1a191cf4347eb2ea57b203c102f8fc805e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void AllocatedReservoir::addCapacity</definition>
        <argsstring>(double capacity, int utility_id) override</argsstring>
        <name>addCapacity</name>
        <reimplements refid="classWaterSource_1ab869abb3d3dde1875e933482bedc3ae3">addCapacity</reimplements>
        <param>
          <type>double</type>
          <declname>capacity</declname>
        </param>
        <param>
          <type>int</type>
          <declname>utility_id</declname>
        </param>
        <briefdescription>
<para>Adds capacity to the reservoir and adjusts allocations for each utility. </para>        </briefdescription>
        <detaileddescription>
<para>This function increases the reservoir&apos;s total capacity and redistributes the added capacity among utilities based on their allocated fractions. This function overrides the base class <computeroutput><ref refid="classReservoir" kindref="compound">Reservoir</ref></computeroutput> function to include continuity calculations.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>capacity</parametername>
</parameternamelist>
<parameterdescription>
<para>The additional capacity to be added to the reservoir. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>utility_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The identifier of the utility initiating the capacity increase.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/SystemComponents/WaterSources/AllocatedReservoir.h" line="281" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classAllocatedReservoir_1ab781bee3253277f1dcfa4c12756d9d6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void AllocatedReservoir::addTreatmentCapacity</definition>
        <argsstring>(const double added_plant_treatment_capacity, int utility_id) override</argsstring>
        <name>addTreatmentCapacity</name>
        <reimplements refid="classWaterSource_1ac2bc1a09fce3a3201d62a73052b27b0b">addTreatmentCapacity</reimplements>
        <param>
          <type>const double</type>
          <declname>added_plant_treatment_capacity</declname>
        </param>
        <param>
          <type>int</type>
          <declname>utility_id</declname>
        </param>
        <briefdescription>
<para>Adds treatment capacity to the reservoir for a specific utility and updates allocation fractions. This function increases the plant&apos;s treatment capacity for a specified utility and recalculates the treatment allocation fractions for all utilities. </para>        </briefdescription>
        <detaileddescription>
<para>Both the total treatment capacity of the new plant and the fraction of the treatment capacity allocated to a given utility allow for joint treatment plants. To have one utility only building an exclusive plant, the fraction will be 1.</para><para>This function overrides the base class <computeroutput><ref refid="classReservoir" kindref="compound">Reservoir</ref></computeroutput> function to include continuity calculations.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>added_plant_treatment_capacity</parametername>
</parameternamelist>
<parameterdescription>
<para>The additional treatment capacity to be added. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>utility_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The identifier of the utility receiving the additional treatment capacity.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/SystemComponents/WaterSources/AllocatedReservoir.h" line="298" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classAllocatedReservoir_1aba81b93e1aa1154ce411248903fabde6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double AllocatedReservoir::getAllocatedTreatmentCapacity</definition>
        <argsstring>(int utility_id) const override</argsstring>
        <name>getAllocatedTreatmentCapacity</name>
        <reimplements refid="classWaterSource_1ab98528c4d2e6ecd14cb2c813b1d445c6">getAllocatedTreatmentCapacity</reimplements>
        <param>
          <type>int</type>
          <declname>utility_id</declname>
        </param>
        <briefdescription>
<para>Retrieves the allocated treatment capacity for a specific utility. </para>        </briefdescription>
        <detaileddescription>
<para>This function returns the treatment capacity allocated to the specified utility. If the utility ID corresponds to the water quality allocation, an exception is thrown as it does not have an allocated treatment capacity. This function overrides the base class <computeroutput><ref refid="classReservoir" kindref="compound">Reservoir</ref></computeroutput> function to reference a specific utility.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>utility_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The identifier of the utility whose treatment capacity is being queried.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>double The allocated treatment capacity (mÂ³/day) for the specified utility.</para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>If <computeroutput>utility_id</computeroutput> corresponds to the water quality allocation. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/SystemComponents/WaterSources/AllocatedReservoir.h" line="314" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classAllocatedReservoir_1a114e9cde6a106b786ca0ed39283cbbed" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double AllocatedReservoir::getSupplyAllocatedFraction</definition>
        <argsstring>(int utility_id) override</argsstring>
        <name>getSupplyAllocatedFraction</name>
        <reimplements refid="classWaterSource_1a484bca192a9e3aacaad47db0afb8fbdd">getSupplyAllocatedFraction</reimplements>
        <param>
          <type>int</type>
          <declname>utility_id</declname>
        </param>
        <briefdescription>
<para>Retrieves the supply allocated fraction for a specific utility. </para>        </briefdescription>
        <detaileddescription>
<para>This function returns the supply allocated fraction for the specified utility. If the utility ID corresponds to the water quality allocation, an exception is thrown because water quality allocation cannot be used for supply. This function overrides the base class <computeroutput><ref refid="classReservoir" kindref="compound">Reservoir</ref></computeroutput> function to reference a specific utility.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>utility_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The identifier of the utility whose supply allocation fraction is being queried.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>double The supply allocated fraction for the specified utility.</para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>If <computeroutput>utility_id</computeroutput> corresponds to the water quality allocation. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/SystemComponents/WaterSources/AllocatedReservoir.h" line="329" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classAllocatedReservoir_1a9d025365aa42dfff13a0aac8ea7863fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool AllocatedReservoir::mass_balance_with_wq_pool</definition>
        <argsstring>(double net_inflow, vector&lt; double &gt; &amp;demand_outflow)</argsstring>
        <name>mass_balance_with_wq_pool</name>
        <param>
          <type>double</type>
          <declname>net_inflow</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; &amp;</type>
          <declname>demand_outflow</declname>
        </param>
        <briefdescription>
<para>Performs the mass balance calculation for the reservoir with the water quality (WQ) pool. </para>        </briefdescription>
        <detaileddescription>
<para>This function calculates the mass balance for the reservoir by considering both the allocations for utilities and the water quality pool. It splits the incoming net inflow among the utilities, subtracts their respective demands, and handles cases where the allocated volume goes negative by charging the water quality pool. The function also flags when an allocation exceeds its capacity.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>net_inflow</parametername>
</parameternamelist>
<parameterdescription>
<para>The net inflow into the reservoir (inflow minus outflow from upstream sources). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>demand_outflow</parametername>
</parameternamelist>
<parameterdescription>
<para>A vector containing the demand outflows for each utility.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool Returns <computeroutput>true</computeroutput> if overallocation occurs (i.e., any allocation exceeds its capacity), <computeroutput>false</computeroutput> otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/SystemComponents/WaterSources/AllocatedReservoir.h" line="345" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classAllocatedReservoir_1ac719b30d5a83ba19ea722449ce9580e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool AllocatedReservoir::mass_balance_without_wq_pool</definition>
        <argsstring>(double net_inflow, vector&lt; double &gt; &amp;demand_outflow)</argsstring>
        <name>mass_balance_without_wq_pool</name>
        <param>
          <type>double</type>
          <declname>net_inflow</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; &amp;</type>
          <declname>demand_outflow</declname>
        </param>
        <briefdescription>
<para>Performs the mass balance calculation for the reservoir without considering the water quality (WQ) pool. </para>        </briefdescription>
        <detaileddescription>
<para>This function calculates the mass balance for the reservoir when there is no water quality pool. It splits the incoming net inflow among the utilities based on their allocation fractions, subtracts their respective demands, and checks if any allocation exceeds its capacity.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>net_inflow</parametername>
</parameternamelist>
<parameterdescription>
<para>The net inflow into the reservoir (inflow minus outflow from upstream sources). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>demand_outflow</parametername>
</parameternamelist>
<parameterdescription>
<para>A vector containing the demand outflows for each utility.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool Returns <computeroutput>true</computeroutput> if overallocation occurs (i.e., any allocation exceeds its capacity), <computeroutput>false</computeroutput> otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/SystemComponents/WaterSources/AllocatedReservoir.h" line="360" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classAllocatedReservoir_1a739d93f7981f597a3db0a3d613304b8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void AllocatedReservoir::setOnline</definition>
        <argsstring>() override</argsstring>
        <name>setOnline</name>
        <reimplements refid="classWaterSource_1aaa55dc6e14ff184380300147b53c56ec">setOnline</reimplements>
        <briefdescription>
<para>Sets the reservoir online, initializing available volume and allocated volumes. </para>        </briefdescription>
        <detaileddescription>
<para>This function sets the reservoir&apos;s state to &quot;online&quot; by initializing its available volume to zero and setting all allocated volumes to zero for each utility with allocations. This represents the transition from an offline state to an active state where the reservoir is ready to receive inflows. This function overrides the base class <computeroutput><ref refid="classReservoir" kindref="compound">Reservoir</ref></computeroutput> function to include continuity calculations.</para><para><simplesect kind="return"><para>void </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/SystemComponents/WaterSources/AllocatedReservoir.h" line="372" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="10">
        <label>WaterSource</label>
        <link refid="classWaterSource"/>
      </node>
      <node id="9">
        <label>Reservoir</label>
        <link refid="classReservoir"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>AllocatedReservoir</label>
        <link refid="classAllocatedReservoir"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="13">
        <label>WaterSource</label>
        <link refid="classWaterSource"/>
      </node>
      <node id="12">
        <label>Reservoir</label>
        <link refid="classReservoir"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>AllocatedReservoir</label>
        <link refid="classAllocatedReservoir"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/SystemComponents/WaterSources/AllocatedReservoir.h" line="11" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/SystemComponents/WaterSources/AllocatedReservoir.h" bodystart="11" bodyend="373"/>
    <listofallmembers>
      <member refid="classAllocatedReservoir_1a191cf4347eb2ea57b203c102f8fc805e" prot="public" virt="virtual"><scope>AllocatedReservoir</scope><name>addCapacity</name></member>
      <member refid="classAllocatedReservoir_1ab781bee3253277f1dcfa4c12756d9d6f" prot="public" virt="virtual"><scope>AllocatedReservoir</scope><name>addTreatmentCapacity</name></member>
      <member refid="classWaterSource_1ab94063d51314cfb896010408ae32fa9c" prot="protected" virt="non-virtual"><scope>AllocatedReservoir</scope><name>allocated_capacities</name></member>
      <member refid="classWaterSource_1a2f6655a80c4847fe039987255d9d998c" prot="protected" virt="non-virtual"><scope>AllocatedReservoir</scope><name>allocated_fractions</name></member>
      <member refid="classWaterSource_1a87dc0bfb5cf4e2b9a953c7a80058c923" prot="protected" virt="non-virtual"><scope>AllocatedReservoir</scope><name>allocated_treatment_capacities</name></member>
      <member refid="classWaterSource_1aa73fe10cfc6579b2fb79529e1dde5140" prot="protected" virt="non-virtual"><scope>AllocatedReservoir</scope><name>allocated_treatment_fractions</name></member>
      <member refid="classAllocatedReservoir_1a0b2d620a1d1fe9a9fe053269f35a9a70" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>AllocatedReservoir</name></member>
      <member refid="classAllocatedReservoir_1a22794afc1f06d13fc3099015a2250b0d" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>AllocatedReservoir</name></member>
      <member refid="classAllocatedReservoir_1a17a60d40d936b1a68459d0bd9578aada" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>AllocatedReservoir</name></member>
      <member refid="classAllocatedReservoir_1a44ac982717a21a0b24bb3019d07ffe89" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>AllocatedReservoir</name></member>
      <member refid="classAllocatedReservoir_1a59098eb446ada7a23e914543f3c419c0" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>AllocatedReservoir</name></member>
      <member refid="classAllocatedReservoir_1aa5a3683ac3a1e7a778627332c6a7fff7" prot="public" virt="virtual"><scope>AllocatedReservoir</scope><name>applyContinuity</name></member>
      <member refid="classReservoir_1a57ab55e0dde9e29a4ff97de98b09e458" prot="protected" virt="non-virtual"><scope>AllocatedReservoir</scope><name>area</name></member>
      <member refid="classWaterSource_1a77d3fe9ea445fc987b07debdfb9e2f5b" prot="protected" virt="non-virtual"><scope>AllocatedReservoir</scope><name>available_allocated_volumes</name></member>
      <member refid="classWaterSource_1a49e1a191152e344e2161e8db166e067a" prot="protected" virt="non-virtual"><scope>AllocatedReservoir</scope><name>available_volume</name></member>
      <member refid="classWaterSource_1a413b094e11bdce62f4d82e5bb9e4706e" prot="protected" virt="non-virtual"><scope>AllocatedReservoir</scope><name>bonds</name></member>
      <member refid="classWaterSource_1a49f9da70a5080abe82160b1a0d194e60" prot="protected" virt="non-virtual"><scope>AllocatedReservoir</scope><name>built_in_sequence</name></member>
      <member refid="classWaterSource_1abeb8ba4b51c2b270baf9162df76d8b58" prot="protected" virt="non-virtual"><scope>AllocatedReservoir</scope><name>bypass</name></member>
      <member refid="classWaterSource_1a2ec257b415b248214a8bce7fc5267723" prot="protected" virt="non-virtual"><scope>AllocatedReservoir</scope><name>capacity</name></member>
      <member refid="classWaterSource_1a8c18c34f23f8a06685c1d12f462ed830" prot="protected" virt="non-virtual"><scope>AllocatedReservoir</scope><name>catchments</name></member>
      <member refid="classWaterSource_1a47bc2006a1ef6ea4429d56a24319940f" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>checkForInputErrorsConstruction</name></member>
      <member refid="classWaterSource_1a25d4ad4251b78267618b2f0ef5a501dc" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>compare</name></member>
      <member refid="classWaterSource_1ae059fbe3f911a819bac0202f7f45e8e4" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>construction_time</name></member>
      <member refid="classAllocatedReservoir_1ae34d7123ff096d676609e32ba4b83e47" prot="protected" virt="non-virtual"><scope>AllocatedReservoir</scope><name>continuity_error</name></member>
      <member refid="classWaterSource_1a1137cd86f8d3f8a48ebec54282132993" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>continuityWaterSource</name></member>
      <member refid="classWaterSource_1a6085899c4b4cc40fa80784203e1a9755" prot="protected" virt="non-virtual"><scope>AllocatedReservoir</scope><name>evaporated_volume</name></member>
      <member refid="classReservoir_1a2d2d9b302c13703309bb798d24136810" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>evaporation_series</name></member>
      <member refid="classReservoir_1ad4b37aef4873071d1766baaccce5b8cf" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>fixed_area</name></member>
      <member refid="classWaterSource_1add1082429d114b41cb9e3afaa623aeb1" prot="public" virt="virtual"><scope>AllocatedReservoir</scope><name>getAgreementType</name></member>
      <member refid="classAllocatedReservoir_1a8b9b38494fa23f0bea78134c82644bf1" prot="public" virt="virtual"><scope>AllocatedReservoir</scope><name>getAllocatedCapacity</name></member>
      <member refid="classAllocatedReservoir_1a731381982c9245b0bf24db4082dc74c1" prot="public" virt="virtual"><scope>AllocatedReservoir</scope><name>getAllocatedFraction</name></member>
      <member refid="classWaterSource_1a63b1a410b47710db049e2b2e9c3c39a0" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>getAllocatedInflow</name></member>
      <member refid="classWaterSource_1a4b05ca30a659ff351e75c487f31ff847" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>getAllocatedSupplyCapacities</name></member>
      <member refid="classWaterSource_1a48df9ae09a8a7844beb18c35382adba1" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>getAllocatedTreatmentCapacities</name></member>
      <member refid="classAllocatedReservoir_1aba81b93e1aa1154ce411248903fabde6" prot="public" virt="virtual"><scope>AllocatedReservoir</scope><name>getAllocatedTreatmentCapacity</name></member>
      <member refid="classWaterSource_1ad943083d8b3bee60ad8d106bba8a5faa" prot="public" virt="virtual"><scope>AllocatedReservoir</scope><name>getAllocatedTreatmentFraction</name></member>
      <member refid="classReservoir_1af86ffdaa2842a38b7f59e0360a1004a1" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>getArea</name></member>
      <member refid="classWaterSource_1a9a87dafd08834147bcf5004bc3907824" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>getAvailable_allocated_volumes</name></member>
      <member refid="classAllocatedReservoir_1ae161ebfc285aa69cb8b7f4fe20ee7a2e" prot="public" virt="virtual"><scope>AllocatedReservoir</scope><name>getAvailableAllocatedVolume</name></member>
      <member refid="classWaterSource_1af6445a2dd3764907bcb9a37d4647f910" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>getAvailableSupplyVolume</name></member>
      <member refid="classWaterSource_1acb9e57253157c969fa57fc6e7b35ab68" prot="public" virt="virtual"><scope>AllocatedReservoir</scope><name>getAvailableVolume</name></member>
      <member refid="classWaterSource_1acacef71453819480c5438ae5b433e66b" prot="public" virt="virtual"><scope>AllocatedReservoir</scope><name>getBond</name></member>
      <member refid="classWaterSource_1a1e28dee97f62fbb9845300fc2768d172" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>getBuilt_in_sequence</name></member>
      <member refid="classWaterSource_1ac1e8880f0aeb56b2728e253d3500ef40" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>getConstruction_time</name></member>
      <member refid="classWaterSource_1ac57d6b292490333b5bc14233bce326ce" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>getDemand</name></member>
      <member refid="classWaterSource_1a00b156a153fc24097e4c8a4e5c46c4e0" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>getEvaporated_volume</name></member>
      <member refid="classWaterSource_1af7607924825ffe293179b09fe1bc466e" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>getMin_environmental_outflow</name></member>
      <member refid="classWaterSource_1a506c77317ae84db0a4d9ea2cd74ddb11" prot="public" virt="virtual"><scope>AllocatedReservoir</scope><name>getParentWaterSourceID</name></member>
      <member refid="classWaterSource_1aa21d3f1c87ced40c2b673d9e43d99176" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>getPermitting_period</name></member>
      <member refid="classWaterSource_1a00a432eba75eaae7195338a8514ac853" prot="public" virt="virtual"><scope>AllocatedReservoir</scope><name>getPrioritySourcePotentialVolume</name></member>
      <member refid="classAllocatedReservoir_1a114e9cde6a106b786ca0ed39283cbbed" prot="public" virt="virtual"><scope>AllocatedReservoir</scope><name>getSupplyAllocatedFraction</name></member>
      <member refid="classWaterSource_1aeefcddb0119d5aab95dab03912a65cad" prot="public" virt="virtual"><scope>AllocatedReservoir</scope><name>getSupplyCapacity</name></member>
      <member refid="classWaterSource_1a7678e05e3e73b927c0b47e3041d7415f" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>getTotal_outflow</name></member>
      <member refid="classWaterSource_1a6228c9aee407ca2544753dbd2792c5fb" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>getTotal_treatment_capacity</name></member>
      <member refid="classWaterSource_1ad7e60efd7395f8d3e674e602226e5ac1" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>getUpstream_source_inflow</name></member>
      <member refid="classWaterSource_1afd2a153ba8f4ecaa9f8fa851d5a1727c" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>getUpstreamCatchmentInflow</name></member>
      <member refid="classWaterSource_1a41a9f1fb088f29633c9141687958c16e" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>getUtilities_with_allocations</name></member>
      <member refid="classWaterSource_1aee22325e6af0e3c804ddbd9a3505be05" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>getWastewater_inflow</name></member>
      <member refid="classWaterSource_1a9d85cbca88eefd54fda383237807470d" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>getWaterQualityPoolID</name></member>
      <member refid="classAllocatedReservoir_1af6a1924f60de19b7f77781af0419c39b" prot="protected" virt="non-virtual"><scope>AllocatedReservoir</scope><name>has_water_quality_pool</name></member>
      <member refid="classWaterSource_1a83c6dcf19b64533ce4bc3b918ce6cc8e" prot="protected" virt="non-virtual"><scope>AllocatedReservoir</scope><name>highest_alloc_id</name></member>
      <member refid="classWaterSource_1a6eafe5dfefd317877d1244e8a7c6e742" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>id</name></member>
      <member refid="classWaterSource_1a130fd661ff31c53115cca23e4e2f210a" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>isOnline</name></member>
      <member refid="classAllocatedReservoir_1a9d025365aa42dfff13a0aac8ea7863fa" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>mass_balance_with_wq_pool</name></member>
      <member refid="classAllocatedReservoir_1ac719b30d5a83ba19ea722449ce9580e1" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>mass_balance_without_wq_pool</name></member>
      <member refid="classWaterSource_1adae67ac96597e4b25332002b88a9a52b" prot="protected" virt="non-virtual"><scope>AllocatedReservoir</scope><name>min_environmental_outflow</name></member>
      <member refid="classWaterSource_1a846ea74c5b453d014f594d41fee8c765" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>name</name></member>
      <member refid="classWaterSource_1aef4e289b47c2360f2e991ea3ee535781" prot="protected" virt="non-virtual"><scope>AllocatedReservoir</scope><name>online</name></member>
      <member refid="classWaterSource_1accb044cc78f9a444ca18bf7283b5b596" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>operator&lt;</name></member>
      <member refid="classAllocatedReservoir_1a31c1733dbf7385599f1b9866df353b4c" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>operator=</name></member>
      <member refid="classReservoir_1a8b43209f25276f279986d87b5a77c4f1" prot="public" virt="non-virtual" ambiguityscope="Reservoir::"><scope>AllocatedReservoir</scope><name>operator=</name></member>
      <member refid="classWaterSource_1af10a33e286cf44b362984ff8d8053c91" prot="public" virt="non-virtual" ambiguityscope="WaterSource::"><scope>AllocatedReservoir</scope><name>operator=</name></member>
      <member refid="classWaterSource_1af25e06ec954898f3392cb125d2f2c2ad" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>operator==</name></member>
      <member refid="classWaterSource_1a9db800769891e1f49d74a78298f4dac1" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>operator&gt;</name></member>
      <member refid="classWaterSource_1a036d7980e74224fd5f5c6a390e0d5abb" prot="protected" virt="non-virtual"><scope>AllocatedReservoir</scope><name>permitting_time</name></member>
      <member refid="classWaterSource_1a3f04ae75d6235117d391dece2d323890" prot="protected" virt="non-virtual"><scope>AllocatedReservoir</scope><name>policy_added_demand</name></member>
      <member refid="classWaterSource_1aebc6985952d3e69f0d8ae1d0498a1ffe" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>randomConstructionTime</name></member>
      <member refid="classAllocatedReservoir_1a3a9b7ce2e1d42cc373095cfd40ef2ae2" prot="public" virt="virtual"><scope>AllocatedReservoir</scope><name>removeWater</name></member>
      <member refid="classReservoir_1ac9803ae5446e4e9a2631ce66817004cf" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>Reservoir</name></member>
      <member refid="classReservoir_1a2e324b75aacc65d90b214ff7f62dfa89" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>Reservoir</name></member>
      <member refid="classReservoir_1a0a1041fc72df190bbc51d965ede96f49" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>Reservoir</name></member>
      <member refid="classReservoir_1a56409325d4554f8ef32a9c3605ece5c8" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>Reservoir</name></member>
      <member refid="classReservoir_1a1a6f078a9565dcb65843d3575bdd4172" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>Reservoir</name></member>
      <member refid="classReservoir_1a617f90b97899699d7e0dd97e7ebb34bc" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>Reservoir</name></member>
      <member refid="classReservoir_1ac20659043afad4d2df49ce91e08f5dad" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>Reservoir</name></member>
      <member refid="classReservoir_1a37ca7ba59d127fee6522c1ad545c9caf" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>Reservoir</name></member>
      <member refid="classReservoir_1a3fc46303b2846aa23bb52f0b69b9585c" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>Reservoir</name></member>
      <member refid="classWaterSource_1afe2f6b96383abdb14563db279a261a31" prot="public" virt="virtual"><scope>AllocatedReservoir</scope><name>resetAllocations</name></member>
      <member refid="classWaterSource_1adfc85c196cfc262d4b463e87c459eb3f" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>resetTreatmentAllocations</name></member>
      <member refid="classWaterSource_1abaf6cb0ecca08c87428ad516f11f8c2e" prot="protected" virt="non-virtual"><scope>AllocatedReservoir</scope><name>seed</name></member>
      <member refid="classWaterSource_1ac834762e016e796968ad286feeca7be6" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>setAllocations</name></member>
      <member refid="classWaterSource_1ae29ed4aa2b9c97c5a41772daf4631f05" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>setAvailableAllocatedVolumes</name></member>
      <member refid="classAllocatedReservoir_1aea294cbca1e1630a1307072632d14b05" prot="public" virt="virtual"><scope>AllocatedReservoir</scope><name>setFull</name></member>
      <member refid="classWaterSource_1a406246432d29f49189d53207ab1d895a" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>setMin_environmental_outflow</name></member>
      <member refid="classAllocatedReservoir_1a739d93f7981f597a3db0a3d613304b8e" prot="public" virt="virtual"><scope>AllocatedReservoir</scope><name>setOnline</name></member>
      <member refid="classWaterSource_1ab53d376a425b8db603382ba27b52b1d4" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>setOutflow_previous_week</name></member>
      <member refid="classReservoir_1ad1bb7aa46397719d09e0b6188b9bc28d" prot="public" virt="virtual"><scope>AllocatedReservoir</scope><name>setRealization</name></member>
      <member refid="classWaterSource_1a4c8f4c120b9101767b6013a78eb2c5d4" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>setSeed</name></member>
      <member refid="classWaterSource_1abc7034b8c78e45d7b1fa4bd13b8a3bdd" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>setTreatmentAllocations</name></member>
      <member refid="classWaterSource_1ad8496aea2d4ff97c8069b61cc984c799" prot="public" virt="virtual"><scope>AllocatedReservoir</scope><name>skipConstruction</name></member>
      <member refid="classWaterSource_1afdd12c29fc74ea21dff1f1be9b8c2b7b" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>source_type</name></member>
      <member refid="classReservoir_1a46bd5b750963dfa9a57b247fd77ab8ff" prot="protected" virt="non-virtual"><scope>AllocatedReservoir</scope><name>storage_area_curve</name></member>
      <member refid="classWaterSource_1a87535be59994b2602576cdf34dbe04b9" prot="protected" virt="non-virtual"><scope>AllocatedReservoir</scope><name>supply_allocated_fractions</name></member>
      <member refid="classWaterSource_1a4be6864dc196287bdf8329b3aa6ca662" prot="protected" virt="non-virtual"><scope>AllocatedReservoir</scope><name>total_allocated_fraction</name></member>
      <member refid="classWaterSource_1a1934917dd35a2508a5102eb5831431b7" prot="protected" virt="non-virtual"><scope>AllocatedReservoir</scope><name>total_demand</name></member>
      <member refid="classWaterSource_1a5e6992931464ed75576326b9f1bd3c4f" prot="protected" virt="non-virtual"><scope>AllocatedReservoir</scope><name>total_outflow</name></member>
      <member refid="classWaterSource_1a2fdfd5ff7d103e71108cf2a31babaccb" prot="protected" virt="non-virtual"><scope>AllocatedReservoir</scope><name>total_treatment_capacity</name></member>
      <member refid="classWaterSource_1a04f94831f4816bb277c5a615eace7779" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>unsetSeed</name></member>
      <member refid="classWaterSource_1aceb2d77612db7ba71a171848a5e03b4f" prot="protected" virt="non-virtual"><scope>AllocatedReservoir</scope><name>upstream_catchment_inflow</name></member>
      <member refid="classWaterSource_1a67165e29345b61f36c8d8ccf3f648819" prot="protected" virt="non-virtual"><scope>AllocatedReservoir</scope><name>upstream_min_env_inflow</name></member>
      <member refid="classWaterSource_1a7a69b2e9b6030f1035e6cf44d2918ee5" prot="protected" virt="non-virtual"><scope>AllocatedReservoir</scope><name>upstream_source_inflow</name></member>
      <member refid="classWaterSource_1ac345583fc2d0f7e1db31ee40244d7ace" prot="protected" virt="non-virtual"><scope>AllocatedReservoir</scope><name>utilities_with_allocations</name></member>
      <member refid="classWaterSource_1aeb5a2d2d83383a70ca20f3e94635a9c7" prot="protected" virt="non-virtual"><scope>AllocatedReservoir</scope><name>wastewater_inflow</name></member>
      <member refid="classWaterSource_1a27b9d29d6cbb36d128f740f7ca00f500" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>WaterSource</name></member>
      <member refid="classWaterSource_1a7723d343a0b8edff36018ca7acf09f62" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>WaterSource</name></member>
      <member refid="classWaterSource_1a48641ff06b69505ab298f4f23e759a22" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>WaterSource</name></member>
      <member refid="classWaterSource_1a284e207f074da6f485d41f65ac025cf1" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>WaterSource</name></member>
      <member refid="classWaterSource_1ae8cf84e138983737e044bc1217858021" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>WaterSource</name></member>
      <member refid="classWaterSource_1af9377254ee532ee30eaed78953336b5f" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>WaterSource</name></member>
      <member refid="classWaterSource_1a5d02f9dc15b18572bbfa945aeec4dbb0" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>WaterSource</name></member>
      <member refid="classWaterSource_1aaa3aba0a9709cc1432f85f443b033a65" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>WaterSource</name></member>
      <member refid="classWaterSource_1acef73d9b1675fb6db9ec39347514db6d" prot="protected" virt="non-virtual"><scope>AllocatedReservoir</scope><name>wq_pool_id</name></member>
      <member refid="classAllocatedReservoir_1a3fc9aaca619a97d338449384e579900c" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>~AllocatedReservoir</name></member>
      <member refid="classReservoir_1a2f8bfdc73c7470185775a940fb3531de" prot="public" virt="non-virtual"><scope>AllocatedReservoir</scope><name>~Reservoir</name></member>
      <member refid="classWaterSource_1aa3b9261264152782c3115d2f563f1caf" prot="public" virt="virtual"><scope>AllocatedReservoir</scope><name>~WaterSource</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
