<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classMatrix" kind="class" language="C++" prot="public">
    <compoundname>Matrix</compoundname>
    <includes refid="Array_8h" local="no">Array.h</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classMatrix_afe2ef09343ff36b98618d696e7b232e3_1afe2ef09343ff36b98618d696e7b232e3" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int Matrix&lt; T &gt;::n</definition>
        <argsstring></argsstring>
        <name>n</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Utils/QPSolver/Array.h" line="607" column="1" bodyfile="src/Utils/QPSolver/Array.h" bodystart="607" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMatrix_a0a922a1712cf7e9afb32fd8fff6809df_1a0a922a1712cf7e9afb32fd8fff6809df" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int Matrix&lt; T &gt;::m</definition>
        <argsstring></argsstring>
        <name>m</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Utils/QPSolver/Array.h" line="608" column="1" bodyfile="src/Utils/QPSolver/Array.h" bodystart="608" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMatrix_a0914658ee459304d3dbcc26806038019_1a0914658ee459304d3dbcc26806038019" prot="private" static="no" mutable="no">
        <type>T **</type>
        <definition>T** Matrix&lt; T &gt;::v</definition>
        <argsstring></argsstring>
        <name>v</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Utils/QPSolver/Array.h" line="609" column="1" bodyfile="src/Utils/QPSolver/Array.h" bodystart="609" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classMatrix_a9d567e3a121b1be0c3f9c461cab524fe_1a9d567e3a121b1be0c3f9c461cab524fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Matrix&lt; T &gt;::Matrix</definition>
        <argsstring>()</argsstring>
        <name>Matrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Utils/QPSolver/Array.h" line="571" column="1" bodyfile="src/Utils/QPSolver/Array.h" bodystart="613" bodyend="615"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix_ac8061527f81abb94e19b1ac6fd4af63a_1ac8061527f81abb94e19b1ac6fd4af63a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Matrix&lt; T &gt;::Matrix</definition>
        <argsstring>(const unsigned int n, const unsigned int m)</argsstring>
        <name>Matrix</name>
        <param>
          <type>const unsigned int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Utils/QPSolver/Array.h" line="572" column="1" bodyfile="src/Utils/QPSolver/Array.h" bodystart="618" bodyend="626"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix_a697e01f8d46c2059d0420d5b420efb91_1a697e01f8d46c2059d0420d5b420efb91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Matrix&lt; T &gt;::Matrix</definition>
        <argsstring>(const T &amp;a, const unsigned int n, const unsigned int m)</argsstring>
        <name>Matrix</name>
        <param>
          <type>const T &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Utils/QPSolver/Array.h" line="573" column="1" bodyfile="src/Utils/QPSolver/Array.h" bodystart="629" bodyend="640"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix_a991881e660607b10ff4fbf705006108d_1a991881e660607b10ff4fbf705006108d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Matrix&lt; T &gt;::Matrix</definition>
        <argsstring>(MType t, const T &amp;a, const T &amp;o, const unsigned int n, const unsigned int m)</argsstring>
        <name>Matrix</name>
        <param>
          <type><ref refid="Array_8h_afb4b79601b9f07458ff37d2c507b3e6d_1afb4b79601b9f07458ff37d2c507b3e6d" kindref="member">MType</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>o</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Utils/QPSolver/Array.h" line="574" column="1" bodyfile="src/Utils/QPSolver/Array.h" bodystart="657" bodyend="678"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix_ab2f0cdfc1e7aac9ddd46a1c6b6a3f2f9_1ab2f0cdfc1e7aac9ddd46a1c6b6a3f2f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Matrix&lt; T &gt;::Matrix</definition>
        <argsstring>(MType t, const Vector&lt; T &gt; &amp;v, const T &amp;o, const unsigned int n, const unsigned int m)</argsstring>
        <name>Matrix</name>
        <param>
          <type><ref refid="Array_8h_afb4b79601b9f07458ff37d2c507b3e6d_1afb4b79601b9f07458ff37d2c507b3e6d" kindref="member">MType</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type>const <ref refid="classVector" kindref="compound">Vector</ref>&lt; T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>o</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Utils/QPSolver/Array.h" line="575" column="1" bodyfile="src/Utils/QPSolver/Array.h" bodystart="681" bodyend="702"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix_a33a507863c86bbc82e650054f1cc13b6_1a33a507863c86bbc82e650054f1cc13b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Matrix&lt; T &gt;::Matrix</definition>
        <argsstring>(const T *a, const unsigned int n, const unsigned int m)</argsstring>
        <name>Matrix</name>
        <param>
          <type>const T *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Utils/QPSolver/Array.h" line="576" column="1" bodyfile="src/Utils/QPSolver/Array.h" bodystart="643" bodyend="654"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix_a6a46705243036bfeee78fe2c84c54340_1a6a46705243036bfeee78fe2c84c54340" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Matrix&lt; T &gt;::Matrix</definition>
        <argsstring>(const Matrix&lt; T &gt; &amp;rhs)</argsstring>
        <name>Matrix</name>
        <param>
          <type>const <ref refid="classMatrix" kindref="compound">Matrix</ref>&lt; T &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Utils/QPSolver/Array.h" line="577" column="1" bodyfile="src/Utils/QPSolver/Array.h" bodystart="705" bodyend="716"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix_a91aa704de674203e96aece9e1955ccd3_1a91aa704de674203e96aece9e1955ccd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Matrix&lt; T &gt;::~Matrix</definition>
        <argsstring>()</argsstring>
        <name>~Matrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Utils/QPSolver/Array.h" line="578" column="1" bodyfile="src/Utils/QPSolver/Array.h" bodystart="719" bodyend="725"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix_a771eff354da6c0008228dc19cde4142a_1a771eff354da6c0008228dc19cde4142a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T* Matrix&lt; T &gt;::operator[]</definition>
        <argsstring>(const unsigned int &amp;i)</argsstring>
        <name>operator[]</name>
        <param>
          <type>const unsigned int &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Utils/QPSolver/Array.h" line="580" column="1" bodyfile="src/Utils/QPSolver/Array.h" bodystart="580" bodyend="580"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix_af58cf6372d17f7abf5396d32f3ef5cd7_1af58cf6372d17f7abf5396d32f3ef5cd7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T *</type>
        <definition>const T* Matrix&lt; T &gt;::operator[]</definition>
        <argsstring>(const unsigned int &amp;i) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>const unsigned int &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Utils/QPSolver/Array.h" line="581" column="1" bodyfile="src/Utils/QPSolver/Array.h" bodystart="581" bodyend="581"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix_a8d10454cfe9427269b54a754262004b8_1a8d10454cfe9427269b54a754262004b8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Matrix&lt; T &gt;::resize</definition>
        <argsstring>(const unsigned int n, const unsigned int m)</argsstring>
        <name>resize</name>
        <param>
          <type>const unsigned int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Utils/QPSolver/Array.h" line="583" column="1" bodyfile="src/Utils/QPSolver/Array.h" bodystart="756" bodyend="771"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix_ae866a1b312aa040b587b40c5f54b6a54_1ae866a1b312aa040b587b40c5f54b6a54" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Matrix&lt; T &gt;::resize</definition>
        <argsstring>(const T &amp;a, const unsigned int n, const unsigned int m)</argsstring>
        <name>resize</name>
        <param>
          <type>const T &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Utils/QPSolver/Array.h" line="584" column="1" bodyfile="src/Utils/QPSolver/Array.h" bodystart="774" bodyend="781"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix_a7dded77c0f4c424c98858b5f94c13c16_1a7dded77c0f4c424c98858b5f94c13c16" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classVector" kindref="compound">Vector</ref>&lt; T &gt;</type>
        <definition>Vector&lt; T &gt; Matrix&lt; T &gt;::extractRow</definition>
        <argsstring>(const unsigned int i) const</argsstring>
        <name>extractRow</name>
        <param>
          <type>const unsigned int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Utils/QPSolver/Array.h" line="586" column="1" bodyfile="src/Utils/QPSolver/Array.h" bodystart="784" bodyend="791"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix_a4361c4478b01f7df1173e5b64eccd127_1a4361c4478b01f7df1173e5b64eccd127" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classVector" kindref="compound">Vector</ref>&lt; T &gt;</type>
        <definition>Vector&lt; T &gt; Matrix&lt; T &gt;::extractColumn</definition>
        <argsstring>(const unsigned int j) const</argsstring>
        <name>extractColumn</name>
        <param>
          <type>const unsigned int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Utils/QPSolver/Array.h" line="587" column="1" bodyfile="src/Utils/QPSolver/Array.h" bodystart="794" bodyend="805"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix_ad025820349fa69f73f2da395af627741_1ad025820349fa69f73f2da395af627741" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int Matrix&lt; T &gt;::nrows</definition>
        <argsstring>() const</argsstring>
        <name>nrows</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Utils/QPSolver/Array.h" line="590" column="1" bodyfile="src/Utils/QPSolver/Array.h" bodystart="590" bodyend="590"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix_aa62107f075998f969b39fcb1bef20c44_1aa62107f075998f969b39fcb1bef20c44" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int Matrix&lt; T &gt;::ncols</definition>
        <argsstring>() const</argsstring>
        <name>ncols</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Utils/QPSolver/Array.h" line="591" column="1" bodyfile="src/Utils/QPSolver/Array.h" bodystart="591" bodyend="591"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix_a01990eb2552555d37c83272125be68e6_1a01990eb2552555d37c83272125be68e6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classMatrix" kindref="compound">Matrix</ref>&lt; T &gt; &amp;</type>
        <definition>Matrix&lt; T &gt; &amp; Matrix&lt; T &gt;::operator=</definition>
        <argsstring>(const Matrix&lt; T &gt; &amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classMatrix" kindref="compound">Matrix</ref>&lt; T &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Utils/QPSolver/Array.h" line="593" column="1" bodyfile="src/Utils/QPSolver/Array.h" bodystart="728" bodyend="742"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix_a603960a94121d9b35509199de88d1a92_1a603960a94121d9b35509199de88d1a92" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classMatrix" kindref="compound">Matrix</ref>&lt; T &gt; &amp;</type>
        <definition>Matrix&lt; T &gt; &amp; Matrix&lt; T &gt;::operator=</definition>
        <argsstring>(const T &amp;a)</argsstring>
        <name>operator=</name>
        <param>
          <type>const T &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Utils/QPSolver/Array.h" line="594" column="1" bodyfile="src/Utils/QPSolver/Array.h" bodystart="745" bodyend="752"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix_a36fdb87d0aa1b906eda9fa1cf81a1477_1a36fdb87d0aa1b906eda9fa1cf81a1477" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classMatrix" kindref="compound">Matrix</ref>&lt; T &gt; &amp;</type>
        <definition>Matrix&lt; T &gt; &amp; Matrix&lt; T &gt;::operator+=</definition>
        <argsstring>(const Matrix&lt; T &gt; &amp;rhs)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classMatrix" kindref="compound">Matrix</ref>&lt; T &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Utils/QPSolver/Array.h" line="595" column="1" bodyfile="src/Utils/QPSolver/Array.h" bodystart="850" bodyend="859"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix_a50e2998bc90012d77efc0ff39d089336_1a50e2998bc90012d77efc0ff39d089336" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classMatrix" kindref="compound">Matrix</ref>&lt; T &gt; &amp;</type>
        <definition>Matrix&lt; T &gt; &amp; Matrix&lt; T &gt;::operator-=</definition>
        <argsstring>(const Matrix&lt; T &gt; &amp;rhs)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="classMatrix" kindref="compound">Matrix</ref>&lt; T &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Utils/QPSolver/Array.h" line="596" column="1" bodyfile="src/Utils/QPSolver/Array.h" bodystart="913" bodyend="922"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix_af6a95588910fa9c53feaae71fe88df81_1af6a95588910fa9c53feaae71fe88df81" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classMatrix" kindref="compound">Matrix</ref>&lt; T &gt; &amp;</type>
        <definition>Matrix&lt; T &gt; &amp; Matrix&lt; T &gt;::operator*=</definition>
        <argsstring>(const Matrix&lt; T &gt; &amp;rhs)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const <ref refid="classMatrix" kindref="compound">Matrix</ref>&lt; T &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Utils/QPSolver/Array.h" line="597" column="1" bodyfile="src/Utils/QPSolver/Array.h" bodystart="970" bodyend="979"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix_aab1b305350c7547ee31f0eeb92fc8c4a_1aab1b305350c7547ee31f0eeb92fc8c4a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classMatrix" kindref="compound">Matrix</ref>&lt; T &gt; &amp;</type>
        <definition>Matrix&lt; T &gt; &amp; Matrix&lt; T &gt;::operator/=</definition>
        <argsstring>(const Matrix&lt; T &gt; &amp;rhs)</argsstring>
        <name>operator/=</name>
        <param>
          <type>const <ref refid="classMatrix" kindref="compound">Matrix</ref>&lt; T &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Utils/QPSolver/Array.h" line="598" column="1" bodyfile="src/Utils/QPSolver/Array.h" bodystart="1027" bodyend="1036"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix_acf14abe2000a4a41dae10db14b5d039c_1acf14abe2000a4a41dae10db14b5d039c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classMatrix" kindref="compound">Matrix</ref>&lt; T &gt; &amp;</type>
        <definition>Matrix&lt; T &gt; &amp; Matrix&lt; T &gt;::operator^=</definition>
        <argsstring>(const Matrix&lt; T &gt; &amp;rhs)</argsstring>
        <name>operator^=</name>
        <param>
          <type>const <ref refid="classMatrix" kindref="compound">Matrix</ref>&lt; T &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Utils/QPSolver/Array.h" line="599" column="1" bodyfile="src/Utils/QPSolver/Array.h" bodystart="1060" bodyend="1069"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix_a5aeaf1a90547b2288646d57143d5518c_1a5aeaf1a90547b2288646d57143d5518c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classMatrix" kindref="compound">Matrix</ref>&lt; T &gt; &amp;</type>
        <definition>Matrix&lt; T &gt; &amp; Matrix&lt; T &gt;::operator+=</definition>
        <argsstring>(const T &amp;a)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const T &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Utils/QPSolver/Array.h" line="600" column="1" bodyfile="src/Utils/QPSolver/Array.h" bodystart="862" bodyend="869"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix_a8776d41fcbbc1fc08425492576cf6786_1a8776d41fcbbc1fc08425492576cf6786" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classMatrix" kindref="compound">Matrix</ref>&lt; T &gt; &amp;</type>
        <definition>Matrix&lt; T &gt; &amp; Matrix&lt; T &gt;::operator-=</definition>
        <argsstring>(const T &amp;a)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const T &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Utils/QPSolver/Array.h" line="601" column="1" bodyfile="src/Utils/QPSolver/Array.h" bodystart="925" bodyend="932"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix_a9ac358ade86c1b442aa75852b2dd663a_1a9ac358ade86c1b442aa75852b2dd663a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classMatrix" kindref="compound">Matrix</ref>&lt; T &gt; &amp;</type>
        <definition>Matrix&lt; T &gt; &amp; Matrix&lt; T &gt;::operator*=</definition>
        <argsstring>(const T &amp;a)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const T &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Utils/QPSolver/Array.h" line="602" column="1" bodyfile="src/Utils/QPSolver/Array.h" bodystart="982" bodyend="989"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix_ada3039797826038262e03da2ee3a8697_1ada3039797826038262e03da2ee3a8697" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classMatrix" kindref="compound">Matrix</ref>&lt; T &gt; &amp;</type>
        <definition>Matrix&lt; T &gt; &amp; Matrix&lt; T &gt;::operator/=</definition>
        <argsstring>(const T &amp;a)</argsstring>
        <name>operator/=</name>
        <param>
          <type>const T &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Utils/QPSolver/Array.h" line="603" column="1" bodyfile="src/Utils/QPSolver/Array.h" bodystart="1039" bodyend="1046"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix_af35faeb39342bf42c4470cf10630e32f_1af35faeb39342bf42c4470cf10630e32f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classMatrix" kindref="compound">Matrix</ref>&lt; T &gt; &amp;</type>
        <definition>Matrix&lt; T &gt; &amp; Matrix&lt; T &gt;::operator^=</definition>
        <argsstring>(const T &amp;a)</argsstring>
        <name>operator^=</name>
        <param>
          <type>const T &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Utils/QPSolver/Array.h" line="604" column="1" bodyfile="src/Utils/QPSolver/Array.h" bodystart="1073" bodyend="1080"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix_a8d390e8b2581c65774f58a0a3b716dcb_1a8d390e8b2581c65774f58a0a3b716dcb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Matrix&lt; T &gt;::operator Vector&lt; T &gt;</definition>
        <argsstring>()</argsstring>
        <name>operator Vector&lt; T &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Utils/QPSolver/Array.h" line="605" column="1" bodyfile="src/Utils/QPSolver/Array.h" bodystart="1083" bodyend="1091"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/Utils/QPSolver/Array.h" line="569" column="1" bodyfile="src/Utils/QPSolver/Array.h" bodystart="568" bodyend="610"/>
    <listofallmembers>
      <member refid="classMatrix_a4361c4478b01f7df1173e5b64eccd127_1a4361c4478b01f7df1173e5b64eccd127" prot="public" virt="non-virtual"><scope>Matrix</scope><name>extractColumn</name></member>
      <member refid="classMatrix_a7dded77c0f4c424c98858b5f94c13c16_1a7dded77c0f4c424c98858b5f94c13c16" prot="public" virt="non-virtual"><scope>Matrix</scope><name>extractRow</name></member>
      <member refid="classMatrix_a0a922a1712cf7e9afb32fd8fff6809df_1a0a922a1712cf7e9afb32fd8fff6809df" prot="private" virt="non-virtual"><scope>Matrix</scope><name>m</name></member>
      <member refid="classMatrix_a9d567e3a121b1be0c3f9c461cab524fe_1a9d567e3a121b1be0c3f9c461cab524fe" prot="public" virt="non-virtual"><scope>Matrix</scope><name>Matrix</name></member>
      <member refid="classMatrix_ac8061527f81abb94e19b1ac6fd4af63a_1ac8061527f81abb94e19b1ac6fd4af63a" prot="public" virt="non-virtual"><scope>Matrix</scope><name>Matrix</name></member>
      <member refid="classMatrix_a697e01f8d46c2059d0420d5b420efb91_1a697e01f8d46c2059d0420d5b420efb91" prot="public" virt="non-virtual"><scope>Matrix</scope><name>Matrix</name></member>
      <member refid="classMatrix_a991881e660607b10ff4fbf705006108d_1a991881e660607b10ff4fbf705006108d" prot="public" virt="non-virtual"><scope>Matrix</scope><name>Matrix</name></member>
      <member refid="classMatrix_ab2f0cdfc1e7aac9ddd46a1c6b6a3f2f9_1ab2f0cdfc1e7aac9ddd46a1c6b6a3f2f9" prot="public" virt="non-virtual"><scope>Matrix</scope><name>Matrix</name></member>
      <member refid="classMatrix_a33a507863c86bbc82e650054f1cc13b6_1a33a507863c86bbc82e650054f1cc13b6" prot="public" virt="non-virtual"><scope>Matrix</scope><name>Matrix</name></member>
      <member refid="classMatrix_a6a46705243036bfeee78fe2c84c54340_1a6a46705243036bfeee78fe2c84c54340" prot="public" virt="non-virtual"><scope>Matrix</scope><name>Matrix</name></member>
      <member refid="classMatrix_afe2ef09343ff36b98618d696e7b232e3_1afe2ef09343ff36b98618d696e7b232e3" prot="private" virt="non-virtual"><scope>Matrix</scope><name>n</name></member>
      <member refid="classMatrix_aa62107f075998f969b39fcb1bef20c44_1aa62107f075998f969b39fcb1bef20c44" prot="public" virt="non-virtual"><scope>Matrix</scope><name>ncols</name></member>
      <member refid="classMatrix_ad025820349fa69f73f2da395af627741_1ad025820349fa69f73f2da395af627741" prot="public" virt="non-virtual"><scope>Matrix</scope><name>nrows</name></member>
      <member refid="classMatrix_a8d390e8b2581c65774f58a0a3b716dcb_1a8d390e8b2581c65774f58a0a3b716dcb" prot="public" virt="non-virtual"><scope>Matrix</scope><name>operator Vector&lt; T &gt;</name></member>
      <member refid="classMatrix_af6a95588910fa9c53feaae71fe88df81_1af6a95588910fa9c53feaae71fe88df81" prot="public" virt="non-virtual"><scope>Matrix</scope><name>operator*=</name></member>
      <member refid="classMatrix_a9ac358ade86c1b442aa75852b2dd663a_1a9ac358ade86c1b442aa75852b2dd663a" prot="public" virt="non-virtual"><scope>Matrix</scope><name>operator*=</name></member>
      <member refid="classMatrix_a36fdb87d0aa1b906eda9fa1cf81a1477_1a36fdb87d0aa1b906eda9fa1cf81a1477" prot="public" virt="non-virtual"><scope>Matrix</scope><name>operator+=</name></member>
      <member refid="classMatrix_a5aeaf1a90547b2288646d57143d5518c_1a5aeaf1a90547b2288646d57143d5518c" prot="public" virt="non-virtual"><scope>Matrix</scope><name>operator+=</name></member>
      <member refid="classMatrix_a50e2998bc90012d77efc0ff39d089336_1a50e2998bc90012d77efc0ff39d089336" prot="public" virt="non-virtual"><scope>Matrix</scope><name>operator-=</name></member>
      <member refid="classMatrix_a8776d41fcbbc1fc08425492576cf6786_1a8776d41fcbbc1fc08425492576cf6786" prot="public" virt="non-virtual"><scope>Matrix</scope><name>operator-=</name></member>
      <member refid="classMatrix_aab1b305350c7547ee31f0eeb92fc8c4a_1aab1b305350c7547ee31f0eeb92fc8c4a" prot="public" virt="non-virtual"><scope>Matrix</scope><name>operator/=</name></member>
      <member refid="classMatrix_ada3039797826038262e03da2ee3a8697_1ada3039797826038262e03da2ee3a8697" prot="public" virt="non-virtual"><scope>Matrix</scope><name>operator/=</name></member>
      <member refid="classMatrix_a01990eb2552555d37c83272125be68e6_1a01990eb2552555d37c83272125be68e6" prot="public" virt="non-virtual"><scope>Matrix</scope><name>operator=</name></member>
      <member refid="classMatrix_a603960a94121d9b35509199de88d1a92_1a603960a94121d9b35509199de88d1a92" prot="public" virt="non-virtual"><scope>Matrix</scope><name>operator=</name></member>
      <member refid="classMatrix_a771eff354da6c0008228dc19cde4142a_1a771eff354da6c0008228dc19cde4142a" prot="public" virt="non-virtual"><scope>Matrix</scope><name>operator[]</name></member>
      <member refid="classMatrix_af58cf6372d17f7abf5396d32f3ef5cd7_1af58cf6372d17f7abf5396d32f3ef5cd7" prot="public" virt="non-virtual"><scope>Matrix</scope><name>operator[]</name></member>
      <member refid="classMatrix_acf14abe2000a4a41dae10db14b5d039c_1acf14abe2000a4a41dae10db14b5d039c" prot="public" virt="non-virtual"><scope>Matrix</scope><name>operator^=</name></member>
      <member refid="classMatrix_af35faeb39342bf42c4470cf10630e32f_1af35faeb39342bf42c4470cf10630e32f" prot="public" virt="non-virtual"><scope>Matrix</scope><name>operator^=</name></member>
      <member refid="classMatrix_a8d10454cfe9427269b54a754262004b8_1a8d10454cfe9427269b54a754262004b8" prot="public" virt="non-virtual"><scope>Matrix</scope><name>resize</name></member>
      <member refid="classMatrix_ae866a1b312aa040b587b40c5f54b6a54_1ae866a1b312aa040b587b40c5f54b6a54" prot="public" virt="non-virtual"><scope>Matrix</scope><name>resize</name></member>
      <member refid="classMatrix_a0914658ee459304d3dbcc26806038019_1a0914658ee459304d3dbcc26806038019" prot="private" virt="non-virtual"><scope>Matrix</scope><name>v</name></member>
      <member refid="classMatrix_a91aa704de674203e96aece9e1955ccd3_1a91aa704de674203e96aece9e1955ccd3" prot="public" virt="non-virtual"><scope>Matrix</scope><name>~Matrix</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
