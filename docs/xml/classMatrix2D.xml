<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classMatrix2D" kind="class" language="C++" prot="public">
    <compoundname>Matrix2D</compoundname>
    <includes refid="Matrices_8h" local="no">Matrices.h</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classMatrix2D_1ad9c316f4e27753ab30164f90f9dfaee9" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Matrix2D&lt; T &gt;::di_</definition>
        <argsstring></argsstring>
        <name>di_</name>
        <briefdescription>
<para>The number of rows in the matrix. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/Matrices.h" line="26" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/Matrices.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMatrix2D_1a69fb005b681e8740654e28616560a780" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Matrix2D&lt; T &gt;::dj_</definition>
        <argsstring></argsstring>
        <name>dj_</name>
        <briefdescription>
<para>The number of columns in the matrix. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/Matrices.h" line="30" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/Matrices.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMatrix2D_1af6db5a4e311ea727f52f16a7fb15a055" prot="private" static="no" mutable="no">
        <type>unique_ptr&lt; T[]&gt;</type>
        <definition>unique_ptr&lt;T[]&gt; Matrix2D&lt; T &gt;::data_</definition>
        <argsstring></argsstring>
        <name>data_</name>
        <briefdescription>
<para>The data of the matrix. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/Matrices.h" line="34" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/Matrices.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMatrix2D_1a4138aec11153780128a8d93a3ef06576" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Matrix2D&lt; T &gt;::not_initialized</definition>
        <argsstring></argsstring>
        <name>not_initialized</name>
        <initializer>= true</initializer>
        <briefdescription>
<para>A flag to indicate if the matrix has been initialized. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/Matrices.h" line="38" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/Matrices.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classMatrix2D_1a950bb2aa76c86e057d91f430d5a27b57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Matrix2D&lt; T &gt;::Matrix2D</definition>
        <argsstring>()</argsstring>
        <name>Matrix2D</name>
        <briefdescription>
<para>Default constructor for a new <ref refid="classMatrix" kindref="compound">Matrix</ref> 2 D&lt; T&gt;:: <ref refid="classMatrix" kindref="compound">Matrix</ref> 2 D object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The datatype stored in the 2D matrix. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/Matrices.h" line="40" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/Matrices.h" bodystart="114" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix2D_1ac93acc71341e612cf8b23d4308c561f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Matrix2D&lt; T &gt;::Matrix2D</definition>
        <argsstring>(int di, int dj)</argsstring>
        <name>Matrix2D</name>
        <param>
          <type>int</type>
          <declname>di</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dj</declname>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="classMatrix" kindref="compound">Matrix</ref> 2 D&lt; T&gt;:: <ref refid="classMatrix" kindref="compound">Matrix</ref> 2 D object with specified dimensions. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The datatype stored in the 2D matrix. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>di</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of rows in the matrix. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dj</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of columns in the matrix.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>length_error</parametername>
</parameternamelist>
<parameterdescription>
<para>If either di or dj are 0. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/Matrices.h" line="42" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/Matrices.h" bodystart="85" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix2D_1abcb61863666c4e17352c9fd2fc0a254a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T &amp; Matrix2D&lt; T &gt;::operator()</definition>
        <argsstring>(int i, int j)</argsstring>
        <name>operator()</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>a subscript operator that returns a reference to the element at position (i, j) in the matrix. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The datatype stored in the 2D matrix. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>The row index. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>The column index. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>T&amp;</para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>length_error</parametername>
</parameternamelist>
<parameterdescription>
<para>If the indices are out of bounds. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/Matrices.h" line="44" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/Matrices.h" bodystart="192" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix2D_1a1a14d98d090d0d1cbda97a8fa797f1c5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T Matrix2D&lt; T &gt;::operator()</definition>
        <argsstring>(int i, int j) const</argsstring>
        <name>operator()</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>a subscript operator that returns a reference to the element at position (i, j) in the matrix without changing the original matrix. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The datatype stored in the 2D matrix. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>The row index. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>The column index. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>T&amp;</para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>length_error</parametername>
</parameternamelist>
<parameterdescription>
<para>If the indices are out of bounds. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/Matrices.h" line="45" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/Matrices.h" bodystart="214" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix2D_1a6b86d001220161af2136ba49fd8b26b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Matrix2D&lt; T &gt;::~Matrix2D</definition>
        <argsstring>()</argsstring>
        <name>~Matrix2D</name>
        <briefdescription>
<para>Destructor for a <ref refid="classMatrix" kindref="compound">Matrix</ref> 2 D&lt; T&gt;:: <ref refid="classMatrix" kindref="compound">Matrix</ref> 2 D object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The datatype stored in the 2D matrix. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/Matrices.h" line="47" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/Matrices.h" bodystart="122" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix2D_1aa1d3642d7cea07adac1a7bd83586d292" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Matrix2D&lt; T &gt;::Matrix2D</definition>
        <argsstring>(const Matrix2D &amp;m)</argsstring>
        <name>Matrix2D</name>
        <param>
          <type>const <ref refid="classMatrix2D" kindref="compound">Matrix2D</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Copy constructor for a new <ref refid="classMatrix" kindref="compound">Matrix</ref> 2 D&lt; T&gt;:: <ref refid="classMatrix" kindref="compound">Matrix</ref> 2 D object by copying another matrix. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The datatype stored in the 2D matrix. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>The matrix to be copied.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>length_error</parametername>
</parameternamelist>
<parameterdescription>
<para>If either di or dj of the original matrix are 0. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/Matrices.h" line="48" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/Matrices.h" bodystart="101" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix2D_1a17597829237784fa6089a23b7accb631" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMatrix2D" kindref="compound">Matrix2D</ref>&lt; T &gt; &amp;</type>
        <definition>Matrix2D&lt; T &gt; &amp; Matrix2D&lt; T &gt;::operator=</definition>
        <argsstring>(const Matrix2D&lt; T &gt; &amp;m)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classMatrix2D" kindref="compound">Matrix2D</ref>&lt; T &gt; &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Assignment operator for a <ref refid="classMatrix" kindref="compound">Matrix</ref> 2 D&lt; T&gt;:: <ref refid="classMatrix" kindref="compound">Matrix</ref> 2 D object. This operator copies the data from another matrix to this matrix, assigning the values in the original matrix to this matrix. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The datatype stored in the 2D matrix. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>The matrix to be copied. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Matrix2D&lt;T&gt;&amp; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/Matrices.h" line="49" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/Matrices.h" bodystart="133" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix2D_1a05b92232d9a5e7b76c4d4c1508ae2e12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMatrix2D" kindref="compound">Matrix2D</ref>&lt; T &gt; &amp;</type>
        <definition>Matrix2D&lt; T &gt; &amp; Matrix2D&lt; T &gt;::operator+=</definition>
        <argsstring>(const Matrix2D&lt; T &gt; &amp;m)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classMatrix2D" kindref="compound">Matrix2D</ref>&lt; T &gt; &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>In-place addition operator that adds each element in the matrix to the corresponding element in another matrix. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The datatype stored in the 2D matrix.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>The matrix to be added to the current matrix. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Matrix2D&lt;T&gt;&amp;</para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>length_error</parametername>
</parameternamelist>
<parameterdescription>
<para>If the dimensions of the two matrices are different. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/Matrices.h" line="50" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/Matrices.h" bodystart="154" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix2D_1a48122f2fa79bf511d0c4e143dcdb0cf0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMatrix2D" kindref="compound">Matrix2D</ref>&lt; T &gt; &amp;</type>
        <definition>Matrix2D&lt; T &gt; &amp; Matrix2D&lt; T &gt;::operator/</definition>
        <argsstring>(const double m)</argsstring>
        <name>operator/</name>
        <param>
          <type>const double</type>
          <declname>m</declname>
          <defname>n</defname>
        </param>
        <briefdescription>
<para>Division operator that divides each element in the matrix by a scalar. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The datatype stored in the 2D matrix. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>The constant used to divide each element in the matrix. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Matrix2D&lt;T&gt;&amp; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/Matrices.h" line="52" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/Matrices.h" bodystart="173" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix2D_1a1a646829a2e9d166e0e47439de633b95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Matrix2D&lt; T &gt;::reset</definition>
        <argsstring>(T value)</argsstring>
        <name>reset</name>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set all elements in the matrix to a specific value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The datatype stored in the 2D matrix. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to which all elements in the matrix will be set.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/Matrices.h" line="54" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/Matrices.h" bodystart="301" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix2D_1a27ccf42f23c568b2397b744ec32a41d1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Matrix2D&lt; T &gt;::print</definition>
        <argsstring>(int i) const</argsstring>
        <name>print</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Print the i-th row of the matrix. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The datatype stored in the 2D matrix. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>The row index.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/Matrices.h" line="56" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/Matrices.h" bodystart="233" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix2D_1a9d44e60eef0274c20ed9bd1f597c89eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Matrix2D&lt; T &gt;::get_i</definition>
        <argsstring>()</argsstring>
        <name>get_i</name>
        <briefdescription>
<para>Get the number of rows in the matrix. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The datatype stored in the 2D matrix. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/Matrices.h" line="58" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/Matrices.h" bodystart="312" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix2D_1a30918dfce713408a9b3188bea33dbb57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Matrix2D&lt; T &gt;::get_j</definition>
        <argsstring>()</argsstring>
        <name>get_j</name>
        <briefdescription>
<para>Get the number of columns in the matrix. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The datatype stored in the 2D matrix. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/Matrices.h" line="60" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/Matrices.h" bodystart="323" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix2D_1a5fd8ff857d4554c8fed6ca1ca2f1e87d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Matrix2D&lt; T &gt;::empty</definition>
        <argsstring>()</argsstring>
        <name>empty</name>
        <briefdescription>
<para>A flag to indicate if the matrix has been initialized. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The datatype stored in the 2D matrix. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the matrix has not been initialized, false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/Matrices.h" line="62" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/Matrices.h" bodystart="334" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix2D_1a2a0f91e493892f9c56e98d1e20dcd465" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Matrix2D&lt; T &gt;::setPartialData</definition>
        <argsstring>(int i, T *data, unsigned long length)</argsstring>
        <name>setPartialData</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Set a portion of the matrix to specific values provided by the data. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The datatype stored in the 2D matrix. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>The row index where the data will be set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The data to be set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>The length of the data.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void</para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>length_error</parametername>
</parameternamelist>
<parameterdescription>
<para>If the indices are out of bounds. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/Matrices.h" line="64" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/Matrices.h" bodystart="273" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix2D_1a28515c515652637734a22a3440e80258" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Matrix2D&lt; T &gt;::setData</definition>
        <argsstring>(T *data, int length)</argsstring>
        <name>setData</name>
        <param>
          <type>T *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Set all elements in the matrix to specific values provided by the data. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The datatype stored in the 2D matrix. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to which all elements in the matrix will be set.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void</para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>throw_with_nested</parametername>
</parameternamelist>
<parameterdescription>
<para>If the size of the data does not match the size of the matrix. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/Matrices.h" line="66" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/Matrices.h" bodystart="251" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix2D_1ac3d6fbe385374e65ce00a34be5a7d323" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>T *</type>
        <definition>T * Matrix2D&lt; T &gt;::getPointerToElement</definition>
        <argsstring>(int i, int j) const</argsstring>
        <name>getPointerToElement</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Get the memory address of the element at position (i, j) in the matrix. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The datatype stored in the 2D matrix. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>The row index. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>The column index. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>T* </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/Matrices.h" line="68" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/Matrices.h" bodystart="288" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix2D_1a2bd34bc1808af36aa3dce5af143ce304" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Matrix2D&lt; T &gt;::add_to_position</definition>
        <argsstring>(int i, int j, T *data, int length)</argsstring>
        <name>add_to_position</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Adds a sequence of values to a specified position in a 2D matrix. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The datatype stored in the 2D matrix. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>The row index. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>The column index. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the array of values to be added. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>The length of the data array. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/Matrices.h" line="70" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/Matrices.h" bodystart="348" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="classMatrix2D_1a2cd319270ca890e47dad636b9af34a11" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const vector&lt; vector&lt; T &gt; &gt;</type>
        <definition>const vector&lt; vector&lt; T &gt; &gt; Matrix2D&lt; T &gt;::get_vector</definition>
        <argsstring>() const</argsstring>
        <name>get_vector</name>
        <briefdescription>
<para>Converts the 2D matrix into a nested vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The datatype stored in the 2D matrix. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>const vector&lt;vector&lt;T&gt;&gt; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/Matrices.h" line="72" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/Matrices.h" bodystart="363" bodyend="375"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/Matrices.h" line="21" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/Utils/Matrices.h" bodystart="21" bodyend="73"/>
    <listofallmembers>
      <member refid="classMatrix2D_1a2bd34bc1808af36aa3dce5af143ce304" prot="public" virt="non-virtual"><scope>Matrix2D</scope><name>add_to_position</name></member>
      <member refid="classMatrix2D_1af6db5a4e311ea727f52f16a7fb15a055" prot="private" virt="non-virtual"><scope>Matrix2D</scope><name>data_</name></member>
      <member refid="classMatrix2D_1ad9c316f4e27753ab30164f90f9dfaee9" prot="private" virt="non-virtual"><scope>Matrix2D</scope><name>di_</name></member>
      <member refid="classMatrix2D_1a69fb005b681e8740654e28616560a780" prot="private" virt="non-virtual"><scope>Matrix2D</scope><name>dj_</name></member>
      <member refid="classMatrix2D_1a5fd8ff857d4554c8fed6ca1ca2f1e87d" prot="public" virt="non-virtual"><scope>Matrix2D</scope><name>empty</name></member>
      <member refid="classMatrix2D_1a9d44e60eef0274c20ed9bd1f597c89eb" prot="public" virt="non-virtual"><scope>Matrix2D</scope><name>get_i</name></member>
      <member refid="classMatrix2D_1a30918dfce713408a9b3188bea33dbb57" prot="public" virt="non-virtual"><scope>Matrix2D</scope><name>get_j</name></member>
      <member refid="classMatrix2D_1a2cd319270ca890e47dad636b9af34a11" prot="public" virt="non-virtual"><scope>Matrix2D</scope><name>get_vector</name></member>
      <member refid="classMatrix2D_1ac3d6fbe385374e65ce00a34be5a7d323" prot="public" virt="non-virtual"><scope>Matrix2D</scope><name>getPointerToElement</name></member>
      <member refid="classMatrix2D_1a950bb2aa76c86e057d91f430d5a27b57" prot="public" virt="non-virtual"><scope>Matrix2D</scope><name>Matrix2D</name></member>
      <member refid="classMatrix2D_1ac93acc71341e612cf8b23d4308c561f8" prot="public" virt="non-virtual"><scope>Matrix2D</scope><name>Matrix2D</name></member>
      <member refid="classMatrix2D_1aa1d3642d7cea07adac1a7bd83586d292" prot="public" virt="non-virtual"><scope>Matrix2D</scope><name>Matrix2D</name></member>
      <member refid="classMatrix2D_1a4138aec11153780128a8d93a3ef06576" prot="private" virt="non-virtual"><scope>Matrix2D</scope><name>not_initialized</name></member>
      <member refid="classMatrix2D_1abcb61863666c4e17352c9fd2fc0a254a" prot="public" virt="non-virtual"><scope>Matrix2D</scope><name>operator()</name></member>
      <member refid="classMatrix2D_1a1a14d98d090d0d1cbda97a8fa797f1c5" prot="public" virt="non-virtual"><scope>Matrix2D</scope><name>operator()</name></member>
      <member refid="classMatrix2D_1a05b92232d9a5e7b76c4d4c1508ae2e12" prot="public" virt="non-virtual"><scope>Matrix2D</scope><name>operator+=</name></member>
      <member refid="classMatrix2D_1a48122f2fa79bf511d0c4e143dcdb0cf0" prot="public" virt="non-virtual"><scope>Matrix2D</scope><name>operator/</name></member>
      <member refid="classMatrix2D_1a17597829237784fa6089a23b7accb631" prot="public" virt="non-virtual"><scope>Matrix2D</scope><name>operator=</name></member>
      <member refid="classMatrix2D_1a27ccf42f23c568b2397b744ec32a41d1" prot="public" virt="non-virtual"><scope>Matrix2D</scope><name>print</name></member>
      <member refid="classMatrix2D_1a1a646829a2e9d166e0e47439de633b95" prot="public" virt="non-virtual"><scope>Matrix2D</scope><name>reset</name></member>
      <member refid="classMatrix2D_1a28515c515652637734a22a3440e80258" prot="public" virt="non-virtual"><scope>Matrix2D</scope><name>setData</name></member>
      <member refid="classMatrix2D_1a2a0f91e493892f9c56e98d1e20dcd465" prot="public" virt="non-virtual"><scope>Matrix2D</scope><name>setPartialData</name></member>
      <member refid="classMatrix2D_1a6b86d001220161af2136ba49fd8b26b9" prot="public" virt="non-virtual"><scope>Matrix2D</scope><name>~Matrix2D</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
