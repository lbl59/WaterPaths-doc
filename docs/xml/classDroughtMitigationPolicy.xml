<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classDroughtMitigationPolicy" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>DroughtMitigationPolicy</compoundname>
    <derivedcompoundref refid="classInsuranceStorageToROF" prot="public" virt="non-virtual">InsuranceStorageToROF</derivedcompoundref>
    <derivedcompoundref refid="classRestrictions" prot="public" virt="non-virtual">Restrictions</derivedcompoundref>
    <derivedcompoundref refid="classTransfers" prot="public" virt="non-virtual">Transfers</derivedcompoundref>
    <includes refid="DroughtMitigationPolicy_8h" local="no">DroughtMitigationPolicy.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classDroughtMitigationPolicy_1aa7d724adcd8ebcd5641de13b8f08098c" prot="private" static="no" mutable="no">
        <type>vector&lt; <ref refid="classMatrix2D" kindref="compound">Matrix2D</ref>&lt; double &gt; &gt; *</type>
        <definition>vector&lt;Matrix2D&lt;double&gt; &gt;* DroughtMitigationPolicy::storage_to_rof_table_</definition>
        <argsstring></argsstring>
        <name>storage_to_rof_table_</name>
        <briefdescription>
<para>A vector of 2D matrices that maps the storage of a utility to the ROF of that utility. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/DroughtMitigationInstruments/Base/DroughtMitigationPolicy.h" line="21" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/DroughtMitigationInstruments/Base/DroughtMitigationPolicy.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classDroughtMitigationPolicy_1ad19fbc5a9fdf17ed50c0ba0b99d47eca" prot="protected" static="no" mutable="no">
        <type>vector&lt; int &gt;</type>
        <definition>vector&lt;int&gt; DroughtMitigationPolicy::utilities_ids</definition>
        <argsstring></argsstring>
        <name>utilities_ids</name>
        <briefdescription>
<para>A vector of the utility IDs associated with the <ref refid="classDroughtMitigationPolicy" kindref="compound">DroughtMitigationPolicy</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/DroughtMitigationInstruments/Base/DroughtMitigationPolicy.h" line="39" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/DroughtMitigationInstruments/Base/DroughtMitigationPolicy.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDroughtMitigationPolicy_1af6e5787a58017804d8598effbeeaba8e" prot="protected" static="no" mutable="no">
        <type>vector&lt; <ref refid="classUtility" kindref="compound">Utility</ref> * &gt;</type>
        <definition>vector&lt;Utility *&gt; DroughtMitigationPolicy::realization_utilities</definition>
        <argsstring></argsstring>
        <name>realization_utilities</name>
        <briefdescription>
<para>A vector of pointers to the utilities associated with the <ref refid="classDroughtMitigationPolicy" kindref="compound">DroughtMitigationPolicy</ref> in a given realization. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/DroughtMitigationInstruments/Base/DroughtMitigationPolicy.h" line="43" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/DroughtMitigationInstruments/Base/DroughtMitigationPolicy.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDroughtMitigationPolicy_1ae2104e99c421513902ba66d012484c0e" prot="protected" static="no" mutable="no">
        <type>vector&lt; <ref refid="classWaterSource" kindref="compound">WaterSource</ref> * &gt;</type>
        <definition>vector&lt;WaterSource *&gt; DroughtMitigationPolicy::realization_water_sources</definition>
        <argsstring></argsstring>
        <name>realization_water_sources</name>
        <briefdescription>
<para>A vector of pointers to the water sources associated with the <ref refid="classDroughtMitigationPolicy" kindref="compound">DroughtMitigationPolicy</ref> in a given realization. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/DroughtMitigationInstruments/Base/DroughtMitigationPolicy.h" line="47" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/DroughtMitigationInstruments/Base/DroughtMitigationPolicy.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDroughtMitigationPolicy_1af583979405bc5d530ee576df8a6e9324" prot="protected" static="no" mutable="no">
        <type>vector&lt; <ref refid="classMinEnvFlowControl" kindref="compound">MinEnvFlowControl</ref> * &gt;</type>
        <definition>vector&lt;MinEnvFlowControl *&gt; DroughtMitigationPolicy::realization_min_env_flow_controls</definition>
        <argsstring></argsstring>
        <name>realization_min_env_flow_controls</name>
        <briefdescription>
<para>A vector of pointers to the MinEnvFlowControls associated with the <ref refid="classDroughtMitigationPolicy" kindref="compound">DroughtMitigationPolicy</ref> in a given realization. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/DroughtMitigationInstruments/Base/DroughtMitigationPolicy.h" line="51" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/DroughtMitigationInstruments/Base/DroughtMitigationPolicy.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDroughtMitigationPolicy_1a4c5a2dc2aa3a1c7550cdb17045e1fef3" prot="protected" static="no" mutable="no">
        <type>vector&lt; vector&lt; double &gt; &gt; *</type>
        <definition>vector&lt;vector&lt;double&gt; &gt;* DroughtMitigationPolicy::rdm_factors_all</definition>
        <argsstring></argsstring>
        <name>rdm_factors_all</name>
        <briefdescription>
<para>A 2D vector of pointers to the RDM factors for all utilities associated with the <ref refid="classDroughtMitigationPolicy" kindref="compound">DroughtMitigationPolicy</ref> in a given realization. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/DroughtMitigationInstruments/Base/DroughtMitigationPolicy.h" line="55" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/DroughtMitigationInstruments/Base/DroughtMitigationPolicy.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDroughtMitigationPolicy_1abef5c917bbc076514fe61bfebbd0e4fc" prot="protected" static="no" mutable="no">
        <type>double *</type>
        <definition>double* DroughtMitigationPolicy::rdm_factors_realization</definition>
        <argsstring></argsstring>
        <name>rdm_factors_realization</name>
        <briefdescription>
<para>A pointer to the RDM factors for the current realization. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/DroughtMitigationInstruments/Base/DroughtMitigationPolicy.h" line="59" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/DroughtMitigationInstruments/Base/DroughtMitigationPolicy.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDroughtMitigationPolicy_1ace2a2425f6608c34a3189c11445978a1" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool DroughtMitigationPolicy::use_imported_tables</definition>
        <argsstring></argsstring>
        <name>use_imported_tables</name>
        <briefdescription>
<para>A boolean flag indicating whether to use imported ROF tables. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/DroughtMitigationInstruments/Base/DroughtMitigationPolicy.h" line="63" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/DroughtMitigationInstruments/Base/DroughtMitigationPolicy.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classDroughtMitigationPolicy_1abf3ed19ed98e0d74dc9ae24094be640b" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int DroughtMitigationPolicy::id</definition>
        <argsstring></argsstring>
        <name>id</name>
        <briefdescription>
<para>The unique ID of the <ref refid="classDroughtMitigationPolicy" kindref="compound">DroughtMitigationPolicy</ref> object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/DroughtMitigationInstruments/Base/DroughtMitigationPolicy.h" line="81" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/DroughtMitigationInstruments/Base/DroughtMitigationPolicy.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDroughtMitigationPolicy_1aaea5016d1462bec889cb8df85aececc6" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int DroughtMitigationPolicy::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
<para>The type of <ref refid="classDroughtMitigationPolicy" kindref="compound">DroughtMitigationPolicy</ref> object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/DroughtMitigationInstruments/Base/DroughtMitigationPolicy.h" line="85" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/DroughtMitigationInstruments/Base/DroughtMitigationPolicy.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classDroughtMitigationPolicy_1aaf0715876ce33a75c7db92e50523ea0c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DroughtMitigationPolicy::DroughtMitigationPolicy</definition>
        <argsstring>(const DroughtMitigationPolicy &amp;drought_mitigation_policy)</argsstring>
        <name>DroughtMitigationPolicy</name>
        <param>
          <type>const <ref refid="classDroughtMitigationPolicy" kindref="compound">DroughtMitigationPolicy</ref> &amp;</type>
          <declname>drought_mitigation_policy</declname>
        </param>
        <briefdescription>
<para>Constructs a new <ref refid="classDroughtMitigationPolicy" kindref="compound">DroughtMitigationPolicy</ref> object by copying an existing one. This function initializes a new <ref refid="classDroughtMitigationPolicy" kindref="compound">DroughtMitigationPolicy</ref> object by copying the <computeroutput>id</computeroutput> and <computeroutput>type</computeroutput> attributes from another instance. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>drought_mitigation_policy</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classDroughtMitigationPolicy" kindref="compound">DroughtMitigationPolicy</ref> object to be copied.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None. This is a constructor. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/DroughtMitigationInstruments/Base/DroughtMitigationPolicy.h" line="34" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classDroughtMitigationPolicy_1a685ce7eacb01cb262d7e5245a736aa38" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double DroughtMitigationPolicy::getRofFromRealizationTable</definition>
        <argsstring>(int utility_id, int week, int tier)</argsstring>
        <name>getRofFromRealizationTable</name>
        <param>
          <type>int</type>
          <declname>utility_id</declname>
        </param>
        <param>
          <type>int</type>
          <declname>week</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tier</declname>
        </param>
        <briefdescription>
<para>Retrieves the risk-of-failure (ROF) value for a given utility, week, and tier from a given realization. This function accesses the storage-to-ROF table to fetch the corresponding ROF value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>utility_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID of the utility for which the ROF value is to be retrieved. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>week</parametername>
</parameternamelist>
<parameterdescription>
<para>The week for which the ROF value is needed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tier</parametername>
</parameternamelist>
<parameterdescription>
<para>The tier for which the ROF value is required.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The ROF value as a double for the specified utility, week, and tier from a given realization. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/DroughtMitigationInstruments/Base/DroughtMitigationPolicy.h" line="75" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classDroughtMitigationPolicy_1a00cce0117a5bc0c446727e0c0c59a8df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DroughtMitigationPolicy::DroughtMitigationPolicy</definition>
        <argsstring>(const int id, const int type)</argsstring>
        <name>DroughtMitigationPolicy</name>
        <param>
          <type>const int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Constructs a new <ref refid="classDroughtMitigationPolicy" kindref="compound">DroughtMitigationPolicy</ref> object with specified attributes. This constructor initializes a <ref refid="classDroughtMitigationPolicy" kindref="compound">DroughtMitigationPolicy</ref> object using the provided <computeroutput>id</computeroutput> and <computeroutput>type</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The unique identifier for the <ref refid="classDroughtMitigationPolicy" kindref="compound">DroughtMitigationPolicy</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the <ref refid="classDroughtMitigationPolicy" kindref="compound">DroughtMitigationPolicy</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/DroughtMitigationInstruments/Base/DroughtMitigationPolicy.h" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classDroughtMitigationPolicy_1a76c1a85eaf7707306fe173b6437cc31d" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void DroughtMitigationPolicy::applyPolicy</definition>
        <argsstring>(int week)=0</argsstring>
        <name>applyPolicy</name>
        <reimplementedby refid="classRestrictions_1a1ef7559adc034bdddd047ee776b5f9a9">applyPolicy</reimplementedby>
        <reimplementedby refid="classInsuranceStorageToROF_1a17aa84e0559793b3c463c468dfda3753">applyPolicy</reimplementedby>
        <reimplementedby refid="classTransfers_1ad9e4e83ff763ac1ba518a19051cd2e69">applyPolicy</reimplementedby>
        <param>
          <type>int</type>
          <declname>week</declname>
        </param>
        <briefdescription>
<para>Applies the Drought Mitigation Policy for a given week. </para>        </briefdescription>
        <detaileddescription>
<para>This is a purely virtual function that must be implemented by derived classes.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>week</parametername>
</parameternamelist>
<parameterdescription>
<para>The week for which to extract the Drought Mitigation Policy.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/DroughtMitigationInstruments/Base/DroughtMitigationPolicy.h" line="105" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classDroughtMitigationPolicy_1aaab042a79d781afe8e08753b7012372a" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void DroughtMitigationPolicy::addSystemComponents</definition>
        <argsstring>(vector&lt; Utility *&gt; utilities, vector&lt; WaterSource *&gt; water_sources, vector&lt; MinEnvFlowControl *&gt; min_env_flow_controls)=0</argsstring>
        <name>addSystemComponents</name>
        <reimplementedby refid="classRestrictions_1ab0a2b62495d6cdd8d1fedba419c05c37">addSystemComponents</reimplementedby>
        <reimplementedby refid="classInsuranceStorageToROF_1ac7d317a7f189739275960e4f021108d8">addSystemComponents</reimplementedby>
        <reimplementedby refid="classTransfers_1a3c1930dbeb1273c1c0be93ad5ca57357">addSystemComponents</reimplementedby>
        <param>
          <type>vector&lt; <ref refid="classUtility" kindref="compound">Utility</ref> *&gt;</type>
          <declname>utilities</declname>
        </param>
        <param>
          <type>vector&lt; <ref refid="classWaterSource" kindref="compound">WaterSource</ref> *&gt;</type>
          <declname>water_sources</declname>
        </param>
        <param>
          <type>vector&lt; <ref refid="classMinEnvFlowControl" kindref="compound">MinEnvFlowControl</ref> *&gt;</type>
          <declname>min_env_flow_controls</declname>
        </param>
        <briefdescription>
<para>Adds system components (utilities, water sources, and minimum environment flow controls) to the Drought Mitigation Policy. </para>        </briefdescription>
        <detaileddescription>
<para>This function is a purely virtual function that must be implemented by derived classes.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>utilities</parametername>
</parameternamelist>
<parameterdescription>
<para>A vector of pointers to the utilities associated with the Drought Mitigation Policy. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>water_sources</parametername>
</parameternamelist>
<parameterdescription>
<para>A vector of pointers to the water sources associated with the Drought Mitigation Policy. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>min_env_flow_controls</parametername>
</parameternamelist>
<parameterdescription>
<para>A vector of pointers to the minimum environment flow controls associated with the Drought Mitigation Policy.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/DroughtMitigationInstruments/Base/DroughtMitigationPolicy.h" line="118" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classDroughtMitigationPolicy_1a4c3940352b0092e6a4f673f72693d239" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const vector&lt; int &gt; &amp;</type>
        <definition>const vector&lt;int&gt;&amp; DroughtMitigationPolicy::getUtilities_ids</definition>
        <argsstring>() const</argsstring>
        <name>getUtilities_ids</name>
        <briefdescription>
<para>Retrieves the list of utility IDs associated with this <ref refid="classDroughtMitigationPolicy" kindref="compound">DroughtMitigationPolicy</ref>. This function returns a reference to a vector containing the utility IDs. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A constant reference to a vector of integers representing utility IDs. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/DroughtMitigationInstruments/Base/DroughtMitigationPolicy.h" line="128" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classDroughtMitigationPolicy_1a0bf7d0fa94377ae6814e529daf0204c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DroughtMitigationPolicy::operator&lt;</definition>
        <argsstring>(const DroughtMitigationPolicy *other)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="classDroughtMitigationPolicy" kindref="compound">DroughtMitigationPolicy</ref> *</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Compares two <ref refid="classDroughtMitigationPolicy" kindref="compound">DroughtMitigationPolicy</ref> objects based on their IDs. This operator checks whether the current object&apos;s ID is less than the ID of another <ref refid="classDroughtMitigationPolicy" kindref="compound">DroughtMitigationPolicy</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the <ref refid="classDroughtMitigationPolicy" kindref="compound">DroughtMitigationPolicy</ref> object to compare with.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if the current object&apos;s ID is less than the ID of the other object; otherwise, <computeroutput>false</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/DroughtMitigationInstruments/Base/DroughtMitigationPolicy.h" line="138" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classDroughtMitigationPolicy_1a576d3ddb09dc9372898a63c0949d08a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DroughtMitigationPolicy::operator&gt;</definition>
        <argsstring>(const DroughtMitigationPolicy *other)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="classDroughtMitigationPolicy" kindref="compound">DroughtMitigationPolicy</ref> *</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Compares two <ref refid="classDroughtMitigationPolicy" kindref="compound">DroughtMitigationPolicy</ref> objects based on their IDs. This operator checks whether the current object&apos;s ID is greater than the ID of another <ref refid="classDroughtMitigationPolicy" kindref="compound">DroughtMitigationPolicy</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the <ref refid="classDroughtMitigationPolicy" kindref="compound">DroughtMitigationPolicy</ref> object to compare with.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if the current object&apos;s ID is greater than the ID of the other object; otherwise, <computeroutput>false</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/DroughtMitigationInstruments/Base/DroughtMitigationPolicy.h" line="148" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classDroughtMitigationPolicy_1a9419c433241f36cbf018a5bbe3059d5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual DroughtMitigationPolicy::~DroughtMitigationPolicy</definition>
        <argsstring>()</argsstring>
        <name>~DroughtMitigationPolicy</name>
        <briefdescription>
<para>Destructor for the <ref refid="classDroughtMitigationPolicy" kindref="compound">DroughtMitigationPolicy</ref> class. This function cleans up resources used by the <ref refid="classDroughtMitigationPolicy" kindref="compound">DroughtMitigationPolicy</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/DroughtMitigationInstruments/Base/DroughtMitigationPolicy.h" line="156" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classDroughtMitigationPolicy_1a75710a6ab73213223222b3472f9251c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DroughtMitigationPolicy::setStorage_to_rof_table_</definition>
        <argsstring>(vector&lt; Matrix2D&lt; double &gt;&gt; &amp;storage_to_rof_table_, int use_imported_tables)</argsstring>
        <name>setStorage_to_rof_table_</name>
        <param>
          <type>vector&lt; <ref refid="classMatrix2D" kindref="compound">Matrix2D</ref>&lt; double &gt;&gt; &amp;</type>
          <declname>storage_to_rof_table_</declname>
        </param>
        <param>
          <type>int</type>
          <declname>use_imported_tables</declname>
        </param>
        <briefdescription>
<para>Sets the storage-to-ROF table and configuration for imported tables. This function updates the reference to the storage-to-ROF table and specifies whether imported tables are used. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>storage_to_rof_table_</parametername>
</parameternamelist>
<parameterdescription>
<para>A reference to a vector of <computeroutput><ref refid="classMatrix2D" kindref="compound">Matrix2D</ref>&lt;double&gt;</computeroutput> representing the storage-to-ROF table. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>use_imported_tables</parametername>
</parameternamelist>
<parameterdescription>
<para>An integer flag indicating whether imported tables should be used. This is compared with <computeroutput>IMPORT_ROF_TABLES</computeroutput>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/DroughtMitigationInstruments/Base/DroughtMitigationPolicy.h" line="168" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classDroughtMitigationPolicy_1a5d2033543cacca1e412eebef5106eab4" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void DroughtMitigationPolicy::setRealization</definition>
        <argsstring>(unsigned long realization_id, vector&lt; double &gt; &amp;utilities_rdm, vector&lt; double &gt; &amp;water_sources_rdm, vector&lt; double &gt; &amp;policy_rdm)=0</argsstring>
        <name>setRealization</name>
        <reimplementedby refid="classRestrictions_1abc17a8a403311933a3bb58fbecd5f5fd">setRealization</reimplementedby>
        <reimplementedby refid="classInsuranceStorageToROF_1a6318c3dca8b0c4d568eac494e5ccf712">setRealization</reimplementedby>
        <reimplementedby refid="classTransfers_1a75342a7c14b2ff69eb2520de240a1131">setRealization</reimplementedby>
        <param>
          <type>unsigned long</type>
          <declname>realization_id</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; &amp;</type>
          <declname>utilities_rdm</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; &amp;</type>
          <declname>water_sources_rdm</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; &amp;</type>
          <declname>policy_rdm</declname>
        </param>
        <briefdescription>
<para>Retrieves the risk-of-failure (ROF) value for a specified utility, week, and tier. This function accesses the storage-to-ROF table to fetch the corresponding ROF value based on the input parameters. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>utility_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID of the utility for which the ROF value is to be retrieved. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>week</parametername>
</parameternamelist>
<parameterdescription>
<para>The week for which the ROF value is needed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tier</parametername>
</parameternamelist>
<parameterdescription>
<para>The ROF tier required.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The ROF value as a <computeroutput>double</computeroutput> for the specified utility, week, and tier. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/DroughtMitigationInstruments/Base/DroughtMitigationPolicy.h" line="180" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <computeroutput><ref refid="classDroughtMitigationPolicy" kindref="compound">DroughtMitigationPolicy</ref></computeroutput> class is an abstract class that defines the interface for drought mitigation policies. Created by bernardo on 2/6/17. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="87">
        <label>Restrictions</label>
        <link refid="classRestrictions"/>
        <childnode refid="85" relation="public-inheritance">
        </childnode>
      </node>
      <node id="88">
        <label>Transfers</label>
        <link refid="classTransfers"/>
        <childnode refid="85" relation="public-inheritance">
        </childnode>
      </node>
      <node id="86">
        <label>InsuranceStorageToROF</label>
        <link refid="classInsuranceStorageToROF"/>
        <childnode refid="85" relation="public-inheritance">
        </childnode>
      </node>
      <node id="85">
        <label>DroughtMitigationPolicy</label>
        <link refid="classDroughtMitigationPolicy"/>
      </node>
    </inheritancegraph>
    <location file="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/DroughtMitigationInstruments/Base/DroughtMitigationPolicy.h" line="16" column="1" bodyfile="/home/fs02/pmr82_0001/lbl59/WaterPaths-doc/src/DroughtMitigationInstruments/Base/DroughtMitigationPolicy.h" bodystart="16" bodyend="183"/>
    <listofallmembers>
      <member refid="classDroughtMitigationPolicy_1aaab042a79d781afe8e08753b7012372a" prot="public" virt="pure-virtual"><scope>DroughtMitigationPolicy</scope><name>addSystemComponents</name></member>
      <member refid="classDroughtMitigationPolicy_1a76c1a85eaf7707306fe173b6437cc31d" prot="public" virt="pure-virtual"><scope>DroughtMitigationPolicy</scope><name>applyPolicy</name></member>
      <member refid="classDroughtMitigationPolicy_1aaf0715876ce33a75c7db92e50523ea0c" prot="protected" virt="non-virtual"><scope>DroughtMitigationPolicy</scope><name>DroughtMitigationPolicy</name></member>
      <member refid="classDroughtMitigationPolicy_1a00cce0117a5bc0c446727e0c0c59a8df" prot="public" virt="non-virtual"><scope>DroughtMitigationPolicy</scope><name>DroughtMitigationPolicy</name></member>
      <member refid="classDroughtMitigationPolicy_1a685ce7eacb01cb262d7e5245a736aa38" prot="protected" virt="non-virtual"><scope>DroughtMitigationPolicy</scope><name>getRofFromRealizationTable</name></member>
      <member refid="classDroughtMitigationPolicy_1a4c3940352b0092e6a4f673f72693d239" prot="public" virt="non-virtual"><scope>DroughtMitigationPolicy</scope><name>getUtilities_ids</name></member>
      <member refid="classDroughtMitigationPolicy_1abf3ed19ed98e0d74dc9ae24094be640b" prot="public" virt="non-virtual"><scope>DroughtMitigationPolicy</scope><name>id</name></member>
      <member refid="classDroughtMitigationPolicy_1a0bf7d0fa94377ae6814e529daf0204c4" prot="public" virt="non-virtual"><scope>DroughtMitigationPolicy</scope><name>operator&lt;</name></member>
      <member refid="classDroughtMitigationPolicy_1a576d3ddb09dc9372898a63c0949d08a6" prot="public" virt="non-virtual"><scope>DroughtMitigationPolicy</scope><name>operator&gt;</name></member>
      <member refid="classDroughtMitigationPolicy_1a4c5a2dc2aa3a1c7550cdb17045e1fef3" prot="protected" virt="non-virtual"><scope>DroughtMitigationPolicy</scope><name>rdm_factors_all</name></member>
      <member refid="classDroughtMitigationPolicy_1abef5c917bbc076514fe61bfebbd0e4fc" prot="protected" virt="non-virtual"><scope>DroughtMitigationPolicy</scope><name>rdm_factors_realization</name></member>
      <member refid="classDroughtMitigationPolicy_1af583979405bc5d530ee576df8a6e9324" prot="protected" virt="non-virtual"><scope>DroughtMitigationPolicy</scope><name>realization_min_env_flow_controls</name></member>
      <member refid="classDroughtMitigationPolicy_1af6e5787a58017804d8598effbeeaba8e" prot="protected" virt="non-virtual"><scope>DroughtMitigationPolicy</scope><name>realization_utilities</name></member>
      <member refid="classDroughtMitigationPolicy_1ae2104e99c421513902ba66d012484c0e" prot="protected" virt="non-virtual"><scope>DroughtMitigationPolicy</scope><name>realization_water_sources</name></member>
      <member refid="classDroughtMitigationPolicy_1a5d2033543cacca1e412eebef5106eab4" prot="public" virt="pure-virtual"><scope>DroughtMitigationPolicy</scope><name>setRealization</name></member>
      <member refid="classDroughtMitigationPolicy_1a75710a6ab73213223222b3472f9251c0" prot="public" virt="non-virtual"><scope>DroughtMitigationPolicy</scope><name>setStorage_to_rof_table_</name></member>
      <member refid="classDroughtMitigationPolicy_1aa7d724adcd8ebcd5641de13b8f08098c" prot="private" virt="non-virtual"><scope>DroughtMitigationPolicy</scope><name>storage_to_rof_table_</name></member>
      <member refid="classDroughtMitigationPolicy_1aaea5016d1462bec889cb8df85aececc6" prot="public" virt="non-virtual"><scope>DroughtMitigationPolicy</scope><name>type</name></member>
      <member refid="classDroughtMitigationPolicy_1ace2a2425f6608c34a3189c11445978a1" prot="protected" virt="non-virtual"><scope>DroughtMitigationPolicy</scope><name>use_imported_tables</name></member>
      <member refid="classDroughtMitigationPolicy_1ad19fbc5a9fdf17ed50c0ba0b99d47eca" prot="protected" virt="non-virtual"><scope>DroughtMitigationPolicy</scope><name>utilities_ids</name></member>
      <member refid="classDroughtMitigationPolicy_1a9419c433241f36cbf018a5bbe3059d5a" prot="public" virt="virtual"><scope>DroughtMitigationPolicy</scope><name>~DroughtMitigationPolicy</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
